[
	{
		"id": "R_kgDODK8-QA",
		"description": "cloned from xNaClys github: https://github.com/xNaCly/Odium",
		"homepageUrl": "https://github.com/xNaCly/Odium",
		"url": "https://github.com/x127f/Odium-DEPRECATED",
		"name": "Odium-DEPRECATED",
		"nameWithOwner": "x127f/Odium-DEPRECATED",
		"owner": {
			"login": "x127f"
		},
		"createdAt": "2019-10-04T12:35:24Z",
		"updatedAt": "2023-01-28T16:42:13Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/d96cc8fa448ec660dc6f90f31c74389f6d47bbfd175bd74367c8d9569a6b1b45/x127f/Odium-DEPRECATED",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": "2019-11-09T03:59:47Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 1574612,
			"edges": [
				{
					"size": 1239611,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 205996,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				},
				{
					"size": 121639,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDODK8-QLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 105
				}
			}
		},
		"object": {
			"text": "# Odium DEPRECATED\n# NO LONGER MAINTAINED\n\nDiscord Bot used to moderate\nAll features writen down in: https://github.com/socialclick/Odium-DEPRECATED/blob/master/Plan.txt\n\n\nMade by NaCl-y & Flam3rboy\n\n"
		},
		"commits": [
			{
				"committedDate": "2019-04-28T10:01:31Z",
				"message": "updated google api + web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-27T21:14:08Z",
				"message": "updated web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-27T18:45:52Z",
				"message": "delete config from github",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-27T18:42:36Z",
				"message": "ignore config",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-27T18:36:54Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-27T18:28:21Z",
				"message": "updated",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-27T18:27:54Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-26T14:37:38Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-26T14:37:38Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-26T14:37:29Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-26T14:37:29Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-26T11:15:16Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-26T11:15:16Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-25T22:38:15Z",
				"message": "updated web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-25T22:38:15Z",
				"message": "updated web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-25T12:09:22Z",
				"message": "dashboard button web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-25T12:09:22Z",
				"message": "dashboard button web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-25T11:58:56Z",
				"message": "updated web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-25T11:58:56Z",
				"message": "updated web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-24T11:06:37Z",
				"message": "web updated",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-24T11:06:37Z",
				"message": "web updated",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T18:08:40Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T18:08:40Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T18:07:18Z",
				"message": "web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T18:07:18Z",
				"message": "web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T17:54:50Z",
				"message": "web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T17:54:50Z",
				"message": "web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T17:54:19Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T17:54:19Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T16:25:51Z",
				"message": "web init",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T16:25:51Z",
				"message": "web init",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T14:36:08Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T14:36:08Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T14:29:39Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T14:29:39Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T13:34:28Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T13:34:28Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T13:34:19Z",
				"message": "web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T13:34:19Z",
				"message": "web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T10:37:24Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T10:37:24Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T10:36:14Z",
				"message": "update web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T10:36:14Z",
				"message": "update web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T08:23:39Z",
				"message": "added socket.io",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-23T08:23:39Z",
				"message": "added socket.io",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T18:22:32Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T18:22:32Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T18:21:05Z",
				"message": "message => msg",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T18:21:05Z",
				"message": "message => msg",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T17:30:20Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T17:30:20Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T17:30:14Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T17:30:14Z",
				"message": "merge",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T17:28:50Z",
				"message": "Added info cmd",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T17:28:50Z",
				"message": "Added info cmd",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T15:05:49Z",
				"message": "persistent config added",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T15:05:49Z",
				"message": "persistent config added",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T14:33:15Z",
				"message": "bug fix help cmd",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T14:33:15Z",
				"message": "bug fix help cmd",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T14:31:26Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T14:31:26Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T14:31:18Z",
				"message": "help + updated web + bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-22T14:31:18Z",
				"message": "help + updated web + bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T15:11:35Z",
				"message": "updated web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T15:11:35Z",
				"message": "updated web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T15:11:16Z",
				"message": "updated Web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T15:11:16Z",
				"message": "updated Web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T12:41:22Z",
				"message": "added web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T12:41:22Z",
				"message": "added web",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T10:25:10Z",
				"message": "playn updated",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-21T10:25:10Z",
				"message": "playn updated",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:52:58Z",
				"message": "ideen hinzugefügt",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:52:58Z",
				"message": "ideen hinzugefügt",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:28:33Z",
				"message": "added ChannelCreation",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:28:33Z",
				"message": "added ChannelCreation",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:18:57Z",
				"message": "ignore build folder",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:18:57Z",
				"message": "ignore build folder",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:18:26Z",
				"message": "music added (play, skip, stop)",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T22:18:26Z",
				"message": "music added (play, skip, stop)",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T20:23:13Z",
				"message": "welcome improve",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T20:23:13Z",
				"message": "welcome improve",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:46:48Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:46:48Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:46:12Z",
				"message": "bux fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:46:12Z",
				"message": "bux fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:44:29Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:44:29Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:42:50Z",
				"message": "bug fix 2",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:42:50Z",
				"message": "bug fix 2",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:40:36Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:40:36Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:15:46Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:15:46Z",
				"message": "Merge branch 'master' of https://github.com/NaCl-y1/Odium",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:15:23Z",
				"message": "extra",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T19:15:23Z",
				"message": "extra",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:23:10Z",
				"message": "call cmd handler",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:23:10Z",
				"message": "call cmd handler",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:21:44Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:21:44Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:21:22Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:21:22Z",
				"message": "bug fix",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:16:40Z",
				"message": "basic command handler",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T18:16:40Z",
				"message": "basic command handler",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T17:21:04Z",
				"message": "init",
				"messageBody": ""
			},
			{
				"committedDate": "2019-04-20T17:21:04Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "- **Core Updates**: \n  - Google API update\n  - Socket.io integration\n  - Persistent config addition\n  - Call cmd handler\n  - Basic command handler\n  - Bug fixes (multiple)\n\n- **Web Updates**: \n  - Dashboard button added\n  - Web interface initialization\n  - Web interface updates (multiple)\n  - Welcome message improvement\n\n- **Music Features**: \n  - Music functionality (play, skip, stop)\n\n- **Other Features**: \n  - Channel creation feature added\n  - Message command updated (message => msg)\n  - Info command added"
	},
	{
		"id": "R_kgDOEUG4aA",
		"description": "image-manipulation-api for trenite, outsourcing image generation to increase performance",
		"homepageUrl": "",
		"url": "https://github.com/x127f/image-manipulation-api",
		"name": "image-manipulation-api",
		"nameWithOwner": "x127f/image-manipulation-api",
		"owner": {
			"login": "x127f"
		},
		"createdAt": "2020-08-22T15:57:46Z",
		"updatedAt": "2023-01-28T02:46:08Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/6a4bd961f8f58d8ffee1cad09bf2d1aa09eec62f54f3f59edfa074314eddc2df/x127f/image-manipulation-api",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": "2022-02-27T07:42:32Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 216218,
			"edges": [
				{
					"size": 112878,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 80502,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 20708,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 3,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOEUG4aLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 125
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2022-02-19T09:03:14Z",
				"message": "Merge pull request #9 from x127f/dependabot/npm_and_yarn/website/url-parse-1.5.7\n\n⬆️ Bump url-parse from 1.5.1 to 1.5.7 in /website",
				"messageBody": "…parse-1.5.7\n\n⬆️ Bump url-parse from 1.5.1 to 1.5.7 in /website"
			},
			{
				"committedDate": "2022-02-15T15:09:31Z",
				"message": "Merge pull request #6 from x127f/dependabot/npm_and_yarn/simple-get-3.1.1\n\n⬆️ Bump simple-get from 3.1.0 to 3.1.1",
				"messageBody": "….1.1\n\n⬆️ Bump simple-get from 3.1.0 to 3.1.1"
			},
			{
				"committedDate": "2022-02-15T15:09:23Z",
				"message": "Merge pull request #8 from x127f/dependabot/npm_and_yarn/website/ws-6.2.2\n\n⬆️ Bump ws from 6.2.1 to 6.2.2 in /website",
				"messageBody": "….2.2\n\n⬆️ Bump ws from 6.2.1 to 6.2.2 in /website"
			},
			{
				"committedDate": "2022-02-15T15:09:16Z",
				"message": "Merge pull request #7 from x127f/dependabot/npm_and_yarn/website/ssri-6.0.2\n\n⬆️ Bump ssri from 6.0.1 to 6.0.2 in /website",
				"messageBody": "…-6.0.2\n\n⬆️ Bump ssri from 6.0.1 to 6.0.2 in /website"
			},
			{
				"committedDate": "2022-02-15T11:52:35Z",
				"message": "Merge pull request #5 from x127f/dependabot/npm_and_yarn/website/follow-redirects-1.14.8\n\n⬆️ Bump follow-redirects from 1.14.7 to 1.14.8 in /website",
				"messageBody": "…ow-redirects-1.14.8\n\n⬆️ Bump follow-redirects from 1.14.7 to 1.14.8 in /website"
			},
			{
				"committedDate": "2022-01-27T20:39:16Z",
				"message": "Merge pull request #3 from x127f/dependabot/npm_and_yarn/website/nanoid-3.2.0\n\n⬆️ Bump nanoid from 3.1.20 to 3.2.0 in /website",
				"messageBody": "…id-3.2.0\n\n⬆️ Bump nanoid from 3.1.20 to 3.2.0 in /website"
			},
			{
				"committedDate": "2022-01-27T20:39:07Z",
				"message": "Merge branch 'master' into dependabot/npm_and_yarn/website/nanoid-3.2.0",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-27T20:37:57Z",
				"message": "Merge pull request #4 from x127f/dependabot/npm_and_yarn/website/follow-redirects-1.14.7\n\n⬆️ Bump follow-redirects from 1.13.2 to 1.14.7 in /website",
				"messageBody": "…ow-redirects-1.14.7\n\n⬆️ Bump follow-redirects from 1.13.2 to 1.14.7 in /website"
			},
			{
				"committedDate": "2022-01-27T16:16:27Z",
				"message": "Merge pull request #1 from x127f/dependabot/npm_and_yarn/node-fetch-3.1.1\n\n⬆️ Bump node-fetch from 2.6.1 to 3.1.1",
				"messageBody": "….1.1\n\n⬆️ Bump node-fetch from 2.6.1 to 3.1.1"
			},
			{
				"committedDate": "2022-01-27T16:16:17Z",
				"message": "Merge pull request #2 from x127f/dependabot/npm_and_yarn/three-0.137.0\n\n⬆️ Bump three from 0.128.0 to 0.137.0",
				"messageBody": "⬆️ Bump three from 0.128.0 to 0.137.0"
			},
			{
				"committedDate": "2021-11-11T10:00:34Z",
				"message": "Update Readme.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-01T21:09:13Z",
				"message": ":sparkles: improve code generator",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-30T12:31:23Z",
				"message": ":bug: fix rank card",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-30T12:09:39Z",
				"message": ":zap: caching + error handling",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-28T21:13:02Z",
				"message": ":bug: fix build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-28T20:25:53Z",
				"message": ":sparkles: code generator",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-28T18:02:40Z",
				"message": ":bug: fix mobile",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-28T17:39:13Z",
				"message": ":sparkles: clearer ui",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T23:26:58Z",
				"message": ":bug: fix svg",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T23:06:15Z",
				"message": ":sparkles: dotenv",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T23:05:41Z",
				"message": "Merge branch 'master' of https://github.com/x127f/image-manipulation-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T23:05:39Z",
				"message": ":sparkles: different types of rankcards + fix",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T20:35:38Z",
				"message": "Update TODO.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T19:53:56Z",
				"message": ":sparkles: use generic query handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T19:53:39Z",
				"message": ":sparkles: generic query handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-26T14:25:03Z",
				"message": ":bug: cache canvas avatar",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-26T14:04:05Z",
				"message": ":bug: fix discord avatar loading",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-26T14:00:17Z",
				"message": ":bug: fix fetch file cache path",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-26T13:56:37Z",
				"message": ":bug: remove filereader",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-26T13:49:52Z",
				"message": ":arrow_up: update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T19:46:19Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T19:46:09Z",
				"message": ":zap: caching",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T19:45:56Z",
				"message": ":white_check_mark: tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T12:04:41Z",
				"message": "Merge branch 'master' of https://github.com/x127f/image-manipulation-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T12:04:40Z",
				"message": ":sparkles: server rewrite",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T12:04:24Z",
				"message": ":zap: :rocket: benchmarks + tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T12:03:56Z",
				"message": ":sparkles: add properties to RankCard",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T12:03:37Z",
				"message": ":sparkles: rank card website",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-15T07:37:28Z",
				"message": ":construction: webgl",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-22T18:56:06Z",
				"message": ":zap: benchmarks",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-20T16:30:39Z",
				"message": ":sparkles: display rank card",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-20T16:30:30Z",
				"message": "eject react",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-20T14:45:10Z",
				"message": "init react",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-19T10:58:04Z",
				"message": ":sparkles: rank card + utilities",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T23:15:00Z",
				"message": ":sparkles: Render utility class",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T23:14:51Z",
				"message": ":white_check_mark: Tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T23:14:24Z",
				"message": ":sparkles: move to src + some typescript conversion",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T12:05:42Z",
				"message": "Merge branch 'master' of https://github.com/x127f/image-manipulation-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T12:05:39Z",
				"message": ":see_no_evil: update gitignore",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T12:05:09Z",
				"message": "added and updated benchmarks",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T08:30:40Z",
				"message": "benchmarks",
				"messageBody": ""
			},
			{
				"committedDate": "2020-09-07T07:37:53Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-09-07T07:37:47Z",
				"message": ":heavy_plus_sign: [todo]",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-28T11:47:22Z",
				"message": ":bug: [fetch] wrong query signature",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-28T02:09:05Z",
				"message": ":ambulance: [server] prod issue",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T22:10:40Z",
				"message": ":bug: [fetch] fix config",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T22:01:32Z",
				"message": ":heavy_minus_sign: [font] AppleColorEmoji.ttc",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T22:00:02Z",
				"message": ":heavy_plus_sign: npm i dotenv",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T21:59:44Z",
				"message": ":sparkles: [env] file switch between production and dev",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T21:58:34Z",
				"message": ":sparkles: [fetch]",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-26T20:39:08Z",
				"message": ":bug: [status] fix background not the same as discord",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-26T20:27:31Z",
				"message": ":art: [status] added discord_basic to native",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-26T20:25:48Z",
				"message": ":tada: [font] Montserrat Medium",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-26T20:25:08Z",
				"message": ":tada: [rank] card finished",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-26T13:48:55Z",
				"message": ":sparkles: [background] added rankcard",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-26T08:24:33Z",
				"message": ":construction: [rank] first version backup",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T21:31:01Z",
				"message": ":bug: [headline] background fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T19:35:44Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-25T19:35:22Z",
				"message": "rank card",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T19:35:16Z",
				"message": ":art: improving overal structure/bugs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T19:34:23Z",
				"message": ":fire: [slots] disable",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T19:34:00Z",
				"message": "load fonts in folder",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T19:32:49Z",
				"message": ":art: [indicator] seperate dir",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T19:32:09Z",
				"message": ":tada: [drawBackground]",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T14:25:10Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-25T14:25:04Z",
				"message": ":bug: [status] fix status indicator",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T14:17:04Z",
				"message": ":bug: [welcome] fix shadow",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T14:15:47Z",
				"message": ":bug: [welcome] fix Image or Canvas expected",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T13:53:14Z",
				"message": ":art: [server] load librarys",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T13:52:23Z",
				"message": ":zap: send jpeg instead of png",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T13:52:01Z",
				"message": ":tada: [lib] drawCircleImage drawStatusIndicator loadAvatar loadBackground roundRect welcome_leave",
				"messageBody": "…round roundRect welcome_leave"
			},
			{
				"committedDate": "2020-08-25T13:50:50Z",
				"message": ":art: [template] enhancment",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T12:09:14Z",
				"message": ":sparkles: [canvas] roundRect",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T12:08:47Z",
				"message": ":sparkles: mobile + streaming indicator",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T10:59:30Z",
				"message": ":recycle: [server]",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T10:58:43Z",
				"message": ":bug: [error handler] fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T10:58:20Z",
				"message": ":recycle: [welcome] default values for parameters",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T10:57:30Z",
				"message": ":tada: load image over proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T10:56:59Z",
				"message": ":tada: draw Status Indicator",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T10:56:34Z",
				"message": ":tada: draw circle image",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-25T10:55:07Z",
				"message": ":tada: added todo list",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-24T23:47:52Z",
				"message": ":zap: cluster process",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-24T22:37:48Z",
				"message": ":bug: add config.json because its not working if its installed over npm",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-24T20:27:46Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-24T17:03:56Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-23T23:05:09Z",
				"message": "change welcome background color",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T22:31:08Z",
				"message": "ignore config",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T22:28:41Z",
				"message": "change port to 4001",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T21:55:35Z",
				"message": "fix fetch",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T19:36:03Z",
				"message": "fetch generate link",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T18:42:20Z",
				"message": "add todo to welcome",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T18:15:26Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-23T18:15:19Z",
				"message": "headline",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T12:28:40Z",
				"message": "url encode param",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T10:56:44Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-23T10:56:32Z",
				"message": "error handler",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T09:37:36Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-23T09:37:17Z",
				"message": "update Readme.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T09:26:48Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-23T09:26:00Z",
				"message": "secret in config",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T09:24:57Z",
				"message": "fetch",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T09:18:10Z",
				"message": "skip hash for development",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T09:01:38Z",
				"message": "fetch",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T08:47:59Z",
				"message": "emoji font for slots",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T08:42:36Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-23T08:41:57Z",
				"message": "secure fetch",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T08:41:42Z",
				"message": "slots",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T00:16:54Z",
				"message": "fortnite shop generation",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-22T23:49:01Z",
				"message": "verify request with hash query",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-22T21:27:11Z",
				"message": "npm i express-async-errors",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-22T21:22:23Z",
				"message": "dynamic route loading",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-22T20:44:44Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/image-manipulation-api into master",
				"messageBody": "…n-api into master"
			},
			{
				"committedDate": "2020-08-22T20:44:38Z",
				"message": "routes loader",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-22T20:29:24Z",
				"message": "init express",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-22T20:29:24Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "### Image Manipulation API Summary\n\n#### **Features**\n- Implemented rank card generator with various features (types of rank cards, SVG fix, dotenv)\n- Display rank card on website\n- Added properties to RankCard\n- Utility functions for rendering and image manipulation\n- Load fonts in folder and added font (AppleColorEmoji, Montserrat Medium)\n- Created Fetch link generator and improved overall structure\n- Improved mobile and streaming indicator\n\n#### **Error Handling and Security**\n- Improved error handling and caching\n- Added secure fetch\n- Added config.json with secret key\n- Improved error handler and added verify request with hash query\n- Implemented cluster process with benchmarks and tests\n\n#### **Optimizations and Improvements**\n- Improved performance with caching and error handling\n- Optimized code with use of generic query handler\n- Added support for development and production environments\n- Removed FileReader and improved canvas avatar caching\n- Benchmarked and tested code with server rewrite\n\n#### **Dependencies and Project Management**\n- Updated package.json and added dependencies (dotenv, express-async-errors)\n- Initiated and ejected React\n- Updated .gitignore file\n- Forked and initiated Express project"
	},
	{
		"id": "R_kgDOFVaarQ",
		"description": "a platform to anonymously and without being censored discuss the content of any website",
		"homepageUrl": "https://liberopinio.vercel.app/",
		"url": "https://github.com/x127f/liber-opinio",
		"name": "liber-opinio",
		"nameWithOwner": "x127f/liber-opinio",
		"owner": {
			"login": "x127f"
		},
		"createdAt": "2021-04-14T18:01:48Z",
		"updatedAt": "2021-08-22T21:46:52Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/74a38d07ea3e3f79e444a90d15e8fa2e0e1a15965cc9c42764120f0e70eec7aa/x127f/liber-opinio",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": false,
		"languages": {
			"totalCount": 4,
			"totalSize": 19617,
			"edges": [
				{
					"size": 9985,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 6136,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				},
				{
					"size": 2840,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 5,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFVaara9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOFg8n3w",
		"description": "Easy website to sort your playlist by genre and further divide them into separate playlists",
		"homepageUrl": "spotify-user-utils.vercel.app",
		"url": "https://github.com/x127f/spotify-user-utils",
		"name": "spotify-user-utils",
		"nameWithOwner": "x127f/spotify-user-utils",
		"owner": {
			"login": "x127f"
		},
		"createdAt": "2021-05-23T15:42:34Z",
		"updatedAt": "2023-12-31T18:00:24Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/a8c2191e672cbb5148ee5e7112c0e65feb2deb3bcf5bf87024cec295e8ed17bb/x127f/spotify-user-utils",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 23231,
			"edges": [
				{
					"size": 15079,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 6431,
					"node": {
						"color": "#c6538c",
						"name": "SCSS"
					}
				},
				{
					"size": 1721,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 4,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFg8n369yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 21
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2021-07-29T10:37:39Z",
				"message": "Merge pull request #4 from piomerti/main\n\nFixes",
				"messageBody": "Fixes"
			},
			{
				"committedDate": "2021-07-18T10:29:05Z",
				"message": "Merge pull request #3 from piomerti/main\n\nFix",
				"messageBody": "Fix"
			},
			{
				"committedDate": "2021-07-15T20:44:08Z",
				"message": "Merge pull request #2 from piomerti/main\n\nCombine genres",
				"messageBody": "Combine genres"
			},
			{
				"committedDate": "2021-05-24T16:53:35Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T13:29:37Z",
				"message": ":sparkles: add genre to list",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T11:40:19Z",
				"message": "better overview/landingpage",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T11:40:09Z",
				"message": "better progress bar",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T03:12:12Z",
				"message": ":bug: fix redirect uri",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T03:09:28Z",
				"message": ":bug: fix playlist generation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T02:15:42Z",
				"message": "remove github action",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T02:08:06Z",
				"message": ":bug: fix homepage deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T02:00:01Z",
				"message": ":bug: disable CI throw warning",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T01:57:16Z",
				"message": "Merge branch 'main' of https://github.com/x127f/spotify-user-utils into main",
				"messageBody": "…to main"
			},
			{
				"committedDate": "2021-05-24T01:57:14Z",
				"message": ":bug: fix Playlist",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T01:55:04Z",
				"message": "Update build.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T01:53:43Z",
				"message": ":sparkles: Playlist separator",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-23T20:56:35Z",
				"message": ":sparkles: OAuth auth + Routing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-23T16:30:54Z",
				"message": "Merge branch 'main' of https://github.com/x127f/spotify-user-utils into main",
				"messageBody": "…to main"
			},
			{
				"committedDate": "2021-05-23T16:29:11Z",
				"message": ":tada: init react + example playlist",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-23T15:54:54Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-23T15:42:35Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "## Category List Summary\n\n### Implemented Features\n* Genre addition to list\n* Enhanced overview/landing page\n* Improved progress bar\n* Playlist separator\n* OAuth authentication and routing\n* React initialization with example playlist\n\n### Bug Fixes\n* Redirect URI fix\n* Playlist generation fix\n* Homepage deployment fix\n* Playlist fix\n\n### Removed or Disabled Features\n* GitHub action\n* CI deploy\n\n### Initial Setup\n* Initial commit for project setup"
	},
	{
		"id": "R_kgDODtTOIQ",
		"description": "frontend microservice for e-edu/gewia",
		"homepageUrl": "https://gewia.com",
		"url": "https://github.com/E-Edu/frontend",
		"name": "frontend",
		"nameWithOwner": "E-Edu/frontend",
		"owner": {
			"login": "E-Edu"
		},
		"createdAt": "2020-03-20T18:38:02Z",
		"updatedAt": "2024-05-08T21:15:49Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/13acc7a10855f6baf11473cc64b17d21501428c345d2fc88a825eae286953561/E-Edu/frontend",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": "2020-07-24T18:57:49Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 4,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 275317,
			"edges": [
				{
					"size": 197016,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 56392,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				},
				{
					"size": 20749,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 7,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDODtTOIbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 4
				}
			}
		},
		"object": {
			"text": "# E-Edu Frontend\n\n![Build](https://github.com/E-Edu/frontend/workflows/Build/badge.svg?style=flat&logo=appveyor)\n![GitHub](https://img.shields.io/github/license/E-Edu/frontend)\n[![GitHub contributors](https://img.shields.io/github/contributors/E-Edu/frontend.svg?style=flat)](https://GitHub.com/E-Edu/frontend/graphs/contributors/)\n[![Discord](https://img.shields.io/discord/691078100272021514?color=7289DA&label=discord&logo=discord&logoColor=white)](https://discord.gg/XW5jzs6)\n[![Website](https://img.shields.io/website?down_color=red&down_message=offline&up_message=online&url=https%3A%2F%2Fe-edu.the-morpheus.de)](https://e-edu.the-morpheus.de)\n\nThis project contains the source code for the Frontend which is responsible for everything related to Frontend in the E-Edu system.\n\n## How to install the Reactjs and all other packages\nInstall react packages:\n```npm i```<br/>\nInstall storybook:\n```npm i storybook```<br/>\n\n## How to start the localhost server\nStart react developer server:\n```npm start```<br/>\nStart storybook server:\n```npm run storybook```<br/>\n\n## Contribute\n\nYou want to contribute to this project? Great!\n\n[Git Projekt tasks](https://github.com/E-Edu/frontend/projects/2)<br/>\n[Frontend Convention](https://github.com/E-Edu/frontend/blob/experimental/contribution.md)<br/>\n\nDo you have any other questions? \nThen get in touch with our frontend head<br/><br/>\nStefan<br>\nDiscord: Stefan#3460<br/>\n\n## License\n\nThis project is licensed under the `GNU General Public License v3.0`<br>\nSee `LICENSE` for more information\n"
		},
		"commits": [
			{
				"committedDate": "2020-03-21T23:23:19Z",
				"message": "Merge branch 'experimental' into feat-add-samuel",
				"messageBody": ""
			},
			{
				"committedDate": "2020-03-21T19:27:56Z",
				"message": "Merge branch 'experimental' into feat-add-samuel",
				"messageBody": ""
			},
			{
				"committedDate": "2020-03-21T18:39:39Z",
				"message": "Merge branch 'experimental' into feat-add-samuel",
				"messageBody": ""
			},
			{
				"committedDate": "2020-03-20T19:32:26Z",
				"message": "Update docker-compose.yml",
				"messageBody": ""
			}
		],
		"commitSummary": "**Changes:**\n\n* **Version**: Specified Docker Compose version\n* **Service**: Configured the frontend service\n* **Container**: Set container name and build context\n* **Environment**: Defined environment variables for Node and Chokidar\n* **Ports**: Exposed port for the frontend application\n* **Volumes**: Mounted volumes for application code and node modules\n* **Command**: Set command to start the application\n* **Restart Policy**: Configured restart policy for the container"
	},
	{
		"id": "R_kgDOELqT_A",
		"description": "Official command framework for discord.js",
		"homepageUrl": "",
		"url": "https://github.com/Trenite/Commando",
		"name": "Commando",
		"nameWithOwner": "Trenite/Commando",
		"owner": {
			"login": "Trenite"
		},
		"createdAt": "2020-07-18T13:33:38Z",
		"updatedAt": "2020-09-27T07:05:48Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/3cf1812a41c3a74f2d9933f9108ffc94d1b85c71d959ac1f3de4607ffe6e0293/Trenite/Commando",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 3,
			"totalSize": 198151,
			"edges": [
				{
					"size": 196443,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 900,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				},
				{
					"size": 808,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOELqT_LFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 21
				}
			}
		},
		"object": {
			"text": "# Commando\n[![Discord](https://discordapp.com/api/guilds/222078108977594368/embed.png)](https://discord.gg/bRCvFy9)\n[![Downloads](https://img.shields.io/npm/dt/discord.js-commando.svg)](https://www.npmjs.com/package/discord.js-commando)\n[![Version](https://img.shields.io/npm/v/discord.js-commando.svg)](https://www.npmjs.com/package/discord.js-commando)\n[![Dependency status](https://david-dm.org/discordjs/Commando.svg)](https://david-dm.org/discordjs/Commando)\n[![Build status](https://github.com/discordjs/Commando/workflows/Testing/badge.svg)](https://github.com/discordjs/Commando/actions?query=workflow%3ATesting)\n\n## About\nCommando is the official command framework for [discord.js](https://github.com/discordjs/discord.js).\nIt is flexible, fully object-oriented, easy to use, and makes it trivial to create your own powerful commands.\nAdditionally, it makes full use of ES2017's `async`/`await` functionality for clear, concise code that is simple to write and easy to comprehend.\n\n## Features\n- Plain command names and aliases\n- Regular expression triggers\n- Robust parsing of arguments (with \"quoted strings\" support)\n- Sophisticated argument system (optional)\n\t* Automatic prompting for arguments that aren't provided\n\t* Type system with rules, automatic validation, and parsing to usable values\n\t\t- Basic types (string, integer, float, boolean)\n\t\t- Discord objects (user, member, role, channel, message)\n\t\t- User-defined custom types\n\t\t- Union types\n\t* Automatic re-prompting of invalid arguments\n\t* Optional arguments with default values\n\t* Infinite arguments (arguments that accept as many values as provided)\n- Multiple responses to commands\n- Command editing (user edits their message that triggered the command, and the bot's response updates with it)\n- Command reloading, as well as loading/unloading\n- Command throttling/cooldowns\n\n## Installation\n**Node 8.6.0 or newer is required.**  \n`npm install discord.js-commando`\n\n## Documentation\n[View the docs here.](https://discord.js.org/#/docs/commando)  \nSee the [discord.js documentation](https://discord.js.org/#/docs) as well.\n"
		},
		"commits": [
			{
				"committedDate": "2020-09-27T04:03:45Z",
				"message": "fix voice channel by id (#337)",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T22:33:13Z",
				"message": ":bug: [createmessage] noEmbed not working",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T22:27:22Z",
				"message": ":bug: [createmessage] noEmbed not working",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-27T22:24:38Z",
				"message": ":bug: [createmessage] noEmbed not working",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-23T20:23:21Z",
				"message": "fix registry",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T12:03:25Z",
				"message": "fix registry",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T12:00:03Z",
				"message": "added guildMemberRoleAdd + guildMemberRoleRemove events",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T11:55:21Z",
				"message": "register default events",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-29T20:10:10Z",
				"message": "fix language for dm channel",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-29T20:10:00Z",
				"message": "added msg.link",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-27T19:17:28Z",
				"message": "do not delete error message",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-24T21:29:10Z",
				"message": "rebranding remove trenite mentions",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-24T15:00:13Z",
				"message": "fix lang",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-23T00:43:55Z",
				"message": "fix create message",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-22T12:52:42Z",
				"message": "fix arguement create message for DM",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-21T15:01:09Z",
				"message": "fix nsfw tag",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-19T18:10:36Z",
				"message": "increase error delete timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-19T10:17:05Z",
				"message": "fix error log",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-18T13:42:04Z",
				"message": "init",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-18T13:41:38Z",
				"message": "create message + getRole + translation client.js",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-18T13:40:50Z",
				"message": "translated cmds",
				"messageBody": ""
			}
		],
		"commitSummary": "**Commando Framework Update Summary**\n\n**Channels and Events**\n- Fixed voice channel by ID (#337)\n- Added guildMemberRoleAdd and guildMemberRoleRemove events\n- Registered default events\n\n**Messages**\n- Fixed createMessage for #337 and DM channel\n- Fixed argument createMessage for DM\n- Fixed not embedding message feature\n- Added msg.link\n- Fixed language for DM channel\n\n**Guild and Roles**\n- Added getRole function\n\n**Error Handling**\n- Fixed error log\n- Increased error delete timeout\n- Fixed error message deletion\n\n**Rebranding and Localization**\n- Removed Trenite mentions (rebranding)\n- Fixed language tags\n- Added translation in client.js\n- Translated commands"
	},
	{
		"id": "R_kgDOEnKtLA",
		"description": "Discord Bot Framework",
		"homepageUrl": "",
		"url": "https://github.com/Trenite/Lambert-discord",
		"name": "Lambert-discord",
		"nameWithOwner": "Trenite/Lambert-discord",
		"owner": {
			"login": "Trenite"
		},
		"createdAt": "2020-11-02T21:59:07Z",
		"updatedAt": "2022-11-10T12:35:49Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/39327fecc133555e11c7c8c149b509a257d8d3d56c872e58ff7e5195d95b0843/Trenite/Lambert-discord",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": "2022-11-10T12:35:49Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 100198,
			"edges": [
				{
					"size": 100198,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 2,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOEnKtLK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 40
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2021-01-05T14:50:19Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:42:08Z",
				"message": "Merge branch 'main' of https://github.com/Trenite/Lambert-discord into main",
				"messageBody": "…o main"
			},
			{
				"committedDate": "2021-01-01T18:42:07Z",
				"message": ":bug: fix db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:41:47Z",
				"message": ":bug: Logger all stdout",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:41:31Z",
				"message": ":construction: Language",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:41:16Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:40:23Z",
				"message": ":bug: Patch discord.js structs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:39:37Z",
				"message": ":sparkles: Handler + Module",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:39:01Z",
				"message": ":sparkles: Argument + Command",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:38:41Z",
				"message": "Slash Commands",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:37:38Z",
				"message": "CommandDispatcher",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:37:10Z",
				"message": ":sparkles: http server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:36:39Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T18:35:53Z",
				"message": "Command Types",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T20:40:14Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T20:39:42Z",
				"message": "remove post install",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T19:01:39Z",
				"message": ":bug: fix typings",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:07:53Z",
				"message": ":white_check_mark: build",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:05:43Z",
				"message": "Merge branch 'main' of https://github.com/Trenite/Lambert-discord into main",
				"messageBody": "…o main"
			},
			{
				"committedDate": "2020-12-17T17:05:03Z",
				"message": ":sparkles: CommandDispatcher",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:04:43Z",
				"message": ":sparkles: Logger",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:04:25Z",
				"message": ":sparkles: d.js extension",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:04:13Z",
				"message": ":sparkles: HTTP Server",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:03:25Z",
				"message": ":sparkles: file module handler",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:02:42Z",
				"message": ":sparkles: LambertError",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:02:02Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-13T09:46:21Z",
				"message": "Merge pull request #1 from Trenite/dependabot/npm_and_yarn/discord-lambert/ini-1.3.8\n\n⬆️ Bump ini from 1.3.5 to 1.3.8 in /discord-lambert",
				"messageBody": "…mbert/ini-1.3.8\n\n⬆️ Bump ini from 1.3.5 to 1.3.8 in /discord-lambert"
			},
			{
				"committedDate": "2020-12-12T23:05:02Z",
				"message": ":lock: fix security vulnerability",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-27T22:37:59Z",
				"message": ":art: set shardID in guild create event",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-27T22:37:43Z",
				"message": ":sparkles: fix Mongodb Database Provider",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-27T22:37:18Z",
				"message": ":sparkles: Shard will load structure out of database",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-27T22:36:51Z",
				"message": "Lambert Shard shows restarting in status",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-25T20:58:09Z",
				"message": ":art: Route Handler, Client, Sharder",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-05T01:14:37Z",
				"message": ":art: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-05T01:14:29Z",
				"message": "sync discord structur with database",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-05T01:14:02Z",
				"message": ":white_check_mark: custom shard events",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-05T01:13:38Z",
				"message": ":white_check_mark: general Datastore + Mongo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-05T01:13:08Z",
				"message": "custom djs extensions",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-05T01:12:47Z",
				"message": "use any Database  provider",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-02T21:59:09Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Frameworks and Structs**\n- Discord Bot Framework\n- Discord.js structs\n- Shard struct\n- custom djs extensions\n\n**Code Organization and Structure**\n- Route Handler\n- Client\n- Sharder\n- CommandDispatcher\n- Handler\n- Module\n- Argument\n- Command\n- Command Types\n\n**Feature Implementation**\n- Slash Commands\n- HTTP Server\n- Logger\n- LambertError\n- custom shard events\n- Shard events (guild create)\n\n**Database Management**\n- MongoDB Database Provider\n- Shard loads structure out of database\n- sync discord structure with database\n- general Datastore\n\n**Fixes and Security**\n- fix db\n- fix typings\n- Logger for all stdout\n- patch discord.js structs\n- fix security vulnerability\n\n**Build and Deployment**\n- build\n- post install removal\n- use any Database provider\n\n**Testing and Quality Assurance**\n- update package.json"
	},
	{
		"id": "R_kgDOIpI_ng",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/Trenite/Trenite",
		"name": "Trenite",
		"nameWithOwner": "Trenite/Trenite",
		"owner": {
			"login": "Trenite"
		},
		"createdAt": "2022-12-19T13:50:57Z",
		"updatedAt": "2022-12-27T02:33:58Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/580009886/c258a829-c8be-437c-be20-248966039d81",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": "2022-12-27T02:33:58Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 737025,
			"edges": [
				{
					"size": 681298,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 30458,
					"node": {
						"color": "#c6538c",
						"name": "SCSS"
					}
				},
				{
					"size": 23241,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOIpI_nq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2022-12-19T13:50:14Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "**Categories and Summaries:**\n\n1. **Music**\n   - Fix YouTube streaming, clear button, and YouTube music\n   - Add music aliases, custom music request, and Trello credentials\n   - Music translations started\n   - Much more stable music streaming\n\n2. **Commands**\n   - Add aliases for commands (e.g., colorroles, voicechannel, etc.)\n   - Fix help command and documentation\n   - Add new commands (e.g., verify, invite, trello, etc.)\n   - Update existing commands (e.g., serverinfo, userinfo, etc.)\n\n3. **Database**\n   - Switch from SQLite to MongoDB\n   - Change database keys and settings\n   - Fix provider and database connections\n   - Update database schema\n\n4. **Security**\n   - Security fix: restrict custombot owners from using devOnly commands\n   - Security fix: restrict eval command execution\n   - Protect against logging unauthorized database access\n\n5. **Event Handling**\n   - Improve error handling\n   - Fix \"command not found\" error message\n   - Handling guild message type and reaction events\n   - Forward API errors to users\n\n6. **Performance**\n   - Fix console logs to enhance performance\n   - Fix and clean unnecessary code\n   - Optimize server settings and add rate limiting\n\n7. **Translations**\n   - Start and complete multi-language translation\n   - Fix and add translations for existing commands\n   - Translate notifications and user-facing messages\n\n8. **Discord.js Updates**\n   - Update Discord.js version to v12\n   - Update patches and versions for other libraries\n   - Update required packages and fix dependency issues\n\n9. **Economy and XP System**\n   - Add and complete economy and XP system\n   - Fix issues with commands and display of stats\n\n10. **Rebranding**\n    - Rebranding, remove mentions of Trenite from the code\n    - Rename commands, change topics, and apply other changes for branding \n\n11. **Website Updates**\n    - Update the website with a new homepage, routing system, and documentation\n    - Add support for user login and server selection"
	},
	{
		"id": "R_kgDOEuDt4g",
		"description": "📬 Spacebar is a free open source selfhostable discord compatible communication platform",
		"homepageUrl": "https://spacebar.chat",
		"url": "https://github.com/spacebarchat/server",
		"name": "server",
		"nameWithOwner": "spacebarchat/server",
		"owner": {
			"login": "spacebarchat"
		},
		"createdAt": "2020-11-28T12:39:03Z",
		"updatedAt": "2024-10-11T15:43:37Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/316730850/24e69d23-3897-4ba7-a684-07611a780f78",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 249,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 1326019,
			"edges": [
				{
					"size": 1179454,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 127031,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 14824,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 1449,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOEuDt4rFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 1903
				}
			}
		},
		"object": {
			"text": "<p align=\"center\">\n  <img width=\"100\" src=\"https://raw.githubusercontent.com/spacebarchat/spacebarchat/master/branding/png/Spacebar__Icon-Rounded-Subtract.png\" />\n</p>\n<h1 align=\"center\">Spacebar Server</h1>\n\n<p align=\"center\">\n  <a href=\"https://discord.gg/ZrnGQP6p3d\">\n    <img src=\"https://img.shields.io/discord/806142446094385153?color=7489d5&logo=discord&logoColor=ffffff\" />\n  </a>\n  <img src=\"https://img.shields.io/static/v1?label=Status&message=Development&color=blue\">\n  <a title=\"Crowdin\" target=\"_blank\" href=\"https://translate.spacebar.chat/\"><img src=\"https://badges.crowdin.net/fosscord/localized.svg\"></a>\n   <a href=\"https://opencollective.com/spacebar\">\n    <img src=\"https://opencollective.com/spacebar/tiers/badge.svg\">\n  </a>\n</p>\n\n## [About](https://spacebar.chat)\n\nSpacebar/server is a Discord backend re-implementation and extension.\nWe aim to reverse engineer and add additional features to the Discord backend, while remaining completely backwards compatible with existing bots, applications, and clients.\n\nThis repository contains:\n\n-   [Spacebar HTTP API Server](/src/api)\n-   [WebSocket Gateway Server](/src/gateway)\n-   [HTTP CDN Server](/src/cdn)\n-   [Utility and Database Models](/src/util)\n\n## [Documentation](https://docs.spacebar.chat)\n\n## [Contributing](https://docs.spacebar.chat/contributing/)\n\n## Clients\n\nYou _should_ be able to use any client designed for Discord.com to connect to a Spacebar instance.  \nHowever, some incompatibilities still exist between Spacebar and Discord. For this reason, not every client will connect.  \nThe [WIP official Spacebar client](https://github.com/spacebarchat/client) will always work.\nYou can find a [live version here](https://app.spacebar.chat).\n"
		},
		"commits": [
			{
				"committedDate": "2023-03-30T16:26:19Z",
				"message": "fix: disable cache if multi threaded",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-30T16:13:34Z",
				"message": "Merge pull request #1008 from spacebarchat/dev/samuel",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T04:11:33Z",
				"message": "feat: add DB_LOGGING env",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T04:11:14Z",
				"message": "fix: local cache",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T03:39:28Z",
				"message": "build: remove sqlite3 in favor of better-sqlite3",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T03:20:03Z",
				"message": "build: remove sqlite3 in favor of better-sqlite3",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T03:18:18Z",
				"message": "fix: remove proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T03:13:04Z",
				"message": "fix: use entity.save() instead of insert (needed for caching)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T03:12:16Z",
				"message": "fix: missing id in select query",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-18T03:11:48Z",
				"message": "feat: Database Query Cache",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T19:36:33Z",
				"message": "fix: package-lock.json",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T18:47:23Z",
				"message": "wip: cache",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T18:30:54Z",
				"message": "fix: request language property",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T18:18:57Z",
				"message": "perf: optimize getPermission()",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T18:18:31Z",
				"message": "feat: better-sqlite3 support",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T16:50:59Z",
				"message": "perf: custom i18next middleware that only initializes when needed",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T16:47:43Z",
				"message": "perf: cache jwt secret as key",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T15:36:44Z",
				"message": "fix: types when using yarn",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T15:36:25Z",
				"message": "build: update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T13:43:15Z",
				"message": "Merge pull request #1005 from Xanderplayz18/patch-1\n\nGrammar fix in env-vars.md",
				"messageBody": "Grammar fix in env-vars.md"
			},
			{
				"committedDate": "2023-03-17T13:41:29Z",
				"message": "Delete env-vars.md",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-17T13:39:39Z",
				"message": "Merge pull request #1002 from fosscord/dependabot/npm_and_yarn/sqlite3-5.1.5\n\nBump sqlite3 from 5.1.4 to 5.1.5",
				"messageBody": "…3-5.1.5\n\nBump sqlite3 from 5.1.4 to 5.1.5"
			},
			{
				"committedDate": "2022-06-15T10:10:03Z",
				"message": "Merge pull request #767 from MaddyUnderStars/feat/pingInformation\n\nExpose general instance information via api /ping route",
				"messageBody": "Expose general instance information via api /ping route"
			},
			{
				"committedDate": "2022-04-25T12:59:49Z",
				"message": "New translations common.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-25T12:59:48Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-12T19:56:56Z",
				"message": "New translations common.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-12T19:56:56Z",
				"message": "New translations auth.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-05T09:58:59Z",
				"message": "New translations common.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-20T13:56:53Z",
				"message": "Merge pull request #540 from Thesourtimes/master\n\nGeneral work on API",
				"messageBody": "General work on API"
			},
			{
				"committedDate": "2021-12-09T16:37:36Z",
				"message": "Merge pull request #539 from TimSchweiz/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-07T17:33:47Z",
				"message": "Merge pull request #538 from Thesourtimes/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-05T19:13:40Z",
				"message": "Merge pull request #536 from Thesourtimes/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-30T19:12:54Z",
				"message": "Merge pull request #530 from erkinalp/patch-3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-30T18:51:59Z",
				"message": "Merge pull request #527 from erkinalp/patch-3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-30T18:51:22Z",
				"message": "Merge pull request #528 from Thesourtimes/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-30T17:44:04Z",
				"message": "Merge pull request #526 from erkinalp/patch-3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-29T19:41:59Z",
				"message": "Merge pull request #519 from erkinalp/master\n\nSnowflake-based invite generation",
				"messageBody": "Snowflake-based invite generation"
			},
			{
				"committedDate": "2021-11-29T19:41:20Z",
				"message": "Merge pull request #518 from Xenorio/master\n\nFix plugins folder not being found",
				"messageBody": "Fix plugins folder not being found"
			},
			{
				"committedDate": "2021-11-29T07:51:09Z",
				"message": "Merge pull request #523 from fosscord/translation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-29T07:29:57Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-29T07:29:56Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-23T09:46:25Z",
				"message": "Merge pull request #515 from Featyre/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-21T20:04:22Z",
				"message": "Merge pull request #491 from TheArcaneBrony/master\n\nAdd plugin & css support, add styling to differentiate from discord.com",
				"messageBody": "Add plugin & css support, add styling to differentiate from discord.com"
			},
			{
				"committedDate": "2021-11-21T20:03:21Z",
				"message": "Merge pull request #510 from Thesourtimes/master\n\nAdd instance route",
				"messageBody": "Add instance route"
			},
			{
				"committedDate": "2021-11-21T20:03:13Z",
				"message": "Update index.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-11T09:54:38Z",
				"message": "Merge pull request #496 from fosscord/translation\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-11-11T09:54:29Z",
				"message": "Merge pull request #508 from Thesourtimes/master\n\nMove unimported tag scripts to assets/ in Test Client",
				"messageBody": "Move unimported tag scripts to assets/ in Test Client"
			},
			{
				"committedDate": "2021-11-10T18:36:51Z",
				"message": "Merge pull request #501 from Thesourtimes/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-31T10:44:24Z",
				"message": "Merge pull request #476 from Thesourtimes/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:46Z",
				"message": "New translations auth.json (Serbo-Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:45Z",
				"message": "New translations common.json (Serbo-Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:30Z",
				"message": "New translations common.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:28Z",
				"message": "New translations common.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:27Z",
				"message": "New translations common.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:26Z",
				"message": "New translations common.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:24Z",
				"message": "New translations common.json (Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:24Z",
				"message": "New translations common.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:21Z",
				"message": "New translations common.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:21Z",
				"message": "New translations common.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:20Z",
				"message": "New translations common.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:18Z",
				"message": "New translations common.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:18Z",
				"message": "New translations common.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:16Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:16Z",
				"message": "New translations common.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:14Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:13Z",
				"message": "New translations common.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:12Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:42:05Z",
				"message": "New translations common.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:57Z",
				"message": "New translations common.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:56Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:56Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:53Z",
				"message": "New translations auth.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:52Z",
				"message": "New translations auth.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:52Z",
				"message": "New translations auth.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:51Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:50Z",
				"message": "New translations auth.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:49Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:48Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:47Z",
				"message": "New translations auth.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:45Z",
				"message": "New translations auth.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:44Z",
				"message": "New translations auth.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:43Z",
				"message": "New translations auth.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:42Z",
				"message": "New translations auth.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:41Z",
				"message": "New translations auth.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:40Z",
				"message": "New translations auth.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:38Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:37Z",
				"message": "New translations auth.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:36Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:34Z",
				"message": "New translations common.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:33Z",
				"message": "New translations common.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:32Z",
				"message": "New translations common.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:31Z",
				"message": "New translations common.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:30Z",
				"message": "New translations common.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:29Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:28Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:27Z",
				"message": "New translations common.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:26Z",
				"message": "New translations auth.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:25Z",
				"message": "New translations auth.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:24Z",
				"message": "New translations auth.json (Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:21Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:19Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:19Z",
				"message": "New translations auth.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:18Z",
				"message": "New translations auth.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T16:41:17Z",
				"message": "New translations auth.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T15:27:33Z",
				"message": "New translations common.json (Telugu)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T15:27:33Z",
				"message": "New translations auth.json (Telugu)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T13:05:48Z",
				"message": "Merge pull request #492 from fosscord/translation\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-10-24T13:05:43Z",
				"message": "Merge branch 'master' into translation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T10:59:53Z",
				"message": ":bug: fix locales",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T10:59:43Z",
				"message": ":bug: fix event listener",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T10:59:25Z",
				"message": ":arrow_up: update packages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T10:44:16Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-23T23:04:00Z",
				"message": "New translations auth.json (Spanish, Latin America)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-23T23:03:59Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-23T19:36:15Z",
				"message": "Merge pull request #495 from KagurazakaNyaa/master\n\nAdd proxy support for hard-coded external network access",
				"messageBody": "Add proxy support for hard-coded external network access"
			},
			{
				"committedDate": "2021-10-22T21:42:00Z",
				"message": ":bug: delay worker thread start",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T20:41:43Z",
				"message": "New translations common.json (Spanish, Latin America)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T20:41:42Z",
				"message": "New translations auth.json (Spanish, Latin America)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:55Z",
				"message": "New translations common.json (Spanish, Latin America)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:54Z",
				"message": "New translations auth.json (Spanish, Latin America)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:53Z",
				"message": "New translations common.json (Guarani)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:52Z",
				"message": "New translations auth.json (Guarani)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:51Z",
				"message": "New translations common.json (Hausa)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:50Z",
				"message": "New translations auth.json (Hausa)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:49Z",
				"message": "New translations common.json (Swahili)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:48Z",
				"message": "New translations auth.json (Swahili)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:47Z",
				"message": "New translations common.json (Latin)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:46Z",
				"message": "New translations auth.json (Latin)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:45Z",
				"message": "New translations common.json (Tagalog)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:44Z",
				"message": "New translations auth.json (Tagalog)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:43Z",
				"message": "New translations common.json (Maori)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-22T16:02:42Z",
				"message": "New translations auth.json (Maori)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T22:03:34Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T22:03:33Z",
				"message": "New translations auth.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:57Z",
				"message": "New translations common.json (Venetian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:56Z",
				"message": "New translations auth.json (Punjabi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:55Z",
				"message": "New translations common.json (Punjabi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:54Z",
				"message": "New translations auth.json (Tamil)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:53Z",
				"message": "New translations common.json (Tamil)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:51Z",
				"message": "New translations auth.json (Marathi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:50Z",
				"message": "New translations common.json (Marathi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:49Z",
				"message": "New translations auth.json (Uyghur)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:49Z",
				"message": "New translations common.json (Uyghur)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:47Z",
				"message": "New translations auth.json (Tibetan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:46Z",
				"message": "New translations auth.json (Berber)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:45Z",
				"message": "New translations common.json (Berber)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:44Z",
				"message": "New translations auth.json (Serbo-Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:43Z",
				"message": "New translations common.json (Serbo-Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:42Z",
				"message": "New translations auth.json (Javanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:41Z",
				"message": "New translations common.json (Javanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:40Z",
				"message": "New translations auth.json (Venetian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T18:28:39Z",
				"message": "New translations common.json (Tibetan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:36Z",
				"message": "New translations common.json (Mapudungun)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:35Z",
				"message": "New translations auth.json (Mapudungun)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:33Z",
				"message": "New translations common.json (Quechua)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:32Z",
				"message": "New translations auth.json (Quechua)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:31Z",
				"message": "New translations common.json (Kazakh)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:30Z",
				"message": "New translations auth.json (Kazakh)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:29Z",
				"message": "New translations common.json (Norwegian Nynorsk)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:28Z",
				"message": "New translations auth.json (Norwegian Nynorsk)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:25Z",
				"message": "New translations common.json (Mongolian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:24Z",
				"message": "New translations auth.json (Mongolian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:23Z",
				"message": "New translations common.json (Basque)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:29:22Z",
				"message": "New translations auth.json (Basque)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T17:28:57Z",
				"message": "Merge pull request #493 from RiversideRocks/patch-1\n\nChange user agent",
				"messageBody": "Change user agent"
			},
			{
				"committedDate": "2021-10-21T11:33:58Z",
				"message": "New translations common.json (Kurmanji (Kurdish))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T11:33:57Z",
				"message": "New translations auth.json (Kurmanji (Kurdish))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T11:33:56Z",
				"message": "New translations common.json (German, Switzerland)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T11:33:55Z",
				"message": "New translations auth.json (German, Switzerland)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T11:33:54Z",
				"message": "New translations common.json (Azerbaijani)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T11:33:53Z",
				"message": "New translations auth.json (Azerbaijani)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T11:33:52Z",
				"message": "New translations common.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T11:33:51Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T10:14:15Z",
				"message": "New translations common.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T10:14:14Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:40Z",
				"message": "New translations common.json (Urdu (India))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:39Z",
				"message": "New translations common.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:38Z",
				"message": "New translations common.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:37Z",
				"message": "New translations common.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:36Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:35Z",
				"message": "New translations common.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:34Z",
				"message": "New translations common.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:33Z",
				"message": "New translations common.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:32Z",
				"message": "New translations common.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:31Z",
				"message": "New translations common.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:30Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:29Z",
				"message": "New translations common.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:28Z",
				"message": "New translations common.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:27Z",
				"message": "New translations common.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:26Z",
				"message": "New translations common.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:25Z",
				"message": "New translations common.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:24Z",
				"message": "New translations common.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:23Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:22Z",
				"message": "New translations common.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:21Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:19Z",
				"message": "New translations common.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:18Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:17Z",
				"message": "New translations common.json (Sinhala)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:16Z",
				"message": "New translations common.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:15Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:14Z",
				"message": "New translations common.json (Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:13Z",
				"message": "New translations common.json (Persian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:12Z",
				"message": "New translations common.json (Indonesian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:11Z",
				"message": "New translations common.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:10Z",
				"message": "New translations common.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:08Z",
				"message": "New translations common.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:07Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:06Z",
				"message": "New translations common.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:05Z",
				"message": "New translations common.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:03Z",
				"message": "New translations common.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:02Z",
				"message": "New translations common.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:01Z",
				"message": "New translations common.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:43:00Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:42:59Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:42:58Z",
				"message": "New translations common.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:42:54Z",
				"message": "Update source file common.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T18:16:26Z",
				"message": "Merge pull request #490 from developomp/master\n\nPrettier format and link simplification",
				"messageBody": "Prettier format and link simplification"
			},
			{
				"committedDate": "2021-10-20T15:15:23Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-20T15:15:21Z",
				"message": ":bug: revert file config overwrite",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-19T09:24:13Z",
				"message": "Merge pull request #488 from fosscord/translation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-19T06:29:06Z",
				"message": "New translations auth.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-19T05:21:18Z",
				"message": "Merge pull request #485 from fosscord/translation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-19T02:49:57Z",
				"message": "New translations common.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-19T02:49:56Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-19T01:40:43Z",
				"message": "New translations common.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-19T01:40:41Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T20:55:54Z",
				"message": ":zap: use better-sqlite3 as default db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T20:55:36Z",
				"message": ":bug: fix bulk delete",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T19:10:06Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T19:10:03Z",
				"message": ":bug: fix types + prod env",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:38:43Z",
				"message": "Merge pull request #483 from fosscord/translation\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-10-18T18:23:33Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:23:27Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:23:23Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:23:21Z",
				"message": "New translations common.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:23:13Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:23:12Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:23:04Z",
				"message": "New translations auth.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:22:53Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:22:39Z",
				"message": "New translations auth.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:22:37Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T18:22:34Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:34:48Z",
				"message": ":zap: message performance",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:34:03Z",
				"message": ":globe_with_meridians: remove unused locales",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:19:32Z",
				"message": "Merge pull request #482 from fosscord/translation\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-10-18T16:18:47Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:18:41Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:18:38Z",
				"message": "New translations common.json (Persian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:18:34Z",
				"message": "New translations common.json (Sinhala)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:18:31Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:18:05Z",
				"message": "New translations auth.json (Sinhala)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:18:03Z",
				"message": "New translations auth.json (Persian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:17:59Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:17:58Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T16:15:50Z",
				"message": "Update Crowdin configuration file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T15:38:31Z",
				"message": ":zap: vertically scale bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-18T12:38:34Z",
				"message": "Revert \"fix: make the CDN build correctly\"\n\nThis reverts commit 79aae987fd001db4fcd6c5946949ac7840305198.",
				"messageBody": "This reverts commit 79aae987fd001db4fcd6c5946949ac7840305198."
			},
			{
				"committedDate": "2021-10-18T12:36:57Z",
				"message": "Revert \"fix: make API dockerfile use correct setup steps\"\n\nThis reverts commit aae55cfe7114899852a1b9e007302be5bed87307.",
				"messageBody": "This reverts commit aae55cfe7114899852a1b9e007302be5bed87307."
			},
			{
				"committedDate": "2021-10-18T09:02:08Z",
				"message": "fix default cdn endpoint for message attachments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T21:54:17Z",
				"message": "Merge pull request #477 from DiegoMagdaleno/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T20:28:16Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T20:28:15Z",
				"message": ":bug: also receive events for newly added members/relationships",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T20:27:54Z",
				"message": ":sparkles: config override file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T18:55:44Z",
				"message": "Merge pull request #475 from Thesourtimes/master\n\nreturn an empty array at oauth2/tokens to have a response in connections",
				"messageBody": "return an empty array at oauth2/tokens to have a response in connections"
			},
			{
				"committedDate": "2021-10-17T13:39:34Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T09:57:20Z",
				"message": "Merge pull request #473 from xaronnn/master\n\nFix requirements with python",
				"messageBody": "Fix requirements with python"
			},
			{
				"committedDate": "2021-10-17T00:28:51Z",
				"message": ":bug: remove pause",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T00:24:40Z",
				"message": ":bug: fix executable + pause on crash",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T00:12:10Z",
				"message": ":bug: fix docker image",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-17T00:06:39Z",
				"message": ":bug: fix executable",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T23:53:29Z",
				"message": ":bug: fix typing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T23:42:30Z",
				"message": ":bug: fix typo in custom status",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T23:39:41Z",
				"message": ":arrow_up: update sqlite3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T23:23:51Z",
				"message": ":sparkles: migration for timestamp migrations",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T23:14:43Z",
				"message": "Merge pull request #467 from hbjydev/fix-migration-column-issue\n\nFix migration timestamp column data type issue",
				"messageBody": "Fix migration timestamp column data type issue"
			},
			{
				"committedDate": "2021-10-16T22:57:31Z",
				"message": ":bug: default session activites",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:51:51Z",
				"message": ":sparkles: add presence migration",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:41:36Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:41:24Z",
				"message": ":art: reformatted",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:41:21Z",
				"message": ":art: clean up instances on start",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:41:06Z",
				"message": ":bug: user settings",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:40:26Z",
				"message": ":zap: added benchmark",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:39:54Z",
				"message": ":sparkles: User presence/status",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:38:56Z",
				"message": ":sparkles: added session + memberlist event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T22:37:06Z",
				"message": ":zap: improve performance of identify + listener",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T19:48:57Z",
				"message": ":arrow_up: update mnjsf",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T18:33:56Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T13:44:39Z",
				"message": "Merge pull request #471 from ChrisChrome/patch-1\n\nFix /gateway/bot",
				"messageBody": "Fix /gateway/bot"
			},
			{
				"committedDate": "2021-10-15T22:35:20Z",
				"message": ":sparkles: lazy loading of guilds for bots closes #451",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T22:19:10Z",
				"message": ":bug: fix #450 (only if user is a bot application)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T21:51:31Z",
				"message": ":lock: update modules",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T21:43:40Z",
				"message": ":lock: update set-value & tar",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T21:29:59Z",
				"message": ":bug: fix migration timestampe",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T16:55:26Z",
				"message": ":bug: fix message sending",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T16:39:57Z",
				"message": "Merge pull request #455 from fosscord/sticker\n\nStickers",
				"messageBody": "Stickers"
			},
			{
				"committedDate": "2021-10-15T16:39:28Z",
				"message": ":sparkles: sticker events",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T16:39:19Z",
				"message": ":sparkles: automatically run db migrations",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T13:53:15Z",
				"message": "Merge pull request #462 from hbjydev/unit-tests-expanded\n\nAdd unit tests for Gateway endpoints",
				"messageBody": "Add unit tests for Gateway endpoints"
			},
			{
				"committedDate": "2021-10-15T13:52:08Z",
				"message": "Merge pull request #464 from hbjydev/api-snippets\n\nfeat: add a Router & Route snippet for vscode",
				"messageBody": "feat: add a Router & Route snippet for vscode"
			},
			{
				"committedDate": "2021-10-15T11:32:26Z",
				"message": "Merge branch 'master' into sticker",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T11:00:23Z",
				"message": ":bug: fix unittests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-15T10:37:58Z",
				"message": "Merge pull request #459 from hbjydev/cdn-s3\n\n[CDN] S3 Support",
				"messageBody": "[CDN] S3 Support"
			},
			{
				"committedDate": "2021-10-14T22:49:33Z",
				"message": "Merge pull request #460 from fosscord/dev\n\nmerge dev in master",
				"messageBody": "merge dev in master"
			},
			{
				"committedDate": "2021-10-14T22:47:19Z",
				"message": "Merge pull request #454 from hbjydev/status-probes\n\n[API] Status Probes",
				"messageBody": "[API] Status Probes"
			},
			{
				"committedDate": "2021-10-14T22:46:09Z",
				"message": ":art: exclude healthz/readyz from auth",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T22:44:19Z",
				"message": "Merge branch 'master' into pr/hbjydev/454",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T22:35:32Z",
				"message": "Merge pull request #448 from Mr2u/master\n\nRoute #10 Prune and prune count",
				"messageBody": "Route #10 Prune and prune count"
			},
			{
				"committedDate": "2021-10-14T22:35:18Z",
				"message": ":bug: fix prune",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T22:35:01Z",
				"message": ":zap: speed up message query",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T22:03:35Z",
				"message": ":art: reformat",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T22:03:19Z",
				"message": ":bug: fix sticker packs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T22:03:05Z",
				"message": ":bug: fix message sticker sending",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T22:02:23Z",
				"message": ":sparkles: sticker upload",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T19:25:17Z",
				"message": ":art: do not automatically create default guild",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T17:47:10Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T17:47:02Z",
				"message": ":sparkles: sticker db entities",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T17:46:53Z",
				"message": ":sparkles: sticker packs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-14T17:46:45Z",
				"message": ":sparkles: stickers",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-13T22:32:15Z",
				"message": ":bug: fix migration + autojoin",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-12T19:54:58Z",
				"message": ":pencil: improve logging",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-12T19:53:57Z",
				"message": ":zap: improve memory managment",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-12T19:52:35Z",
				"message": ":zap: benchmark tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-12T11:07:49Z",
				"message": "Merge pull request #444 from Mr2u/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-12T05:27:25Z",
				"message": "Merge pull request #443 from Mr2u/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-11T14:34:45Z",
				"message": "Merge pull request #430 from Thesourtimes/master\n\nImplement GIF route",
				"messageBody": "Implement GIF route"
			},
			{
				"committedDate": "2021-10-11T14:34:18Z",
				"message": ":art: gifs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-11T13:21:11Z",
				"message": ":bug: fix #371",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-11T13:13:16Z",
				"message": "Merge branch 'master' into pr/Thesourtimes/430",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-11T13:06:00Z",
				"message": "Merge pull request #435 from TheArcaneBrony/change-enums-to-number\n\nChange enums to numbers",
				"messageBody": "Change enums to numbers"
			},
			{
				"committedDate": "2021-10-11T13:04:28Z",
				"message": "Merge pull request #437 from erkinalp/patch-4\n\nAdded more rights, and explained existing ones",
				"messageBody": "Added more rights, and explained existing ones"
			},
			{
				"committedDate": "2021-10-11T13:04:03Z",
				"message": "Update Rights.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-11T13:00:43Z",
				"message": "Merge pull request #438 from Mr2u/dev\n\nnpm run build fails if Windows username contains space",
				"messageBody": "npm run build fails if Windows username contains space"
			},
			{
				"committedDate": "2021-10-10T17:02:22Z",
				"message": "Merge pull request #434 from TheArcaneBrony/remove-vanity-url\n\nFix duplicate key - remove vanity url column",
				"messageBody": "Fix duplicate key - remove vanity url column"
			},
			{
				"committedDate": "2021-10-10T17:02:08Z",
				"message": "Merge branch 'master' into pr/TheArcaneBrony/434",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T17:00:50Z",
				"message": ":bug: fix modify role.permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T16:56:46Z",
				"message": "Merge branch 'master' into remove-vanity-url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T16:31:04Z",
				"message": ":art: update migration script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T16:28:52Z",
				"message": "Merge branch 'remove-vanity-url' of https://github.com/thearcanebrony/fosscord-server into pr/TheArcaneBrony/434",
				"messageBody": "…/fosscord-server into pr/TheArcaneBrony/434"
			},
			{
				"committedDate": "2021-10-10T16:28:50Z",
				"message": "added vanity db migration",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T16:28:38Z",
				"message": ":bug: fix vanity url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T14:11:40Z",
				"message": ":bug: fix Identify",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:52:16Z",
				"message": ":bug: fix null user in identify",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:31:13Z",
				"message": ":bug: fix Emoji missing in identify",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:21:24Z",
				"message": ":sparkles: migrate script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:18:56Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:18:53Z",
				"message": ":bug: fix Identify ready payload missing users",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:11:01Z",
				"message": "Merge pull request #424 from LoboMetalurgico/milestoneV1/routes/implement/emojis\n\n[ROUTE]: Implement Emoji Route",
				"messageBody": "…ment/emojis\n\n[ROUTE]: Implement Emoji Route"
			},
			{
				"committedDate": "2021-10-10T12:10:27Z",
				"message": ":bug: fix emojis route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:09:54Z",
				"message": ":art: emoji db migration",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:09:18Z",
				"message": ":bug: fix cdn route not working without hash",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T12:08:52Z",
				"message": ":bug: fix cdn",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T10:50:45Z",
				"message": "Merge branch 'master' into pr/LoboMetalurgico/424",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T10:42:12Z",
				"message": ":see_no_evil: remove console.log",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T10:35:46Z",
				"message": ":bug: fix tsc compiler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T09:13:51Z",
				"message": ":bug: fix windows process.getuid",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T09:08:55Z",
				"message": ":bug: convert bigint literal to object",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T09:03:32Z",
				"message": ":art: clean up imports + classes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T09:03:04Z",
				"message": ":art: clean up dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-10T09:02:25Z",
				"message": ":sparkles: changed and fixed compiler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T16:07:01Z",
				"message": ":bug: rewrite locale en to en-US",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T16:06:02Z",
				"message": ":bug: fix build.js?",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T15:33:28Z",
				"message": ":sparkles: added read state",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T15:25:26Z",
				"message": ":sparkles: handleFile() now returns mime_type and size",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T12:46:59Z",
				"message": ":art: cdn now also works without setting a public endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T12:31:23Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T12:31:19Z",
				"message": ":bug: fix array key in config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T12:09:50Z",
				"message": "Merge pull request #429 from fosscord/dev\n\n:bug: fix typing",
				"messageBody": ":bug: fix typing"
			},
			{
				"committedDate": "2021-10-09T12:00:28Z",
				"message": ":bug: fix typing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T11:23:36Z",
				"message": "Merge pull request #428 from fosscord/dev\n\nVarious fixes and guest account enhancements",
				"messageBody": "Various fixes and guest account enhancements"
			},
			{
				"committedDate": "2021-10-09T11:04:46Z",
				"message": ":art: do not auto guest register on login/register page",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T11:04:27Z",
				"message": ":bug: fix claim account",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T10:54:03Z",
				"message": ":sparkles: added guestsRequireInvite to config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T10:53:52Z",
				"message": ":bug: fix password changing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-09T09:21:06Z",
				"message": ":bug: fix cdn",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-08T23:53:47Z",
				"message": ":bug: fix import",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-08T23:53:41Z",
				"message": ":bug: fix old node version",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-08T23:45:05Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-08T23:45:02Z",
				"message": ":art: fix imports with new build script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-08T23:44:44Z",
				"message": ":bug: fix build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-08T08:50:32Z",
				"message": "Merge pull request #418 from TheArcaneBrony/compiler-change\n\nSwitch compiler to swc",
				"messageBody": "Switch compiler to swc"
			},
			{
				"committedDate": "2021-10-08T08:43:43Z",
				"message": ":sparkles: bundle build script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-07T16:22:15Z",
				"message": "Merge branch 'compiler-change' of https://github.com/thearcanebrony/fosscord-server into pr/TheArcaneBrony/418-1",
				"messageBody": "…osscord-server into pr/TheArcaneBrony/418-1"
			},
			{
				"committedDate": "2021-10-07T16:21:17Z",
				"message": ":bug: fix swc config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-07T16:21:01Z",
				"message": ":zap: fast build script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-07T16:20:03Z",
				"message": ":bug: fix types + swcrc configs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-07T07:59:04Z",
				"message": ":bug: fix swcrc config: rewrite import -> require",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-06T15:39:32Z",
				"message": ":arrow_up: update packages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T18:47:12Z",
				"message": ":arrow_up: lambert-server@1.2.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T18:32:22Z",
				"message": ":art: add build script to bundle setup",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T18:18:14Z",
				"message": ":bug: fix set user settings",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:52:42Z",
				"message": ":bug: fix user projection",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:37:54Z",
				"message": ":art: reformatted",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:37:35Z",
				"message": ":bug: fix client locale",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:37:20Z",
				"message": ":sparkles: added autoJoin guild to config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:34:13Z",
				"message": ":art: move field error to util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:33:23Z",
				"message": ":sparkles: add User.register() method",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:32:42Z",
				"message": ":arrow_up: update mnjsf",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T17:32:29Z",
				"message": ":bug: fix windows db file path",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T15:39:21Z",
				"message": ":bug: fix lazy request",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T15:00:58Z",
				"message": ":art: improve migration script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T15:00:43Z",
				"message": ":bug: fix guild create with client template",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T14:37:30Z",
				"message": ":sparkles: auto register guest account",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T14:35:38Z",
				"message": ":bug: fix bundle setup",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T21:14:03Z",
				"message": ":sparkles: db migrate script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:43:51Z",
				"message": ":sparkles: generalize primary column to work with mongodb object id",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:06:17Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:01:33Z",
				"message": "Merge pull request #413 from Thesourtimes/master\n\nAdd colors for some logs + ASCII on startup",
				"messageBody": "Add colors for some logs + ASCII on startup"
			},
			{
				"committedDate": "2021-10-04T20:01:05Z",
				"message": ":arrow_up: update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T19:57:24Z",
				"message": ":construction: different db engines",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T08:47:04Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T08:46:54Z",
				"message": ":sparkles: custom user flags offset",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-03T21:32:28Z",
				"message": "Merge pull request #412 from TheArcaneBrony/master\n\nAdd subscription plans so the client doesn't crash",
				"messageBody": "Add subscription plans so the client doesn't crash"
			},
			{
				"committedDate": "2021-10-03T21:32:10Z",
				"message": ":truck: rename id -> sku_id",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-03T20:53:01Z",
				"message": ":bug: fix message reactions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-03T18:20:50Z",
				"message": "Merge pull request #411 from afeuerstein/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-02T23:59:38Z",
				"message": ":bug: fix registration",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-02T23:55:57Z",
				"message": ":sparkles: add ``right`` option to route()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-02T23:42:55Z",
				"message": ":sparkles: User instance rights",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-02T13:12:47Z",
				"message": ":art: restructure gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-01T21:01:08Z",
				"message": "Merge pull request #410 from TheArcaneBrony/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-01T19:30:36Z",
				"message": ":bug: fix schema + user modify not working",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-01T18:52:50Z",
				"message": ":bug: fix disable register",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-01T18:11:05Z",
				"message": ":sparkles: registration disabled notice",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-01T18:08:56Z",
				"message": "Merge branch 'master' of http://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-01T18:08:51Z",
				"message": ":sparkles: new user flags",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-01T18:08:45Z",
				"message": "fix #406",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-30T16:02:30Z",
				"message": "Merge pull request #404 from Thesourtimes/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-30T15:01:32Z",
				"message": "Merge pull request #403 from Thesourtimes/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-29T14:39:17Z",
				"message": "Merge pull request #402 from Thesourtimes/master\n\nImprove store",
				"messageBody": "Improve store"
			},
			{
				"committedDate": "2021-09-28T20:27:01Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-26T09:34:06Z",
				"message": ":bug: fix channel permission overwrites",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-25T21:55:40Z",
				"message": ":bug: fix role can't set permission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-25T21:55:19Z",
				"message": ":sparkles: add private and public endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-25T21:54:52Z",
				"message": ":bug: message attachment url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-25T21:54:30Z",
				"message": ":lock: XSS content type: html",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-25T21:24:16Z",
				"message": ":sparkles: key value config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-25T02:20:35Z",
				"message": ":bug: fix #392",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-25T02:20:11Z",
				"message": ":bug: fix guild template create",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-24T08:43:43Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-24T08:41:52Z",
				"message": ":sparkles: added User flags",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T17:36:35Z",
				"message": ":art: sort openapi tags by alphabet",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T15:29:00Z",
				"message": ":art: remove start from setup script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T15:03:36Z",
				"message": "Merge pull request #372 from fosscord/unittests\n\nAutomatic Unittests + documentation",
				"messageBody": "Automatic Unittests + documentation"
			},
			{
				"committedDate": "2021-09-23T14:58:07Z",
				"message": ":bug: prepare/postinstall only works for packages not local npm install",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T14:30:28Z",
				"message": ":bug: fix install script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T14:07:25Z",
				"message": "Merge branch 'master' into unittests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T14:03:50Z",
				"message": ":bug: fix (pre) install scripts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T12:01:05Z",
				"message": "Merge pull request #394 from ChrisChrome/erlpack-fix",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-23T04:46:54Z",
				"message": "Merge pull request #393 from Slappy826/patch-1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-21T21:29:17Z",
				"message": ":sparkles: example value in documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-21T21:13:31Z",
				"message": ":sparkles: unit tests expect event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-21T20:52:30Z",
				"message": ":sparkles: generate openapi documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T21:35:37Z",
				"message": ":bug: fix unittests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T21:35:32Z",
				"message": ":sparkles: add option to disable all rate limits",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T21:35:04Z",
				"message": ":bug: fix errror handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T21:34:54Z",
				"message": ":art: rewrite imports",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T19:49:42Z",
				"message": "Merge branch 'master' into unittests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T19:34:33Z",
				"message": ":bug: fix relationships",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T19:27:08Z",
				"message": "Merge pull request #382 from fosscord/auto-delete-relations\n\nAuto delete relations",
				"messageBody": "Auto delete relations"
			},
			{
				"committedDate": "2021-09-20T18:22:56Z",
				"message": ":bug: fix .delete -> add onDelete: \"CASCADE\"",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T16:34:13Z",
				"message": "Merge pull request #386 from ChrisChrome/master\n\nDelete messages before deleting channel",
				"messageBody": "Delete messages before deleting channel"
			},
			{
				"committedDate": "2021-09-20T16:33:33Z",
				"message": "Update index.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T16:02:57Z",
				"message": ":sparkles: finish and fix .delete() for one-to-many relations",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T15:38:18Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T15:38:16Z",
				"message": ":sparkles: accept invite page",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T15:15:47Z",
				"message": ":arrow_up: update test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-20T15:11:22Z",
				"message": ":construction: auto delete relations",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T20:15:30Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T17:09:13Z",
				"message": "Merge branch 'master' into auto-delete-relations",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T17:05:26Z",
				"message": ":truck: move file handle to utility",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T16:59:54Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T16:47:38Z",
				"message": ":art: add orphanedRowAction and cascade onDelete to entities",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T16:46:22Z",
				"message": ":art: remove deleteMessageAttachments and move to entity",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T16:45:09Z",
				"message": ":bug: fix bundle debug",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T16:44:49Z",
				"message": ":truck: move handleFile to cdn",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-19T16:43:25Z",
				"message": ":art: user is verified by default",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-18T19:05:29Z",
				"message": "Merge pull request #377 from TheArcaneBrony/request-logging\n\nFix environment variable name to work on non-Windows platforms",
				"messageBody": "Fix environment variable name to work on non-Windows platforms"
			},
			{
				"committedDate": "2021-09-18T18:45:30Z",
				"message": "Merge pull request #375 from TheArcaneBrony/request-logging\n\nAdd request logging (with env var: log-requests)",
				"messageBody": "Add request logging (with env var: log-requests)"
			},
			{
				"committedDate": "2021-09-18T17:20:28Z",
				"message": "Merge pull request #369 from AlTech98/fix-dm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-18T14:24:47Z",
				"message": "Merge pull request #374 from TheArcaneBrony/dummy-connections-endpoint\n\nAdd /users/@me/connections",
				"messageBody": "Add /users/@me/connections"
			},
			{
				"committedDate": "2021-09-18T14:24:42Z",
				"message": "Update connections.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-18T09:56:06Z",
				"message": ":sparkles: route middleware test option",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-17T23:50:29Z",
				"message": ":sparkles: jest automatic tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-17T23:50:20Z",
				"message": ":art: use typescript plugin that converts to relative paths",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-17T23:49:36Z",
				"message": ":sparkles: generate test responses",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-17T23:49:17Z",
				"message": ":pencil: add default route description to all routes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-17T22:19:53Z",
				"message": ":bug: fix guild create icon",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-17T21:42:40Z",
				"message": ":bug: fix body parse treating null not as undefined (except for icons/avatars)",
				"messageBody": "…/avatars)"
			},
			{
				"committedDate": "2021-09-17T08:57:24Z",
				"message": "Update ChannelService.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-16T20:03:30Z",
				"message": ":bug: fix vanity url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-16T18:55:50Z",
				"message": ":arrow_up: update package",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-16T18:49:17Z",
				"message": "Revert \"fix #128\"\n\nThis reverts commit 8893fd16d90ad599538ccb62f8f77711aa891bbd.",
				"messageBody": "This reverts commit 8893fd16d90ad599538ccb62f8f77711aa891bbd."
			},
			{
				"committedDate": "2021-09-16T18:49:12Z",
				"message": "Revert \"fix #129\"\n\nThis reverts commit 8f862f0e5dba3985b4f38406fc19b5c5350324b9.",
				"messageBody": "This reverts commit 8f862f0e5dba3985b4f38406fc19b5c5350324b9."
			},
			{
				"committedDate": "2021-09-16T18:49:07Z",
				"message": "Revert \":construction: webhook\"\n\nThis reverts commit df2b83ac158be1e7233d8edce59033c15c193599.",
				"messageBody": "This reverts commit df2b83ac158be1e7233d8edce59033c15c193599."
			},
			{
				"committedDate": "2021-09-16T18:46:24Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-16T18:46:22Z",
				"message": ":arrow_up: fix + update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-14T20:52:08Z",
				"message": "Merge pull request #366 from erkinalp/patch-2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-14T20:15:55Z",
				"message": ":construction: webhook",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-14T19:16:15Z",
				"message": "fix #129",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-14T19:16:04Z",
				"message": "fix #128",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-14T11:18:32Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-14T11:13:50Z",
				"message": "Merge pull request #360 from AlTech98/invite\n\nInvite fixes",
				"messageBody": "Invite fixes"
			},
			{
				"committedDate": "2021-09-14T11:08:02Z",
				"message": "Merge pull request #359 from Thesourtimes/master\n\nadd store endpoints",
				"messageBody": "add store endpoints"
			},
			{
				"committedDate": "2021-09-13T17:28:17Z",
				"message": "Merge pull request #358 from AlTech98/fix-356\n\nFix #356",
				"messageBody": "Fix #356"
			},
			{
				"committedDate": "2021-09-13T17:12:39Z",
				"message": "Merge pull request #357 from AlTech98/user-update\n\nEmit USER_UPDATE",
				"messageBody": "Emit USER_UPDATE"
			},
			{
				"committedDate": "2021-09-13T17:12:19Z",
				"message": "Update index.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-13T15:59:21Z",
				"message": "Merge pull request #355 from AlTech98/attachments\n\nAttachments fixes",
				"messageBody": "Attachments fixes"
			},
			{
				"committedDate": "2021-09-13T15:51:37Z",
				"message": ":bug: fix fosscord.js",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-13T15:51:16Z",
				"message": ":art: remove unused imports",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-13T10:22:59Z",
				"message": ":bug: fix In() query",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-13T10:22:41Z",
				"message": ":bug: fix relationship",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T23:11:03Z",
				"message": ":bug: fix dm #321",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T22:17:56Z",
				"message": ":bug: fix channel events + message send",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T22:00:11Z",
				"message": ":bug: fix invites: ajv doesn't treat null as undefined",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T21:32:55Z",
				"message": "Merge branch 'typescript-interface-body-parser+autogenerate-unit-tests+documentation'",
				"messageBody": "…s+documentation'"
			},
			{
				"committedDate": "2021-09-12T21:28:56Z",
				"message": ":sparkles: #307 done",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T19:21:08Z",
				"message": ":construction: :sparkles: new body parser (bans route)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T19:20:47Z",
				"message": ":bug: fix gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T19:09:29Z",
				"message": ":art: remove long relatives paths -> short module paths",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-12T17:40:15Z",
				"message": "Merge pull request #353 from AlTech98/dummy-routes\n\nAdd dummy missing routes",
				"messageBody": "Add dummy missing routes"
			},
			{
				"committedDate": "2021-09-12T13:32:58Z",
				"message": "Merge pull request #348 from AlTech98/fix-cdn-upload\n\nIncreased CDN max upload to 10mb, fix #318",
				"messageBody": "Increased CDN max upload to 10mb, fix #318"
			},
			{
				"committedDate": "2021-09-12T13:32:43Z",
				"message": "Merge pull request #347 from AlTech98/fixrelationships\n\nFix relationships get query",
				"messageBody": "Fix relationships get query"
			},
			{
				"committedDate": "2021-09-08T11:36:14Z",
				"message": "Merge pull request #343 from Stilic/patch-1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-07T20:54:31Z",
				"message": "Update User.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T21:27:41Z",
				"message": "Merge pull request #338 from CyberL1/master\n\nAdd token authorization method to swagger openapi",
				"messageBody": "Add token authorization method to swagger openapi"
			},
			{
				"committedDate": "2021-09-04T15:59:29Z",
				"message": ":arrow_up: update test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T15:39:03Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T12:07:58Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T10:18:49Z",
				"message": "Merge pull request #320 from AlTech98/master\n\nAdded /guilds/:id/voice-states/ apis, VOICE_SERVER_UPDATE fix",
				"messageBody": "Added /guilds/:id/voice-states/ apis, VOICE_SERVER_UPDATE fix"
			},
			{
				"committedDate": "2021-09-04T10:17:26Z",
				"message": ":pencil: added comments and updated type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:38:19Z",
				"message": ":bug: fix ReadyEventData",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:32:11Z",
				"message": ":bug: fix patch-package",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:26:47Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:26:25Z",
				"message": ":bug: api member add roles -> make sure that roles exist",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:25:40Z",
				"message": ":bug: fix ready members payload",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:25:10Z",
				"message": ":bug: fix invites",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:24:31Z",
				"message": ":bug: fix permissions if user is only member of guild",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:23:39Z",
				"message": ":arrow_up: update mpath because of  a security vulnerability",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-04T09:23:12Z",
				"message": ":bug: fix error handler and asset router",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T18:01:42Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T13:57:44Z",
				"message": "Merge pull request #314 from AlTech98/master\n\nFix VoiceStateUpdate",
				"messageBody": "Fix VoiceStateUpdate"
			},
			{
				"committedDate": "2021-09-03T13:57:29Z",
				"message": ":bug: only delete session id for authenticated connections",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T13:48:24Z",
				"message": ":zap: improve invite generation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T13:48:09Z",
				"message": ":zap: improve invite generation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T13:27:00Z",
				"message": ":bug: fix #311",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T11:23:20Z",
				"message": ":bug: fix member roles + list",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T11:10:24Z",
				"message": ":bug: fix member has no roles in guild create",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T10:53:25Z",
				"message": ":bug: fix client connection crash on guild create",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T03:17:49Z",
				"message": "fix #310",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T03:04:13Z",
				"message": ":zap: simplify permissions query",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T03:03:46Z",
				"message": ":bug: fix#310",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T03:03:11Z",
				"message": ":sparkles: guild position update",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T02:05:28Z",
				"message": ":see_no_evil: add database.db to .gitignore",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T02:04:48Z",
				"message": ":pencil: drop tables script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T02:04:34Z",
				"message": ":bug: fix message sending",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T02:02:21Z",
				"message": ":bug: fix #289",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T01:38:40Z",
				"message": ":arrow_up: update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T01:38:19Z",
				"message": ":art: update entities",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-03T01:37:55Z",
				"message": ":bug: fix member + member list",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-02T23:15:19Z",
				"message": "fix #309",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-02T19:31:44Z",
				"message": ":bug: fix entity missing an id (replace .insert with new Entity().save)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-02T19:11:08Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-02T18:20:15Z",
				"message": "Merge pull request #306 from AlTech98/master\n\nGateway VOICE_STATE_UPDATE and sessions implementation, fix #210",
				"messageBody": "Gateway VOICE_STATE_UPDATE and sessions implementation, fix #210"
			},
			{
				"committedDate": "2021-09-02T18:18:57Z",
				"message": ":sparkles: add editor config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-02T18:10:25Z",
				"message": ":art: reformat files",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-02T17:50:05Z",
				"message": ":sparkles: add user_id field to Member",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-02T08:27:33Z",
				"message": ":art: update openapi title",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-01T22:14:34Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-01T21:35:20Z",
				"message": ":arrow_up: update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-01T21:34:55Z",
				"message": ":bug: fix entity types and projection",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-01T21:33:14Z",
				"message": ":sparkles: generate open api schema based on body and db entities",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-01T13:45:33Z",
				"message": "Merge pull request #302 from sudenoh/master\n\nAdded property maxWebhooks to ConfigValue and defined a default value…",
				"messageBody": "Added property maxWebhooks to ConfigValue and defined a default value…"
			},
			{
				"committedDate": "2021-09-01T09:31:59Z",
				"message": "Merge pull request #301 from fosscord/feat--DiscordApiErrors\n\nUse discord api errors and check limits",
				"messageBody": "Use discord api errors and check limits"
			},
			{
				"committedDate": "2021-09-01T09:27:52Z",
				"message": ":sparkles: use DiscordApiErrors and check limits",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-01T09:07:56Z",
				"message": "fix #295",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-01T08:47:00Z",
				"message": "Merge pull request #300 from fosscord/typeorm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T16:13:16Z",
				"message": "Merge pull request #299 from AlTech98/typeorm\n\nCreated list of all possible api errors and made them throwable in routes code",
				"messageBody": "Created list of all possible api errors and made them throwable in routes code"
			},
			{
				"committedDate": "2021-08-31T16:10:36Z",
				"message": "Merge branch 'typeorm' into typeorm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:58:49Z",
				"message": "Merge branch 'typeorm' of https://github.com/fosscord/fosscord-api into typeorm",
				"messageBody": "…to typeorm"
			},
			{
				"committedDate": "2021-08-31T15:58:47Z",
				"message": ":bug: db query fixes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:58:28Z",
				"message": ":sparkles: channel recipients",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:57:44Z",
				"message": "Channel utility methods in entity",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:57:19Z",
				"message": "fix member roles",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:56:33Z",
				"message": ":zap: use insert instead of save",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:55:23Z",
				"message": ":bug: fix message sending",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:54:57Z",
				"message": ":sparkles: typeorm error handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-31T15:54:09Z",
				"message": ":sparkles: delete _ids from entities",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-30T22:46:16Z",
				"message": "Merge pull request #297 from AlTech98/typeorm\n\nImplemented voice apis #127 and #78",
				"messageBody": "Implemented voice apis #127 and #78"
			},
			{
				"committedDate": "2021-08-30T10:15:07Z",
				"message": "Merge branch 'typeorm' of https://github.com/fosscord/fosscord-api into typeorm",
				"messageBody": "…to typeorm"
			},
			{
				"committedDate": "2021-08-30T10:15:06Z",
				"message": ":construction: typeorm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-30T10:14:32Z",
				"message": ":zap: only local rate limit to prevent to much pressure on the database",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-29T15:12:46Z",
				"message": ":bug: convert bigint -> string",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-29T14:58:59Z",
				"message": "Merge branch 'typeorm' of https://github.com/fosscord/fosscord-api into typeorm",
				"messageBody": "…to typeorm"
			},
			{
				"committedDate": "2021-08-29T14:58:56Z",
				"message": "fix cdn",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-29T14:58:53Z",
				"message": "fix bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-29T14:58:46Z",
				"message": "fix login register + message",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-29T14:58:37Z",
				"message": "fix util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-29T14:58:23Z",
				"message": "fix rate limit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-28T22:30:04Z",
				"message": ":sparkles: typeorm gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-28T22:03:58Z",
				"message": ":sparkles: update util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-28T22:03:40Z",
				"message": ":sparkles: typeorm api rewrite done",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-27T20:29:28Z",
				"message": "Merge pull request #287 from EMREOYUN/patch-1\n\nTR",
				"messageBody": "TR"
			},
			{
				"committedDate": "2021-08-27T09:11:16Z",
				"message": ":construction: typeorm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-27T09:10:42Z",
				"message": ":construction: api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-26T18:48:09Z",
				"message": ":sparkles: use RelationId",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-26T00:07:16Z",
				"message": ":bug: fix unit tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-25T22:22:26Z",
				"message": ":sparkles: unit test",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-25T22:22:11Z",
				"message": ":bug: patch modules",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-24T15:36:37Z",
				"message": "Merge branch 'master' into typeorm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-24T14:35:59Z",
				"message": ":sparkles: util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-24T14:35:39Z",
				"message": ":white_check_mark: util unit tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-24T14:35:20Z",
				"message": ":construction: gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-24T14:35:04Z",
				"message": ":construction: api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-24T14:34:46Z",
				"message": ":sparkles: typeorm entities",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-23T01:52:14Z",
				"message": "generate schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-23T01:50:58Z",
				"message": "test",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-22T11:21:42Z",
				"message": "Merge pull request #278 from daantje1/patch-2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-22T11:21:32Z",
				"message": "Merge pull request #277 from daantje1/patch-1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-22T10:41:21Z",
				"message": ":construction: typeorm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-21T20:03:53Z",
				"message": "Merge pull request #275 from LukasDoesDev/patch-1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-21T14:47:22Z",
				"message": ":construction: typeorm",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-19T19:29:12Z",
				"message": ":art: update bundle build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-19T19:28:57Z",
				"message": ":bug: fix vanity url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T14:15:48Z",
				"message": "Merge branches 'master' and 'master' of https://github.com/fosscord/fosscord-server",
				"messageBody": "…osscord-server"
			},
			{
				"committedDate": "2021-08-18T14:10:11Z",
				"message": "revert 2cff55f",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T11:47:31Z",
				"message": ":bug: update build script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T10:41:44Z",
				"message": ":bug: fix #267",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T10:33:33Z",
				"message": ":bug: fix guild channel reorder",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T09:56:30Z",
				"message": ":loud_sound: opcode logger",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T09:53:22Z",
				"message": ":sparkles: add default_auto_archive_duration to channel",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T09:53:03Z",
				"message": ":ambulance: user settings route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T09:48:51Z",
				"message": "fix #199",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-18T09:47:28Z",
				"message": ":bug: fix findOneAndUpdate",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T20:57:30Z",
				"message": "fix #199",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T20:42:16Z",
				"message": ":art: clean up",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T20:41:38Z",
				"message": ":sparkles: mention regex",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T20:41:21Z",
				"message": ":sparkles: message mention parsing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T18:44:52Z",
				"message": ":sparkles: use RELEASE_VERSION env",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T18:37:13Z",
				"message": ":loud_sound: verbose error handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T18:36:57Z",
				"message": ":bug: fix login route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T17:33:32Z",
				"message": ":bug: fix import",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T17:22:56Z",
				"message": ":bug: update bundle import",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T17:12:03Z",
				"message": ":bug: fix bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T17:01:36Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T16:56:52Z",
				"message": ":bug: update release.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T16:51:17Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-17T16:07:32Z",
				"message": ":bug: fix bundle import path",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T22:16:57Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T22:08:59Z",
				"message": ":bug: fix windows",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T22:00:09Z",
				"message": ":bug: fix windows release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T21:53:44Z",
				"message": ":bug: fix symlink linux",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T21:48:00Z",
				"message": "fix pre release script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T21:42:21Z",
				"message": ":bug: pre release script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T21:29:56Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T21:17:45Z",
				"message": "fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T21:16:16Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T21:11:55Z",
				"message": ":bug: fix release update path",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T20:59:08Z",
				"message": ":bug: update release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T20:47:14Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T16:46:13Z",
				"message": ":bug: fix symlink in bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T15:42:17Z",
				"message": ":sparkles: delete finished todos",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T15:04:14Z",
				"message": ":bug: fix release caxa start command",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T13:07:18Z",
				"message": "update Event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T13:07:09Z",
				"message": ":sparkles: update auth middleware",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-16T13:06:31Z",
				"message": "update Rate Limit with new event transmission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T22:14:56Z",
				"message": ":bug: fix release caxa",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T21:28:28Z",
				"message": ":bug: fix release version",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T21:07:56Z",
				"message": ":bug: fix release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T21:02:46Z",
				"message": ":bug: fix util install",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T20:36:35Z",
				"message": ":bug: build bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T20:32:57Z",
				"message": ":bug: fix bundle postinstall",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T20:18:53Z",
				"message": ":arrow_up: update mongoose types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T20:01:13Z",
				"message": "delete assets",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T19:56:30Z",
				"message": ":bug: fix server bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T12:41:50Z",
				"message": ":bug: prevent @everyone role deletion",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T12:41:14Z",
				"message": ":construction: auto update",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T12:40:59Z",
				"message": ":bug: fix types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:53:24Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:53:21Z",
				"message": "update packages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:40:01Z",
				"message": "Update release.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:37:26Z",
				"message": "Update release.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:35:31Z",
				"message": "Update release.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:34:34Z",
				"message": "Update release.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:30:00Z",
				"message": "Update release.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:23:04Z",
				"message": ":bug: fix version number in release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:20:36Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T11:20:32Z",
				"message": "update release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-15T07:30:35Z",
				"message": "Merge pull request #270 from reisxd/patch-1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T22:58:53Z",
				"message": ":bug: fix tsc missing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T22:10:54Z",
				"message": ":sparkles: start.bat and start.sh script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T21:15:19Z",
				"message": ":art: clean up server bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T20:25:49Z",
				"message": "move devDependencies to dependencies\nbecause bundle installs api/gateway/cdn as npm dep. and the dev packages don't get automatically installed",
				"messageBody": "because bundle installs api/gateway/cdn as npm dep. and the dev packages don't get automatically installed"
			},
			{
				"committedDate": "2021-08-14T12:29:08Z",
				"message": ":art: rename run script to start",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T11:57:34Z",
				"message": ":sparkles: server bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T11:56:46Z",
				"message": ":bug: fix Guild + Channel create",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T11:55:51Z",
				"message": ":bug: fix guild create with channel template",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-14T11:55:27Z",
				"message": ":arrow_up: update test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T20:57:46Z",
				"message": ":construction: fix server bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T18:54:59Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T18:54:58Z",
				"message": ":pencil: update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T18:54:52Z",
				"message": ":bug: fix bundle listen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T18:54:16Z",
				"message": ":bug: fix util types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T18:54:03Z",
				"message": ":bug: fix bundle gateway listen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T18:53:50Z",
				"message": ":bug: fix api middleware",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T18:53:29Z",
				"message": ":bug: fix dependencies and build for bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T17:20:03Z",
				"message": ":bug: fix types + packages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T11:18:45Z",
				"message": ":pencil: updated links to fosscord-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T11:08:14Z",
				"message": "Merge branch 'pr/darkhpp/261-2'",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T11:07:25Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T11:03:18Z",
				"message": "Merge branch 'master' into pr/darkhpp/261-2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T11:00:49Z",
				"message": "abstract Event emission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T11:00:31Z",
				"message": ":sparkles: event emit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T11:00:16Z",
				"message": "cleanup rtc",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T10:59:59Z",
				"message": "rename @fosscord/server-util to -> @fosscord/util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T10:58:18Z",
				"message": ":sparkles: server bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-13T10:01:56Z",
				"message": "Merge pull request #260 from mugman174/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T23:09:08Z",
				"message": ":sparkles: docker compose",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T22:14:04Z",
				"message": "Merge pull request #256 from luth31/master\n\n[Docker] Publish cdn, gateway and api when file change",
				"messageBody": "[Docker] Publish cdn, gateway and api when file change"
			},
			{
				"committedDate": "2021-08-12T21:38:25Z",
				"message": "Create README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:51:04Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:50:29Z",
				"message": ":sparkles: webrtc",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:49:50Z",
				"message": "Delete .DS_Store",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:47:21Z",
				"message": "Merge branch 'webrtc'",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:33:42Z",
				"message": ":sparkles: rtc",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:33:02Z",
				"message": ":sparkles: util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:32:55Z",
				"message": "Merge branch 'rtc'",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:22:16Z",
				"message": "Merge branch 'master' into util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:18:05Z",
				"message": ":sparkles: gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:17:41Z",
				"message": "Merge branch 'master' into gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:16:45Z",
				"message": ":sparkles: cdn",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:16:17Z",
				"message": "Merge branch 'cdn'",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T18:09:35Z",
				"message": ":sparkles: api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T16:58:02Z",
				"message": "npm i @fosscord/server-util@1.3.52",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T16:57:45Z",
				"message": "1.3.52",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T16:57:43Z",
				"message": ":sparkles: config add rate limit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T16:57:27Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T16:57:25Z",
				"message": ":sparkles: rate limit now configurable in the config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T16:15:05Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T15:43:58Z",
				"message": ":bug: fix rabbit mq -> fanout instead of work queue",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T15:43:53Z",
				"message": ":bug: fix rabbit mq -> fanout instead of work queue",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T14:47:52Z",
				"message": ":sparkles: rabbitmq",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T14:47:51Z",
				"message": ":sparkles: RabbitMQ",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T14:46:46Z",
				"message": "1.3.51",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T14:45:41Z",
				"message": ":pencil: improve error message",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T14:45:31Z",
				"message": ":bug: fix template",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T14:45:23Z",
				"message": "fix rabbitmq export",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-12T00:26:13Z",
				"message": ":bug: :sparkles: fix templates",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T23:49:43Z",
				"message": ":bug: fix login undelete/undisable",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T23:17:08Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-server-util",
				"messageBody": "…util"
			},
			{
				"committedDate": "2021-08-11T23:16:50Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T23:15:32Z",
				"message": "1.3.50",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T23:15:26Z",
				"message": ":bug: fix config: don't use mongodb change streams",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T22:27:09Z",
				"message": "1.3.49",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T22:27:05Z",
				"message": ":sparkles: added .overwriteChannel function to permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T19:13:54Z",
				"message": "Merge pull request #198 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-08-11T19:12:53Z",
				"message": "New translations auth.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T19:12:52Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T19:12:51Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T19:12:50Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:45:09Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:45:02Z",
				"message": ":sparkles: use rabbitmq for event transmission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:44:46Z",
				"message": ":construction: fix /users/@me patch route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:44:26Z",
				"message": ":construction: fix /users/@me patch route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:44:09Z",
				"message": ":construction: fix guild channel position",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:43:27Z",
				"message": "npm i @fosscord/server-util@1.3.48",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:43:14Z",
				"message": "fix events: only send on id",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:42:10Z",
				"message": ":pencil2: fix typo",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:29:42Z",
				"message": "1.3.48",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T17:29:39Z",
				"message": ":sparkles: rabbitmq",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-11T11:17:20Z",
				"message": ":pencil2: fix RateLimit onlyIp typo",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T23:25:09Z",
				"message": ":bug: fix guild channel position update",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:04:36Z",
				"message": "Merge pull request #194 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-08-10T19:03:07Z",
				"message": "New translations auth.json (Urdu (India))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:03:06Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:03:05Z",
				"message": "New translations auth.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:03:04Z",
				"message": "New translations auth.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:03:03Z",
				"message": "New translations auth.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:03:02Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:03:01Z",
				"message": "New translations auth.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:59Z",
				"message": "New translations auth.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:58Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:57Z",
				"message": "New translations auth.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:56Z",
				"message": "New translations auth.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:56Z",
				"message": "New translations auth.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:55Z",
				"message": "New translations auth.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:54Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:53Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:52Z",
				"message": "New translations auth.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:51Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:50Z",
				"message": "New translations auth.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:49Z",
				"message": "New translations auth.json (Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:48Z",
				"message": "New translations auth.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:47Z",
				"message": "New translations auth.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:46Z",
				"message": "New translations auth.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:45Z",
				"message": "New translations auth.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:44Z",
				"message": "New translations auth.json (Indonesian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:43Z",
				"message": "New translations auth.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:42Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:41Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:40Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:39Z",
				"message": "New translations auth.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:38Z",
				"message": "New translations auth.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:37Z",
				"message": "New translations auth.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:36Z",
				"message": "New translations auth.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:35Z",
				"message": "New translations auth.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:34Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:33Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:32Z",
				"message": "New translations auth.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:31Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T19:02:30Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-10T18:58:20Z",
				"message": "1.3.47",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T23:48:56Z",
				"message": ":bug: fix bans",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T23:46:46Z",
				"message": "1.3.46",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T23:46:44Z",
				"message": ":bug: fix ban schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T22:15:44Z",
				"message": ":bug: fix Member not deleted on guild delete",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T22:15:31Z",
				"message": ":bug: fix voicestate",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T19:10:49Z",
				"message": ":bug: fix test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T18:44:55Z",
				"message": "npm i @fosscord/server-util@1.3.45",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T18:44:41Z",
				"message": ":bug: fix cdn endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T18:34:35Z",
				"message": "1.3.45",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T18:34:34Z",
				"message": ":bug: fix MessageType",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T14:16:38Z",
				"message": ":bug: fix cdn endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T14:12:53Z",
				"message": ":tada: default nitro true",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T13:38:54Z",
				"message": "1.3.44",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T13:38:50Z",
				"message": ":recycle: convert bigint literals to objects for backwards compatibility",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T10:58:05Z",
				"message": ":art: move test client in different file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T10:57:47Z",
				"message": ":bug: fix endpoints in test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-08T15:22:00Z",
				"message": ":sparkles: ping route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-08T15:19:14Z",
				"message": ":sparkles: ping route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-08T15:18:28Z",
				"message": ":sparkles: get cdn endpoint from env",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-08T15:18:14Z",
				"message": ":sparkles: ping route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T23:12:03Z",
				"message": "npm i @fosscord/server-util@1.3.43",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T23:11:56Z",
				"message": "npm i @fosscord/server-util@1.3.43",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T23:11:30Z",
				"message": "1.3.43",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T23:11:15Z",
				"message": ":bug: fix bitfield resolve",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T23:11:00Z",
				"message": ":bug: fix channel subscription + ready payload",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T23:10:43Z",
				"message": ":bug: fix message permission check",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T22:29:02Z",
				"message": ":bug: fix relationships",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T22:28:48Z",
				"message": "npm i @fosscord/server-util@1.3.42",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T22:28:45Z",
				"message": "npm i @fosscord/server-util@1.3.42",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T22:28:42Z",
				"message": "npm i @fosscord/server-util@1.3.42",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T22:27:54Z",
				"message": "1.3.42",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T22:27:28Z",
				"message": "1.3.41",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T22:27:23Z",
				"message": ":lock: fix exposing user in channel.recipients",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T21:04:53Z",
				"message": "increase default banner/icon upload limit from 2mb -> 10mb",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T21:04:36Z",
				"message": ":bug: fix vanity url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T19:50:20Z",
				"message": ":bug: fix post/patch channel",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T19:49:58Z",
				"message": ":bug: fix vanity url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T19:27:47Z",
				"message": "Merge pull request #191 from BanTheNons/invite-splashes\n\nImplemented invite splashes",
				"messageBody": "Implemented invite splashes"
			},
			{
				"committedDate": "2021-08-07T19:18:11Z",
				"message": "Merge pull request #190 from BanTheNons/profile-banners\n\nImplemented profile banners!",
				"messageBody": "Implemented profile banners!"
			},
			{
				"committedDate": "2021-08-07T19:15:16Z",
				"message": "Merge pull request #6 from BanTheNons/invite-splashes\n\nAdded invite splashes",
				"messageBody": "Added invite splashes"
			},
			{
				"committedDate": "2021-08-07T19:13:48Z",
				"message": "npm i @fosscord/server-util@1.3.40",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T19:13:17Z",
				"message": "1.3.40",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T19:12:44Z",
				"message": "Merge pull request #13 from BanTheNons/user-banners\n\nImplemented profile banners!",
				"messageBody": "Implemented profile banners!"
			},
			{
				"committedDate": "2021-08-07T17:43:48Z",
				"message": "npm i @fosscord/server-util@1.3.39",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T17:43:14Z",
				"message": ":pencil: features list",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T17:42:26Z",
				"message": ":pencil: better error message if you upload icon",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T17:42:05Z",
				"message": ":bug: fix avatars",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T17:30:54Z",
				"message": ":pencil2: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T17:30:40Z",
				"message": ":bug: fix GuildUpdate Schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T17:21:25Z",
				"message": "Merge pull request #188 from BanTheNons/guild-icons-banners\n\nImplemented guild icons and banners",
				"messageBody": "Implemented guild icons and banners"
			},
			{
				"committedDate": "2021-08-07T17:21:00Z",
				"message": ":bug: fix handleFile()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T17:15:48Z",
				"message": ":art: add handleFile()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T16:52:22Z",
				"message": ":bug: fix file storage dir",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T16:52:05Z",
				"message": ":sparkles: add asset routes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T15:11:49Z",
				"message": "1.3.39",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T15:11:47Z",
				"message": ":bug: fix Message.stickers",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T14:46:53Z",
				"message": ":bug: fix gateway endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T14:11:28Z",
				"message": ":bug: fix identify",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T13:51:46Z",
				"message": ":bug: fix cors",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T13:44:56Z",
				"message": ":bug: fix path",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T11:35:33Z",
				"message": "1.3.38",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T11:15:35Z",
				"message": ":sparkles: icons + banners route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T11:15:26Z",
				"message": ":lock: fix path traversal security issue",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:38:09Z",
				"message": "npm i @fosscord/server-util@1.3.37",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:37:46Z",
				"message": "1.3.37",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:37:31Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-server-util",
				"messageBody": "…util"
			},
			{
				"committedDate": "2021-08-07T08:36:42Z",
				"message": "Merge pull request #12 from BanTheNons/publicuserprojection-bot\n\nAdded bot to PublicUserProjection and implemented user banner colors",
				"messageBody": "Added bot to PublicUserProjection and implemented user banner colors"
			},
			{
				"committedDate": "2021-08-07T08:28:36Z",
				"message": "Merge pull request #186 from BanTheNons/profile-route\n\nAdded the profile routes",
				"messageBody": "Added the profile routes"
			},
			{
				"committedDate": "2021-08-07T08:28:24Z",
				"message": "npm i @fosscord/server-util@1.3.36",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:23:12Z",
				"message": "1.3.36",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:21:56Z",
				"message": "Merge pull request #185 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-08-07T08:21:42Z",
				"message": "Merge pull request #187 from BanTheNons/fix-typo\n\nFixed a typo in vanity_url",
				"messageBody": "Fixed a typo in vanity_url"
			},
			{
				"committedDate": "2021-08-05T15:50:34Z",
				"message": "Merge pull request #11 from BanTheNons/publicuserprojection-bio\n\nAdded bio to PublicUserProjection",
				"messageBody": "Added bio to PublicUserProjection"
			},
			{
				"committedDate": "2021-08-05T11:44:52Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-05T11:44:50Z",
				"message": ":arrow_up: update demo test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-04T13:13:54Z",
				"message": "New translations common.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-04T13:13:53Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-01T20:56:16Z",
				"message": "Merge pull request #181 from luth31/master\n\n[Channel] Implement type 4 channel and clean the code",
				"messageBody": "[Channel] Implement type 4 channel and clean the code"
			},
			{
				"committedDate": "2021-08-01T09:31:22Z",
				"message": "Merge pull request #180 from fosscord/l10n_master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-01T08:54:29Z",
				"message": "New translations common.json (Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-01T08:54:28Z",
				"message": "New translations auth.json (Croatian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-30T15:37:22Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-30T15:37:16Z",
				"message": ":construction: message acknowledge",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-30T08:44:38Z",
				"message": "Merge pull request #179 from fosscord/l10n_master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-30T00:48:34Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-29T19:26:02Z",
				"message": "Merge pull request #76 from luth31/master\n\n[Dockerfile] Copy package-lock.json",
				"messageBody": "[Dockerfile] Copy package-lock.json"
			},
			{
				"committedDate": "2021-07-29T19:22:56Z",
				"message": "Merge pull request #178 from luth31/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-29T18:56:10Z",
				"message": "Merge pull request #177 from luth31/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-29T14:48:14Z",
				"message": "Merge pull request #75 from luth31/master\n\nMigrate docker builds to GitHub Actions",
				"messageBody": "Migrate docker builds to GitHub Actions"
			},
			{
				"committedDate": "2021-07-29T14:47:08Z",
				"message": "Merge pull request #176 from luth31/master\n\nFix and migrate docker builds to GitHub Actions",
				"messageBody": "Fix and migrate docker builds to GitHub Actions"
			},
			{
				"committedDate": "2021-07-26T05:08:44Z",
				"message": "Merge pull request #175 from luth31/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-26T05:08:04Z",
				"message": "Merge pull request #10 from luth31/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-24T07:19:20Z",
				"message": "Merge pull request #74 from luth31/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-22T16:22:12Z",
				"message": "Merge pull request #174 from DankDumpster/72-char\n\nMake password limit 72 to match discord's limit",
				"messageBody": "Make password limit 72 to match discord's limit"
			},
			{
				"committedDate": "2021-07-22T12:26:06Z",
				"message": "1.3.34",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-22T12:26:03Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-22T12:23:40Z",
				"message": "1.3.33",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-22T12:23:30Z",
				"message": ":sparkles: ReadState",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-22T12:04:24Z",
				"message": ":bug: fix 404 error return json instead of client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T20:46:19Z",
				"message": "fix guild create",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T20:46:06Z",
				"message": ":bug: fix login route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T20:45:58Z",
				"message": ":bug: fix gateway route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T20:44:22Z",
				"message": "1.3.31",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T20:42:18Z",
				"message": "1.3.30",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T20:42:07Z",
				"message": ":bug: fix findOne exists query",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T15:15:56Z",
				"message": "Merge pull request #172 from fosscord/l10n_master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T15:12:08Z",
				"message": "New translations common.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-19T15:12:07Z",
				"message": "New translations auth.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-18T17:51:19Z",
				"message": "fix attachment",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-18T17:49:17Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-18T17:49:12Z",
				"message": ":loud_sound: fix log",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-18T17:49:10Z",
				"message": ":loud_sound: fix log",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-18T17:49:03Z",
				"message": ":loud_sound: fix log",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-18T15:06:22Z",
				"message": "Merge pull request #170 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-07-18T15:06:11Z",
				"message": "New translations common.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-18T15:06:10Z",
				"message": "New translations auth.json (Slovak)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-16T15:08:14Z",
				"message": ":bug: remove bin from package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-16T14:16:10Z",
				"message": ":bug: fix github action",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-16T14:15:59Z",
				"message": ":arrow_up: update lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-16T14:15:48Z",
				"message": ":bug: fix server options",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-16T09:59:56Z",
				"message": "Update tsconfig.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-15T17:23:13Z",
				"message": ":truck: rename listen() -> start() for a consistent naming schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-13T18:55:20Z",
				"message": ":arrow_up: update @fosscord/server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T09:05:40Z",
				"message": ":heavy_minus_sign: delete rethink",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T09:05:09Z",
				"message": ":art: clean up bundle script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T08:25:28Z",
				"message": ":pencil: add uncompression message to releases",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T08:11:18Z",
				"message": ":bug: rearrange steps",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T08:06:04Z",
				"message": ":bug: fix file name",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T08:01:27Z",
				"message": ":bug: fix file names",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:53:19Z",
				"message": ":bug: fix version release name",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:44:32Z",
				"message": ":bug: fix release name",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:37:47Z",
				"message": ":bug: fix file name casing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:32:49Z",
				"message": ":bug: fix caxa build cmd",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:28:42Z",
				"message": ":bug: fix caxa build cmd",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:26:35Z",
				"message": ":arrow_down: downgrade nodejs version in actions runner",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:19:46Z",
				"message": "fix release action",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:11:48Z",
				"message": ":bug: fix publish release action",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T07:09:37Z",
				"message": ":sparkles: use caxa for bundling",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T05:59:46Z",
				"message": ":bug: fix windows path",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T05:57:17Z",
				"message": ":bug: fix release action",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-11T05:56:20Z",
				"message": ":sparkles: add win + macos to release",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T17:33:55Z",
				"message": ":bug: fix release name",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T17:02:32Z",
				"message": ":zap: cache assets",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T17:02:24Z",
				"message": ":wheelchair: use fs sync for backwards compatiblity",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T17:01:53Z",
				"message": ":sparkles: bundle exectuable",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T16:46:41Z",
				"message": ":wheelchair: use fs sync for backwards compatibility",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T16:05:12Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T16:05:11Z",
				"message": "findOne auto throws error if it doesn't exist'",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T15:51:32Z",
				"message": "1.3.29",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T15:51:19Z",
				"message": "auto throw error if findOne doesn't find any doc",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-09T17:45:49Z",
				"message": "Merge pull request #168 from jhcpeixoto/master\n\nUPDATE BCRYPT",
				"messageBody": "UPDATE BCRYPT"
			},
			{
				"committedDate": "2021-07-08T14:55:22Z",
				"message": "add prepublish script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-08T14:45:29Z",
				"message": "1.3.28",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-08T14:44:34Z",
				"message": "1.3.27",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-08T14:44:20Z",
				"message": "1.3.26",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-08T14:44:14Z",
				"message": ":see_no_evil: :lock: hide db password in log",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-08T09:05:12Z",
				"message": ":construction: pkg binary bundle",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-08T07:50:36Z",
				"message": "1.3.26",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-07T13:39:38Z",
				"message": ":arrow_up: update server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-07T13:22:17Z",
				"message": "1.3.25",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-07T13:21:30Z",
				"message": ":bug: fix Config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-05T16:45:30Z",
				"message": "Merge pull request #166 from robigan/openapi-yml\n\nOpenapi yml",
				"messageBody": "Openapi yml"
			},
			{
				"committedDate": "2021-07-05T12:29:02Z",
				"message": "Merge pull request #165 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-07-05T11:42:49Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-01T19:27:46Z",
				"message": ":sparkles: route specific rate limits",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-01T14:35:30Z",
				"message": "1.3.24",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-01T14:02:54Z",
				"message": "Merge pull request #162 from fosscord/feat--rate-limit\n\n[Feature] Rate Limit",
				"messageBody": "[Feature] Rate Limit"
			},
			{
				"committedDate": "2021-07-01T09:16:13Z",
				"message": ":sparkles: finished Rate Limit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-01T09:13:42Z",
				"message": "1.3.23",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-01T09:13:12Z",
				"message": ":sparkles: Rate Limit Bucket",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-01T07:33:54Z",
				"message": ":construction: rate limit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-30T19:58:10Z",
				"message": ":arrow_up: update checkToken usage",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-30T19:56:28Z",
				"message": "1.3.22",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-30T19:56:25Z",
				"message": ":sparkles: checkToken return user data",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-30T15:49:49Z",
				"message": "1.3.21",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-30T15:49:19Z",
				"message": ":sparkles: RateLimit Bucket",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-28T16:43:50Z",
				"message": ":construction: rate limit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-28T16:43:22Z",
				"message": ":sparkles: Rate Limit model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T21:51:30Z",
				"message": ":bug: fix ip address lookup",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T21:30:36Z",
				"message": ":sparkles: v9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T21:28:25Z",
				"message": ":bug: fix import",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T21:26:49Z",
				"message": ":arrow_up: update dev client version",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T21:14:13Z",
				"message": ":lock: register proxy ip check",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T21:11:18Z",
				"message": "1.3.20",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T21:11:04Z",
				"message": ":bug: fix mongoose cache",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T09:24:35Z",
				"message": "1.3.19",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-27T09:24:31Z",
				"message": ":sparkles: Config: ipdataApiKey + register.blockProxies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-26T20:45:01Z",
				"message": ":bug: fix empty message bug for attachments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-26T17:48:20Z",
				"message": ":bug: fix CORS",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-26T13:10:03Z",
				"message": "Merge pull request #161 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-06-26T12:36:19Z",
				"message": "New translations common.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-25T19:32:11Z",
				"message": "Merge pull request #4 from jhcpeixoto/master\n\nFIX MKDIR",
				"messageBody": "FIX MKDIR"
			},
			{
				"committedDate": "2021-06-25T13:56:26Z",
				"message": "Merge pull request #160 from jhcpeixoto/master\n\nCORS FIX",
				"messageBody": "CORS FIX"
			},
			{
				"committedDate": "2021-06-24T21:06:21Z",
				"message": "Merge pull request #159 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-06-24T21:06:09Z",
				"message": "New translations common.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-24T21:06:08Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-24T15:22:00Z",
				"message": ":bug: docker file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-24T06:52:24Z",
				"message": ":sparkles: allow bot tokens",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-24T06:52:08Z",
				"message": "Message reply",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-24T06:51:39Z",
				"message": ":construction: init",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-23T17:23:41Z",
				"message": ":sparkles: empty messages check + allowed mentions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-23T17:15:37Z",
				"message": ":bug: fix .env file not loading",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-23T16:06:41Z",
				"message": "1.3.18",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-23T16:06:10Z",
				"message": "1.3.17",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-23T16:06:00Z",
				"message": ":bug: fix checkToken",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-22T18:58:17Z",
				"message": ":art: move widget templates to assets",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-22T16:43:08Z",
				"message": "Merge pull request #157 from Umimaso/widget\n\nfeat: add widget endpoints, routing for unversioned api requests",
				"messageBody": "feat: add widget endpoints, routing for unversioned api requests"
			},
			{
				"committedDate": "2021-06-22T16:41:21Z",
				"message": ":art: clean up code\nwidget.json.ts: just return instead of long if statement + add ?. operators for error handling\nwidget.png.ts make path universal\nwidget.ts: remove unnecessary guild db query as getPermission already checks it\nWidget.ts make parameters required",
				"messageBody": "widget.json.ts: just return instead of long if statement + add ?. operators for error handling\nwidget.png.ts make path universal\nwidget.ts: remove unnecessary guild db query as getPermission already checks it\nWidget.ts make parameters required"
			},
			{
				"committedDate": "2021-06-20T12:57:26Z",
				"message": "Merge pull request #158 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-06-20T11:46:01Z",
				"message": "New translations common.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-20T11:46:01Z",
				"message": "New translations auth.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-19T15:28:32Z",
				"message": "Merge pull request #151 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-06-19T11:50:48Z",
				"message": "New translations common.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-19T11:50:47Z",
				"message": "New translations auth.json (Lithuanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T18:10:39Z",
				"message": ":bug: fix identify struct",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T15:52:36Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-08T15:56:39Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T15:56:59Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-02T17:22:22Z",
				"message": ":sparkles: Guild invites",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T19:03:09Z",
				"message": ":zap: add explicit types to req and res",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T19:01:49Z",
				"message": ":bug: make server options optional",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T19:01:28Z",
				"message": ":zap: add explicit types to req and res",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:41:44Z",
				"message": ":sparkles: start.ts file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:33:08Z",
				"message": "1.3.16",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:32:50Z",
				"message": ":art: rename recipients -> recipient_ids",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:32:37Z",
				"message": ":bug: fix config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:32:23Z",
				"message": ":construction: dm channels",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:32:03Z",
				"message": ":sparkles: start.ts file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T22:51:54Z",
				"message": ":art: create start.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T22:48:51Z",
				"message": "Initial commit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T21:34:21Z",
				"message": "1.3.15",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T21:34:07Z",
				"message": ":sparkles: Channel recipients",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:15:01Z",
				"message": "npm i @fosscord/server-util@1.3.14",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:14:56Z",
				"message": ":sparkles: relationships",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:14:52Z",
				"message": "npm i @fosscord/server-util@1.3.14",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:14:35Z",
				"message": ":bug: fix getPublicUser",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:14:19Z",
				"message": "npm i @fosscord/server-util@1.3.14",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:13:31Z",
				"message": "1.3.14",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:12:56Z",
				"message": ":bug: fix Ready event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:12:46Z",
				"message": ":bug: fix empty author",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T20:12:29Z",
				"message": ":sparkles: Friends Relationships",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T18:24:45Z",
				"message": ":sparkles: Relationship types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T16:43:35Z",
				"message": "New translations common.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T16:43:34Z",
				"message": "New translations auth.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T15:16:14Z",
				"message": ":sparkles: Channel permission overwrites",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T15:06:14Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.13",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T15:06:05Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.13",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T15:06:02Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.13",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T15:05:08Z",
				"message": "1.3.13",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T15:04:55Z",
				"message": ":bug: fix activity model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T14:46:32Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.12",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T14:46:23Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.12",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T14:46:20Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.12",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T14:45:00Z",
				"message": "1.3.12",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-30T14:44:50Z",
				"message": ":bug: fix models with type property",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:53:01Z",
				"message": ":zap: increase upload limit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:46:32Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:46:30Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:46:28Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:45:37Z",
				"message": "1.3.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:45:22Z",
				"message": "fix message model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:44:50Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:44:46Z",
				"message": ":sparkles: avatars + attachments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:44:15Z",
				"message": ":sparkles: user avatar",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T23:44:09Z",
				"message": ":sparkles: message attachments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T21:42:35Z",
				"message": "1.3.10",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T21:42:06Z",
				"message": ":sparkles: add requestSignature to Config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T19:43:49Z",
				"message": "Merge pull request #71 from luth31/master\n\nMove TS compilation to docker image build",
				"messageBody": "Move TS compilation to docker image build"
			},
			{
				"committedDate": "2021-05-29T19:37:07Z",
				"message": "Merge pull request #152 from luth31/master\n\nMove TS compilation to docker image build",
				"messageBody": "Move TS compilation to docker image build"
			},
			{
				"committedDate": "2021-05-29T18:04:09Z",
				"message": ":zap: improve asset caching",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T16:23:16Z",
				"message": ":sparkles: avatars",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-29T16:22:52Z",
				"message": ":art: reformat",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T20:40:48Z",
				"message": ":sparkles: external assets",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T20:40:34Z",
				"message": "automatically embed links in message",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T20:07:13Z",
				"message": "1.3.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T20:07:08Z",
				"message": ":bug: fix Message embed type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T19:19:19Z",
				"message": ":sparkles: attachments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:23Z",
				"message": "New translations common.json (Urdu (India))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:17Z",
				"message": "New translations auth.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:16Z",
				"message": "New translations common.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:15Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:14Z",
				"message": "New translations common.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:10Z",
				"message": "New translations auth.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:05Z",
				"message": "New translations common.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:04Z",
				"message": "New translations auth.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:59Z",
				"message": "New translations common.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:57Z",
				"message": "New translations common.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:55Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:54Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:53Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:52Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:51Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:50Z",
				"message": "New translations common.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:49Z",
				"message": "New translations common.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:48Z",
				"message": "New translations auth.json (Indonesian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:47Z",
				"message": "New translations common.json (Indonesian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:45Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:44Z",
				"message": "New translations auth.json (Urdu (India))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:44Z",
				"message": "New translations auth.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:43Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:42Z",
				"message": "New translations common.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:39Z",
				"message": "New translations common.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:38Z",
				"message": "New translations auth.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:36Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:35Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:30Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:26Z",
				"message": "Update source file common.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:38:26Z",
				"message": "Update source file auth.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:10:59Z",
				"message": "Create codeql-analysis.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:08:33Z",
				"message": "Delete TEST",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T15:00:17Z",
				"message": "1.3.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T15:00:15Z",
				"message": ":sparkles: add cdn.endpoint to config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T10:22:19Z",
				"message": "Update attachments.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T00:10:00Z",
				"message": ":construction: permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T22:27:21Z",
				"message": "test",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T18:01:50Z",
				"message": ":construction: file storage",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T18:01:38Z",
				"message": ":construction: attachment",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T16:54:15Z",
				"message": ":construction: WIP rewrite",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T16:35:19Z",
				"message": "Merge pull request #70 from 9qz/master\n\n✨ GUILD_MEMBER_LIST_UPDATE",
				"messageBody": "✨ GUILD_MEMBER_LIST_UPDATE"
			},
			{
				"committedDate": "2021-05-27T16:15:33Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T16:15:31Z",
				"message": ":bug: fix bans",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T10:20:34Z",
				"message": "1.3.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-27T10:20:29Z",
				"message": ":bug: fix MessageComponent recursive definition",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T20:38:30Z",
				"message": "1.3.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T20:38:21Z",
				"message": ":sparkles: add Team",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T20:38:15Z",
				"message": ":sparkles: add Application",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T20:38:05Z",
				"message": ":sparkles: add MessageComponent",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T11:31:06Z",
				"message": ":arrow_up: npm i @fosscord/server-util@1.3.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T11:30:48Z",
				"message": ":bug: fix EMAIL_ALREADY_REGISTERED error message",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T11:30:29Z",
				"message": "optional GATEWAY .env variable",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T11:30:10Z",
				"message": "fix message loading",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-25T21:38:37Z",
				"message": "Merge pull request #68 from luth31/upstream\n\nRemove redundant Dockerfile commands and remove .DS_Store file",
				"messageBody": "Remove redundant Dockerfile commands and remove .DS_Store file"
			},
			{
				"committedDate": "2021-05-25T21:38:06Z",
				"message": "Merge pull request #21 from ItsNewe/master\n\nMongo payload data retrieval",
				"messageBody": "Mongo payload data retrieval"
			},
			{
				"committedDate": "2021-05-25T00:04:22Z",
				"message": "1.3.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-25T00:04:12Z",
				"message": ":bug: fix Snowflake workerid",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-25T00:02:29Z",
				"message": "1.3.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-25T00:02:15Z",
				"message": ":bug: fix Snowflake process + worker id",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T23:20:14Z",
				"message": ":pencil: Update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T23:11:18Z",
				"message": "npm i @fosscord/server-util@1.3.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T23:11:16Z",
				"message": "npm i @fosscord/server-util@1.3.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T23:10:25Z",
				"message": "1.3.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T23:10:00Z",
				"message": ":bug: fix default endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:57:23Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:57:22Z",
				"message": ":bug: fix route loading",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:56:22Z",
				"message": "Merge pull request #149 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-24T18:55:09Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:55:08Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:55:05Z",
				"message": "New translations common.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:55:00Z",
				"message": "New translations auth.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:54:53Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:54:52Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:48:37Z",
				"message": "npm i @fosscord/server-util@1.3.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:48:35Z",
				"message": "npm i @fosscord/server-util@1.3.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:47:56Z",
				"message": "1.3.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:47:21Z",
				"message": ":sparkles: new config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:47:06Z",
				"message": ":sparkles: use new config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T18:46:07Z",
				"message": ":sparkles: use new config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-24T17:32:35Z",
				"message": "additional token checks: user disabled/deleted or if the token was revoked",
				"messageBody": "…voked"
			},
			{
				"committedDate": "2021-05-24T15:51:06Z",
				"message": "Merge pull request #20 from ItsNewe/master\n\n[edit] Deprecate gRPC in favor of MongoDB",
				"messageBody": "[edit] Deprecate gRPC in favor of MongoDB"
			},
			{
				"committedDate": "2021-05-23T18:48:51Z",
				"message": "Merge pull request #69 from DiegoMagdaleno/master\n\nConfig updates and StrictNullChecks",
				"messageBody": "Config updates and StrictNullChecks"
			},
			{
				"committedDate": "2021-05-23T18:48:25Z",
				"message": "Merge pull request #147 from DiegoMagdaleno/master\n\nNew way to do config no more hardcoded localhost",
				"messageBody": "New way to do config no more hardcoded localhost"
			},
			{
				"committedDate": "2021-05-23T18:38:33Z",
				"message": "1.3.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-23T18:37:07Z",
				"message": "Merge pull request #8 from DiegoMagdaleno/master\n\nConfig: Don't cast to unknow and rather give a gernic type",
				"messageBody": "Config: Don't cast to unknow and rather give a gernic type"
			},
			{
				"committedDate": "2021-05-23T17:31:20Z",
				"message": "1.3.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-23T17:30:32Z",
				"message": "Merge pull request #7 from DiegoMagdaleno/master\n\nModels: Update avatar to reflect the new NULL changes",
				"messageBody": "Models: Update avatar to reflect the new NULL changes"
			},
			{
				"committedDate": "2021-05-23T16:43:30Z",
				"message": "1.2.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-23T16:42:30Z",
				"message": "Merge pull request #6 from DiegoMagdaleno/master\n\nFix compilation with StrictNullChecks and make the properties have more sense",
				"messageBody": "Fix compilation with StrictNullChecks and make the properties have more sense"
			},
			{
				"committedDate": "2021-05-23T13:41:19Z",
				"message": "Merge pull request #146 from luth31/upstream\n\nRemove redundant Dockerfile commands and add missing port command",
				"messageBody": "Remove redundant Dockerfile commands and add missing port command"
			},
			{
				"committedDate": "2021-05-23T08:06:08Z",
				"message": "Merge pull request #145 from bloomsirenix/master\n\nAdded Fully Functional Delete User Request and an Dummy Disable User one",
				"messageBody": "Added Fully Functional Delete User Request and an Dummy Disable User one"
			},
			{
				"committedDate": "2021-05-22T23:23:05Z",
				"message": "1.2.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T23:23:03Z",
				"message": ":bug: fix checktoken",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T23:12:20Z",
				"message": "Merge pull request #5 from DiegoMagdaleno/master\n\nConfig refactoring to be a file",
				"messageBody": "Config refactoring to be a file"
			},
			{
				"committedDate": "2021-05-22T20:54:52Z",
				"message": "1.2.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T20:54:45Z",
				"message": ":sparkles: BanSchema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T20:06:18Z",
				"message": ":sparkles: Message edit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T19:13:14Z",
				"message": ":sparkles: reactions bulk remove",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T17:41:10Z",
				"message": "Merge pull request #144 from afeuerstein/master\n\nmerge afeuerstein/fosscord-api to fosscord/fosscord-api",
				"messageBody": "merge afeuerstein/fosscord-api to fosscord/fosscord-api"
			},
			{
				"committedDate": "2021-05-22T15:45:53Z",
				"message": ":arrow_up: update dependency",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:45:53Z",
				"message": ":arrow_up: update dependency",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:44:55Z",
				"message": "1.2.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:42:37Z",
				"message": ":arrow_up: update dependency",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:42:36Z",
				"message": ":arrow_up: update dependency",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:41:50Z",
				"message": "1.2.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:40:59Z",
				"message": ":bug: fix member sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:40:45Z",
				"message": ":bug: fix Message Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:40:28Z",
				"message": ":sparkles: Reactions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:40:23Z",
				"message": ":sparkles: invites TTL",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:40:10Z",
				"message": ":sparkles: createChannel()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T15:39:28Z",
				"message": ":art: Move member routes in separate files",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T14:12:49Z",
				"message": "1.2.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T14:12:46Z",
				"message": ":sparkles: system user permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T14:12:39Z",
				"message": ":sparkles: Message reaction user_ids",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T10:01:09Z",
				"message": "1.2.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-22T10:01:07Z",
				"message": ":bug: fix Channel + Invite Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T20:16:48Z",
				"message": ":sparkles: Member List",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T20:12:21Z",
				"message": ":art: refactor/format",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T20:08:52Z",
				"message": "1.2.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T20:08:48Z",
				"message": ":bug: fix Public Member",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T19:59:19Z",
				"message": ":sparkles: Message Pins",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T19:59:04Z",
				"message": ":construction: read state",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T19:58:41Z",
				"message": ":sparkles: sendMessage() function",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T19:57:03Z",
				"message": "1.2.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T19:40:03Z",
				"message": ":sparkles: MessageAckEvent",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T19:39:48Z",
				"message": "fix channel permission calc",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T17:21:32Z",
				"message": "Merge pull request #19 from ItsNewe/master\n\nSet up the initial project structure",
				"messageBody": "Set up the initial project structure"
			},
			{
				"committedDate": "2021-05-21T15:51:37Z",
				"message": "1.2.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T15:51:27Z",
				"message": ":bug: make Message created_at optional",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T15:48:26Z",
				"message": "1.1.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T15:48:20Z",
				"message": ":bug: convert string to bigint Permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T15:47:53Z",
				"message": ":sparkles: [Message] Model add created_at",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T14:00:32Z",
				"message": "1.1.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T14:00:17Z",
				"message": "1.1.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-21T05:26:00Z",
				"message": "Merge pull request #143 from DarrenAlex/patch-1\n\nAdded Indonesian translations",
				"messageBody": "Added Indonesian translations"
			},
			{
				"committedDate": "2021-05-18T20:09:03Z",
				"message": ":bug: fix types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-18T20:05:25Z",
				"message": ":sparkles: load gateway url from config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-18T20:04:31Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-18T20:04:29Z",
				"message": ":construction: WIP member list + voice",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-14T20:36:03Z",
				"message": ":bug: add MessageType enum",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-14T20:34:52Z",
				"message": "1.1.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-14T20:34:48Z",
				"message": ":sparkles: add MessageType enum",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-12T13:51:20Z",
				"message": "Merge pull request #138 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-12T13:48:39Z",
				"message": "New translations common.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-12T13:48:38Z",
				"message": "New translations auth.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-11T15:24:07Z",
				"message": "Merge pull request #137 from 9qz/master\n\n Some refactor, fix channel_delete event and @everyone role appearing on member roles",
				"messageBody": " Some refactor, fix channel_delete event and @everyone role appearing on member roles"
			},
			{
				"committedDate": "2021-05-11T13:11:27Z",
				"message": "Merge pull request #65 from 9qz/main\n\nFix guild_id being undefined on MongoCacheStream",
				"messageBody": "Fix guild_id being undefined on MongoCacheStream"
			},
			{
				"committedDate": "2021-05-10T16:04:02Z",
				"message": ":bug: fix CDN",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-10T16:03:20Z",
				"message": ":bug: fix Database toObject",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-10T15:58:14Z",
				"message": ":bug: fix Dockerfile",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-10T13:49:57Z",
				"message": "Merge pull request #136 from notsapinho/master\n\n🐛 Fix channels and joined_at not getting populated",
				"messageBody": "🐛 Fix channels and joined_at not getting populated"
			},
			{
				"committedDate": "2021-05-10T13:34:06Z",
				"message": ":bug: fix channel modify schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-10T12:27:03Z",
				"message": ":bug: fix addMember guild not populating",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-09T19:24:52Z",
				"message": "Merge pull request #135 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-09T19:24:26Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-09T19:24:25Z",
				"message": "New translations common.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-09T19:24:24Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-09T16:31:09Z",
				"message": "Merge pull request #134 from DiegoMagdaleno/master\n\nDocker: Fix the fact that post-install didnt run",
				"messageBody": "Docker: Fix the fact that post-install didnt run"
			},
			{
				"committedDate": "2021-05-09T15:41:37Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-gateway",
				"messageBody": "…rd-gateway"
			},
			{
				"committedDate": "2021-05-09T15:41:36Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-05-09T15:41:34Z",
				"message": ":bug: fix Guild vanity_url",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-09T15:26:13Z",
				"message": "Merge pull request #64 from DiegoMagdaleno/master\n\nDocker: fix the syntax of the apk command",
				"messageBody": "Docker: fix the syntax of the apk command"
			},
			{
				"committedDate": "2021-05-09T15:22:38Z",
				"message": "Merge pull request #63 from DiegoMagdaleno/master\n\nDocker: Fix an issue were native dependencies weren't able to build",
				"messageBody": "Docker: Fix an issue were native dependencies weren't able to build"
			},
			{
				"committedDate": "2021-05-09T12:24:54Z",
				"message": "Merge pull request #133 from DiegoMagdaleno/master\n\nSetup: Dockerize the API",
				"messageBody": "Setup: Dockerize the API"
			},
			{
				"committedDate": "2021-05-08T22:58:17Z",
				"message": "Merge pull request #62 from DiegoMagdaleno/master\n\nBegin dockerization",
				"messageBody": "Begin dockerization"
			},
			{
				"committedDate": "2021-05-08T21:05:12Z",
				"message": "add opencollective",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T21:05:08Z",
				"message": "add opencollective",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T19:24:34Z",
				"message": "Merge pull request #132 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-08T19:23:52Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T19:23:51Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T12:14:35Z",
				"message": ":sparkles: add isMember check for get member routes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T11:55:54Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-05-08T11:55:51Z",
				"message": ":bug: fix add/remove Member function",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T10:58:32Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-voice",
				"messageBody": "…rd-voice"
			},
			{
				"committedDate": "2021-05-08T10:58:07Z",
				"message": ":page_facing_up: GPL V3 license",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T10:58:05Z",
				"message": ":page_facing_up: GPL V3 license",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T10:55:11Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-05-08T10:55:07Z",
				"message": ":page_facing_up: GPL V3 license",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-08T10:55:05Z",
				"message": ":page_facing_up: GPL V3 license",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T21:11:36Z",
				"message": "Merge pull request #104 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-07T20:52:40Z",
				"message": ":bug: fix identify schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T19:24:11Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T19:24:10Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T19:24:09Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T19:24:08Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T18:07:27Z",
				"message": ":arrow_up: update lambert-server dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T18:04:18Z",
				"message": ":bug: fix identify",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T18:03:24Z",
				"message": ":art: [Route] templates refactor",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-06T19:20:31Z",
				"message": "Merge pull request #101 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-06T19:19:44Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-06T19:19:43Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-05T19:12:10Z",
				"message": "Merge pull request #100 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-05T19:11:51Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-05T19:11:49Z",
				"message": "New translations common.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-05T13:05:41Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-05-05T13:05:23Z",
				"message": ":bug: fix test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-03T18:39:37Z",
				"message": "Merge pull request #99 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-03T18:39:13Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-03T18:39:12Z",
				"message": "New translations auth.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T18:41:56Z",
				"message": "Merge pull request #98 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-02T18:41:47Z",
				"message": "New translations common.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T18:41:46Z",
				"message": "New translations auth.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T17:26:21Z",
				"message": "Merge pull request #97 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-02T17:26:00Z",
				"message": "New translations common.json (Urdu (India))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T17:25:59Z",
				"message": "New translations auth.json (Urdu (India))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T17:25:58Z",
				"message": "New translations common.json (Indonesian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T17:25:57Z",
				"message": "New translations auth.json (Indonesian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T17:25:56Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T17:25:54Z",
				"message": "New translations auth.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T16:14:01Z",
				"message": "Merge pull request #96 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-02T16:13:52Z",
				"message": "New translations common.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T16:13:51Z",
				"message": "New translations auth.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T16:13:50Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T16:13:49Z",
				"message": "New translations common.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T15:11:21Z",
				"message": "Change default port:\nClient = 3000\nAPI = 3001\nGateway = 3002",
				"messageBody": "Client = 3000\nAPI = 3001\nGateway = 3002"
			},
			{
				"committedDate": "2021-05-02T15:11:18Z",
				"message": "Change default port:\nClient = 3000\nAPI = 3001\nGateway = 3002",
				"messageBody": "Client = 3000\nAPI = 3001\nGateway = 3002"
			},
			{
				"committedDate": "2021-05-02T13:28:13Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T12:41:13Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T12:40:41Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T12:18:27Z",
				"message": "Merge pull request #95 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-02T12:14:36Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T12:14:35Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T12:14:09Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-02T12:14:08Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:39:28Z",
				"message": "Merge pull request #94 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-01T22:39:14Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:39:13Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:39:03Z",
				"message": "New translations auth.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:38:56Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:38:55Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:38:44Z",
				"message": "New translations common.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:31:09Z",
				"message": "Merge pull request #93 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-01T22:30:58Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:30:57Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:30:44Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:30:41Z",
				"message": "New translations auth.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:30:30Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:30:29Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:30:24Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T22:30:11Z",
				"message": "New translations common.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T21:49:45Z",
				"message": "Merge pull request #92 from Dekryptor/patch-2\n\nUpdated common's Bulgarian translation",
				"messageBody": "Updated common's Bulgarian translation"
			},
			{
				"committedDate": "2021-05-01T21:49:32Z",
				"message": "Merge pull request #91 from Dekryptor/patch-1\n\nUpdated auth's Bulgarian translation",
				"messageBody": "Updated auth's Bulgarian translation"
			},
			{
				"committedDate": "2021-05-01T21:09:58Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-server-util",
				"messageBody": "…rd-server-util"
			},
			{
				"committedDate": "2021-05-01T19:21:35Z",
				"message": "Merge pull request #90 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-01T18:41:54Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:31:40Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:31:40Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:31:29Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:31:21Z",
				"message": "New translations common.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:31:18Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:31:16Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:31:07Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:01:25Z",
				"message": "New translations common.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:01:24Z",
				"message": "New translations auth.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T18:00:36Z",
				"message": "Update source file auth.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:27Z",
				"message": "New translations common.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:26Z",
				"message": "New translations auth.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:25Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:24Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:21Z",
				"message": "New translations common.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:20Z",
				"message": "New translations auth.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:19Z",
				"message": "New translations common.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:18Z",
				"message": "New translations auth.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:17Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:16Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:07Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:06Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:05Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:03Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:17:02Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:57Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:52Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:51Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:49Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:47Z",
				"message": "New translations auth.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:43Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:40Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T17:16:39Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:47Z",
				"message": "New translations auth.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:46Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:44Z",
				"message": "New translations auth.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:43Z",
				"message": "New translations auth.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:40Z",
				"message": "New translations auth.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:39Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:38Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:36Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:35Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:34Z",
				"message": "New translations common.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:33Z",
				"message": "New translations auth.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:32Z",
				"message": "New translations auth.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:31Z",
				"message": "New translations common.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:29Z",
				"message": "New translations common.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:28Z",
				"message": "New translations auth.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:27Z",
				"message": "New translations auth.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:26Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:24Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:22Z",
				"message": "New translations auth.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:22Z",
				"message": "New translations common.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:21Z",
				"message": "New translations auth.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:19Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:47:19Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:46Z",
				"message": "New translations common.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:44Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:43Z",
				"message": "New translations common.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:42Z",
				"message": "New translations auth.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:41Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:39Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:38Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:36Z",
				"message": "New translations auth.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:35Z",
				"message": "New translations common.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:34Z",
				"message": "New translations auth.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:33Z",
				"message": "New translations common.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:32Z",
				"message": "New translations auth.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:31Z",
				"message": "New translations auth.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:29Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:28Z",
				"message": "New translations common.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:27Z",
				"message": "New translations auth.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:25Z",
				"message": "New translations common.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:24Z",
				"message": "New translations auth.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:22Z",
				"message": "New translations auth.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:21Z",
				"message": "New translations common.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:20Z",
				"message": "New translations auth.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:18Z",
				"message": "New translations auth.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:17Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:16Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:15Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:14Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:13Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:12Z",
				"message": "New translations common.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:11Z",
				"message": "New translations common.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:09Z",
				"message": "New translations common.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:08Z",
				"message": "New translations auth.json (Esperanto)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:07Z",
				"message": "New translations common.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:06Z",
				"message": "New translations auth.json (Bulgarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:05Z",
				"message": "New translations common.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:04Z",
				"message": "New translations auth.json (Belarusian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:22:02Z",
				"message": "New translations auth.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:58Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:57Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:56Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:55Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:54Z",
				"message": "New translations auth.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:53Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:52Z",
				"message": "New translations auth.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:50Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:49Z",
				"message": "New translations common.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:48Z",
				"message": "New translations auth.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:46Z",
				"message": "New translations auth.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:45Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:44Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:43Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:42Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:41Z",
				"message": "New translations common.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:40Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:38Z",
				"message": "New translations common.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:37Z",
				"message": "New translations auth.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T16:21:34Z",
				"message": "Update source file auth.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:13:53Z",
				"message": "Merge pull request #89 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-01T14:09:17Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:15Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:14Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:13Z",
				"message": "New translations auth.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:12Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:11Z",
				"message": "New translations auth.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:11Z",
				"message": "New translations auth.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:10Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:09Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:08Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:08Z",
				"message": "New translations auth.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:07Z",
				"message": "New translations auth.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:06Z",
				"message": "New translations auth.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:06Z",
				"message": "New translations auth.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:05Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:04Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:03Z",
				"message": "New translations auth.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:02Z",
				"message": "New translations auth.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:01Z",
				"message": "New translations auth.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:00Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:09:00Z",
				"message": "New translations auth.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:59Z",
				"message": "New translations auth.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:58Z",
				"message": "New translations auth.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:57Z",
				"message": "New translations auth.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:57Z",
				"message": "New translations auth.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:56Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:56Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:55Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:54Z",
				"message": "New translations common.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:53Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:52Z",
				"message": "New translations common.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:50Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:50Z",
				"message": "New translations common.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:49Z",
				"message": "New translations common.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:48Z",
				"message": "New translations common.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:47Z",
				"message": "New translations common.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:46Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:45Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:45Z",
				"message": "New translations common.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:44Z",
				"message": "New translations common.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:44Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:43Z",
				"message": "New translations common.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:42Z",
				"message": "New translations common.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:42Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:41Z",
				"message": "New translations common.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:40Z",
				"message": "New translations common.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:39Z",
				"message": "New translations common.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:39Z",
				"message": "New translations common.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:38Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:37Z",
				"message": "New translations common.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:36Z",
				"message": "New translations common.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:35Z",
				"message": "New translations common.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:35Z",
				"message": "New translations common.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:34Z",
				"message": "New translations common.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:33Z",
				"message": "New translations common.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:33Z",
				"message": "New translations auth.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T14:08:11Z",
				"message": "Update Crowdin configuration file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:53:41Z",
				"message": "Merge pull request #88 from fosscord/l10n_master\n\nNew Crowdin updates",
				"messageBody": "New Crowdin updates"
			},
			{
				"committedDate": "2021-05-01T13:52:39Z",
				"message": "New translations common.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:37Z",
				"message": "New translations common.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:36Z",
				"message": "New translations auth.json (Japanese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:35Z",
				"message": "New translations common.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:34Z",
				"message": "New translations auth.json (Italian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:33Z",
				"message": "New translations common.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:32Z",
				"message": "New translations auth.json (Hungarian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:31Z",
				"message": "New translations common.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:30Z",
				"message": "New translations auth.json (Hebrew)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:29Z",
				"message": "New translations common.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:28Z",
				"message": "New translations auth.json (Finnish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:27Z",
				"message": "New translations common.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:26Z",
				"message": "New translations auth.json (Greek)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:26Z",
				"message": "New translations common.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:25Z",
				"message": "New translations auth.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:23Z",
				"message": "New translations auth.json (German)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:22Z",
				"message": "New translations auth.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:21Z",
				"message": "New translations common.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:20Z",
				"message": "New translations auth.json (Czech)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:19Z",
				"message": "New translations common.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:18Z",
				"message": "New translations auth.json (Catalan)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:17Z",
				"message": "New translations common.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:16Z",
				"message": "New translations auth.json (Arabic)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:15Z",
				"message": "New translations common.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:14Z",
				"message": "New translations auth.json (Afrikaans)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:13Z",
				"message": "New translations common.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:12Z",
				"message": "New translations auth.json (Spanish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:11Z",
				"message": "New translations common.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:10Z",
				"message": "New translations auth.json (French)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:09Z",
				"message": "New translations common.json (Danish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:08Z",
				"message": "New translations common.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:07Z",
				"message": "New translations common.json (Korean)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:06Z",
				"message": "New translations common.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:05Z",
				"message": "New translations auth.json (Hindi)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:04Z",
				"message": "New translations common.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:03Z",
				"message": "New translations auth.json (Portuguese, Brazilian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:02Z",
				"message": "New translations common.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:01Z",
				"message": "New translations auth.json (Vietnamese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:52:00Z",
				"message": "New translations common.json (English)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:59Z",
				"message": "New translations auth.json (English)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:58Z",
				"message": "New translations common.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:57Z",
				"message": "New translations auth.json (Chinese Traditional)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:56Z",
				"message": "New translations common.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:55Z",
				"message": "New translations auth.json (Chinese Simplified)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:54Z",
				"message": "New translations common.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:53Z",
				"message": "New translations auth.json (Ukrainian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:52Z",
				"message": "New translations auth.json (Dutch)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:51Z",
				"message": "New translations common.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:50Z",
				"message": "New translations common.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:49Z",
				"message": "New translations auth.json (Swedish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:48Z",
				"message": "New translations common.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:47Z",
				"message": "New translations auth.json (Serbian (Cyrillic))",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:46Z",
				"message": "New translations common.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:45Z",
				"message": "New translations auth.json (Russian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:44Z",
				"message": "New translations common.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:43Z",
				"message": "New translations auth.json (Portuguese)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:42Z",
				"message": "New translations common.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:41Z",
				"message": "New translations auth.json (Polish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:40Z",
				"message": "New translations common.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:39Z",
				"message": "New translations auth.json (Norwegian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:38Z",
				"message": "New translations auth.json (Turkish)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:37Z",
				"message": "New translations auth.json (Romanian)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T13:51:25Z",
				"message": "Update Crowdin configuration file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T11:54:12Z",
				"message": ":art: added optional captcha to login route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-01T11:53:26Z",
				"message": ":bug: fix identify schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-27T05:04:06Z",
				"message": ":sparkles: Channel get Route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-27T05:04:01Z",
				"message": ":art: refactor to use easier permission api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-26T20:17:29Z",
				"message": ":sparkles: add dm permission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-26T20:00:42Z",
				"message": "Merge pull request #87 from aryan0078/master\n\nTyping + create pin + get pin",
				"messageBody": "Typing + create pin + get pin"
			},
			{
				"committedDate": "2021-04-26T19:49:52Z",
				"message": ":arrow_up: update lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T22:12:27Z",
				"message": "Merge pull request #86 from aryan0078/master\n\nChannel Delete + Modify Route",
				"messageBody": "Channel Delete + Modify Route"
			},
			{
				"committedDate": "2021-04-25T21:41:17Z",
				"message": ":zap: add dev script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T21:40:32Z",
				"message": ":bug: fix dev script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T21:35:19Z",
				"message": ":sparkles: added dev server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T19:18:21Z",
				"message": ":sparkles: make erlpack optional",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T18:34:20Z",
				"message": ":arrow_up: update server-util version",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T17:46:57Z",
				"message": ":art: formatting files",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T17:46:33Z",
				"message": ":bug: add event for Message Delete route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-25T17:41:55Z",
				"message": ":sparkles: Message delete route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T16:37:16Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-server-util",
				"messageBody": "…rd-server-util"
			},
			{
				"committedDate": "2021-04-24T16:36:32Z",
				"message": ":bug: fix string",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T16:31:23Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T12:31:59Z",
				"message": "1.0.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T12:30:48Z",
				"message": ":bug: fix Webhook model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T10:49:12Z",
				"message": "Merge branch 'master' of https://github.com/fosscord/fosscord-api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T10:49:10Z",
				"message": ":bug: fix type in Channel Messages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T09:14:33Z",
				"message": "1.0.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T09:14:17Z",
				"message": ":art: String trimSpecial pass string OR undefined",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-23T20:39:31Z",
				"message": ":bug: add patch-package postinstall",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-23T20:33:49Z",
				"message": ":bug: remove postinstall",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-23T20:32:25Z",
				"message": ":bug: fix member model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-23T20:24:52Z",
				"message": ":bug: fix package",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-23T18:39:52Z",
				"message": ":bug: fix directory name",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T22:48:18Z",
				"message": ":construction: Webhook",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T22:47:28Z",
				"message": ":sparkles: Webhook Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T22:15:38Z",
				"message": ":art: clean up permission checks to use .hasThrow()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T22:14:54Z",
				"message": ":bug: fix wrong permission in delete invite",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T22:10:10Z",
				"message": ":sparkles: throw missing permission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T21:37:07Z",
				"message": "npm i @fosscord/server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T21:37:03Z",
				"message": "npm i @fosscord/server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T21:30:53Z",
				"message": ":art: rename to -> @fosscord/server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T21:30:49Z",
				"message": ":art: rename to -> @fosscord/server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T21:29:06Z",
				"message": "prepare npm publish",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T20:00:25Z",
				"message": ":zap: :sparkles: prod multi threading",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-19T20:00:48Z",
				"message": ":art: change default port to 1000 + CORS",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-19T20:00:23Z",
				"message": ":art: change default port to 2000",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-18T12:23:49Z",
				"message": ":heavy_minus_sign: remove lambert-db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-18T12:23:44Z",
				"message": ":heavy_minus_sign: remove lambert-db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-18T12:23:42Z",
				"message": ":heavy_minus_sign: remove lambert-db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-17T00:30:57Z",
				"message": ":bug: fix Activity Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-16T16:03:10Z",
				"message": ":bug: use port from .env file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-16T15:44:43Z",
				"message": ":bug: fix port not picking up env file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-14T13:01:53Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-04-14T13:01:49Z",
				"message": ":bug: fix message schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-14T13:01:27Z",
				"message": "Merge branch 'main' of https://github.com/discord-open-source/discord-server-util into main",
				"messageBody": "…-server-util into main"
			},
			{
				"committedDate": "2021-04-14T13:00:52Z",
				"message": ":zap: export regex",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-14T13:00:39Z",
				"message": ":bug: fix message model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-09T12:20:18Z",
				"message": ":bug: fix event listener",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-09T12:00:17Z",
				"message": ":sparkles: add npm i fosscord-server-util to postinstall",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-09T11:59:02Z",
				"message": ":bug: fix Activity model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-08T22:39:29Z",
				"message": ":bug: use ActivityBodySchema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-08T22:36:08Z",
				"message": ":bug: fix Activity model with body schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-08T16:53:25Z",
				"message": "Merge pull request #59 from notsapinho/main\n\nMongooseCache resubscription",
				"messageBody": "MongooseCache resubscription"
			},
			{
				"committedDate": "2021-04-08T16:52:57Z",
				"message": "create getPipeline function + clean up",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-08T14:51:45Z",
				"message": "Merge pull request #4 from notsapinho/main\n\nadded toBigInt and BigInt getters to bitfields",
				"messageBody": "added toBigInt and BigInt getters to bitfields"
			},
			{
				"committedDate": "2021-04-08T13:32:32Z",
				"message": ":bug: move dev dependencies to normal",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-08T02:45:34Z",
				"message": ":page_facing_up: use Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License",
				"messageBody": "…Alike 4.0 International Public License"
			},
			{
				"committedDate": "2021-04-08T02:45:31Z",
				"message": ":page_facing_up: use Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License",
				"messageBody": "…Alike 4.0 International Public License"
			},
			{
				"committedDate": "2021-04-08T02:45:28Z",
				"message": ":page_facing_up: use Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License",
				"messageBody": "…Alike 4.0 International Public License"
			},
			{
				"committedDate": "2021-04-08T02:45:25Z",
				"message": ":page_facing_up: use Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International Public License",
				"messageBody": "…Alike 4.0 International Public License"
			},
			{
				"committedDate": "2021-04-07T18:26:21Z",
				"message": "Merge branch 'main' of https://github.com/discord-open-source/discord-server-util into main",
				"messageBody": "…-server-util into main"
			},
			{
				"committedDate": "2021-04-07T18:26:19Z",
				"message": ":zap: use mongoose autopopulate",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T18:26:09Z",
				"message": ":zap: use mongoose autopopulate",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T18:26:00Z",
				"message": ":arrow_up: update mnjsf",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T18:25:37Z",
				"message": ":zap: use mongoose autopopulate",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T17:48:58Z",
				"message": "Merge pull request #3 from notsapinho/patch-1\n\n🖊️ fix members virtual",
				"messageBody": "🖊️ fix members virtual"
			},
			{
				"committedDate": "2021-04-07T13:54:27Z",
				"message": "getPermission use cache",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T13:54:21Z",
				"message": "fix tsc missing",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T13:54:15Z",
				"message": "fix error handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T13:54:00Z",
				"message": ":bug: fix register route captcha required",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T13:48:17Z",
				"message": ":heavy_minus_sign: remove zlib-sync",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T10:23:59Z",
				"message": "Merge pull request #83 from notsapinho/master\n\n🖥️ /science route",
				"messageBody": "🖥️ /science route"
			},
			{
				"committedDate": "2021-04-07T02:01:47Z",
				"message": "fix toObject type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T02:01:33Z",
				"message": ":bug: fix identify default intent",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T02:00:54Z",
				"message": ":bug: fix message route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T01:03:27Z",
				"message": ":bug: fix lean not working with virtuals",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-07T01:03:07Z",
				"message": "Merge pull request #58 from notsapinho/patch-1\n\n🐛 fix pipeline",
				"messageBody": "🐛 fix pipeline"
			},
			{
				"committedDate": "2021-04-07T01:02:13Z",
				"message": ":bug: fix lean not working with virtuals",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T22:25:17Z",
				"message": ":loud_sound: log gateway events",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T21:55:52Z",
				"message": "remove dist",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T21:55:26Z",
				"message": "Merge branch 'main' of https://github.com/discord-open-source/discord-server-util into main",
				"messageBody": "…-server-util into main"
			},
			{
				"committedDate": "2021-04-06T21:25:56Z",
				"message": "Merge pull request #2 from afeuerstein/main\n\nMerge fosscord/fosscord-server-util/ with afeuerstein/fosscord-server-util/",
				"messageBody": "Merge fosscord/fosscord-server-util/ with afeuerstein/fosscord-server-util/"
			},
			{
				"committedDate": "2021-04-06T21:25:11Z",
				"message": ":arrow_up: update mongodb",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T21:24:34Z",
				"message": ":art: add util build script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T21:23:20Z",
				"message": ":art: add util build script",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T20:12:58Z",
				"message": "update mongoose version to get rid of circular dependency issue",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T20:06:53Z",
				"message": ":art: remove _id and __v from response",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T19:30:23Z",
				"message": "Merge pull request #82 from veselcraft/russian-localization\n\nrussian localization for fosscord",
				"messageBody": "russian localization for fosscord"
			},
			{
				"committedDate": "2021-04-06T18:51:26Z",
				"message": ":bug: fix message",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T18:51:14Z",
				"message": ":bug: revert login",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T18:24:58Z",
				"message": ":bug: fix Message Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T17:46:18Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-04-06T17:46:17Z",
				"message": "Update Readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T17:44:32Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T16:57:06Z",
				"message": ":bug: fix test",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T16:07:18Z",
				"message": ":bug: fix bigint id in message route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T16:05:22Z",
				"message": "remove date_of_birth as discord only saves if someone is older than 18 years (nsfw_allowed)",
				"messageBody": "…8 years (nsfw_allowed)"
			},
			{
				"committedDate": "2021-04-06T16:03:37Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T16:02:10Z",
				"message": ":art: Convert id bigint to string",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T16:02:00Z",
				"message": ":art: Convert id bigint to string",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T16:01:49Z",
				"message": ":art: Convert id bigint to string",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T15:12:05Z",
				"message": ":bug: fix body parser empty error object",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T15:06:00Z",
				"message": ":bug: fix User Model guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T14:21:17Z",
				"message": "Merge pull request #81 from notsapinho/patch-1\n\n🐛 fix structure",
				"messageBody": "🐛 fix structure"
			},
			{
				"committedDate": "2021-04-06T12:15:13Z",
				"message": ":bug: fix hearbeat gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:30:24Z",
				"message": ":sparkles: add date of birth to user",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:30:07Z",
				"message": "add .lean to mongodb queries",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:30:04Z",
				"message": ":bug: fix user guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:10:24Z",
				"message": ":bug: fix login",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:07:32Z",
				"message": ":art: add opcodes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:07:09Z",
				"message": ":sparkles: Ready event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:06:47Z",
				"message": ":bug: fix heartbeat error",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:06:32Z",
				"message": ":zap: zlib compression",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:06:07Z",
				"message": ":sparkles: test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:05:46Z",
				"message": ":art: proper error message body parser",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:05:31Z",
				"message": ":bug: fix guild schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:05:18Z",
				"message": ".lean() all mongodb requests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:04:14Z",
				"message": ":rewind: revert guilds in user_data",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T02:03:37Z",
				"message": ":bug: fix routes user.user_data",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:58:27Z",
				"message": ":construction: experiments + gateway route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:56:19Z",
				"message": ":bug: fix Database",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:56:08Z",
				"message": ":sparkles: save private data in user.user_data",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:55:46Z",
				"message": ":sparkles: add Guild virtual fields",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:55:25Z",
				"message": ":bug: fix Ready event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:55:04Z",
				"message": ":bug: fix Activity Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-05T20:33:01Z",
				"message": ":sparkles: export ReadyEventData",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-05T20:28:51Z",
				"message": ":sparkles: Event Enum",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-05T19:43:11Z",
				"message": ":sparkles: init test client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-05T19:24:36Z",
				"message": ":bug: fix body parser",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-03T13:22:10Z",
				"message": ":see_no_evil: add .DS_Store to .gitignore",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-03T13:22:07Z",
				"message": ":see_no_evil: add .DS_Store to .gitignore",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T13:39:00Z",
				"message": ":white_check_mark: setup jest environment",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T13:37:54Z",
				"message": ":bug: rewrite imports",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T13:37:43Z",
				"message": "move routes to top level no more /api/v8 -> use reverse proxy instead",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-28T11:37:30Z",
				"message": ":arrow_up: update fosscord-server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-27T20:52:47Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-03-27T20:52:02Z",
				"message": ":bug: remove relative @paths",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-27T20:51:45Z",
				"message": ":art: Message",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-27T20:25:49Z",
				"message": ":art: update Message timestamp to use Date",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-23T21:08:40Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-03-23T21:08:30Z",
				"message": ":bug: fix message post",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-22T20:52:56Z",
				"message": ":construction: shorten relative paths with @shortcut",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-22T20:52:13Z",
				"message": ":art: rename userid -> user_id",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-08T17:41:31Z",
				"message": ":sparkles: changed number to date type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-08T17:40:55Z",
				"message": ":construction: [Route] /messages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-08T17:40:37Z",
				"message": "rename req.userid -> req.user_id",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T21:01:45Z",
				"message": ":sparkles: Schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T21:01:40Z",
				"message": "[Users] @me self + guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T21:01:25Z",
				"message": ":art: improve guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T21:00:58Z",
				"message": ":sparkles: [Guild] channels",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T21:00:44Z",
				"message": "[Channels] get messages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T21:00:33Z",
				"message": ":sparkles: [Channels] messages bulk delete",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T21:00:17Z",
				"message": ":bug: fix login + register",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T20:59:49Z",
				"message": ":sparkles: AuditLog",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T09:08:55Z",
				"message": ":sparkles: AuditLog",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T08:28:17Z",
				"message": ":art: getPermission() default opts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-04T08:27:14Z",
				"message": ":construction: /channels/messages",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-03T20:24:34Z",
				"message": ":art: getPermission cache",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-03T20:17:09Z",
				"message": ":zap: benchmark",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-03T20:16:20Z",
				"message": ":construction: custom permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-03T20:14:15Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-03-03T20:14:14Z",
				"message": ":construction: messages route",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-23T21:44:12Z",
				"message": "get specific ban",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-23T21:10:01Z",
				"message": ":pencil: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-23T21:02:50Z",
				"message": ":bug: [Member] list fix to also return user",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-23T20:59:22Z",
				"message": ":bug: fix populate. finally 😅",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T21:15:40Z",
				"message": "[Member] fix -> make id required",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T21:15:12Z",
				"message": ":bug: fix addMember to respect max guild size",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T21:11:32Z",
				"message": ":construction: [Member] list",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T20:30:38Z",
				"message": ":sparkles: MemberModel add virtual user field",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:34:30Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:34:14Z",
				"message": "Custom Permission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:34:09Z",
				"message": "Fix Member Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:33:41Z",
				"message": ":sparkles: [Member] pagination",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T15:48:27Z",
				"message": ":art: restructed guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T15:48:12Z",
				"message": ":bug: add webhooks to whitelist auth",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T14:51:53Z",
				"message": ":art: restructure + add/remove Member() function",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T14:50:31Z",
				"message": ":art: [Ban] use removeMember() + move ban in seperate file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T07:37:10Z",
				"message": ":pencil: #CHANNELID -> #channelid",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T07:21:32Z",
				"message": ":bug: fix Event Emitter",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T07:21:17Z",
				"message": ":bug: fix @everyone Role on guild create",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T07:20:42Z",
				"message": ":bug: fix Permission BitField",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-21T21:52:41Z",
				"message": ":bug: fix ban Model Schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-21T21:45:26Z",
				"message": ":bug: fix Event model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-19T14:42:16Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-02-19T14:42:15Z",
				"message": ":art: [Guild] check if user is allowed to created a guild",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-19T14:34:52Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-19T14:34:32Z",
				"message": ":sparkles: Ban Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-17T18:00:46Z",
				"message": ":bug: update user model on guild creation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-17T18:00:26Z",
				"message": ":see_no_evil: revert changes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-17T17:35:15Z",
				"message": ":zap: UserModel remove guild bigint array -> instead use MemberModel",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-17T17:24:40Z",
				"message": "fix req.userid -> convert to bigint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-17T17:13:51Z",
				"message": ":art: show proper auth error",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-17T17:12:07Z",
				"message": ":bug: fix token checking",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T20:40:58Z",
				"message": ":bug: fix Mongodb BigInt",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T20:20:07Z",
				"message": ":bug: fix db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T20:16:56Z",
				"message": ":bug: fix database",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T20:03:32Z",
				"message": ":bug: fix db connect",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T19:59:31Z",
				"message": ":bug: fix database",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T19:35:47Z",
				"message": ":bug: fix error handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T19:04:38Z",
				"message": ":bug: fix Message Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T14:04:55Z",
				"message": ":bug: fix startup error",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T13:04:40Z",
				"message": ":bug: fix Config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T12:30:54Z",
				"message": ":sparkles: load .env file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T12:30:53Z",
				"message": ":sparkles: load .env file",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T10:22:51Z",
				"message": ":fire: disable rate limit for now -> wait till mongoose model exists",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T10:19:25Z",
				"message": ":bug: fix2 Message Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-16T10:14:19Z",
				"message": ":bug: fix message model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-15T21:38:41Z",
				"message": ":bug: fix message model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-15T07:02:05Z",
				"message": ":bug: fix permission dispatch",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T20:58:37Z",
				"message": ":bug: fix guild model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T20:56:31Z",
				"message": ":bug: fix /guilds/ route type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T19:41:40Z",
				"message": ":bug: fix Event type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T19:24:39Z",
				"message": ":bug: fix permission",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T19:16:49Z",
				"message": ":bug: fix public member type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T18:01:41Z",
				"message": "switch to mongoose",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T18:01:38Z",
				"message": "switch to mongoose",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-14T17:59:33Z",
				"message": ":sparkles: Event dispatching",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T23:45:23Z",
				"message": ":bug: fix PermissionResolvable",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T23:32:24Z",
				"message": ":bug: fix Permissions type declaration",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T23:30:07Z",
				"message": ":sparkles: getPermission util function",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T22:57:02Z",
				"message": ":art: Channel + Member + Message + Role in separate collection",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T20:52:06Z",
				"message": ":bug: export MongooseCache",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T13:18:19Z",
				"message": ":sparkles: Config init takes default opts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T13:15:59Z",
				"message": ":zap: Config and database update",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-13T08:30:21Z",
				"message": ":sparkles: mongoose Schemas",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T14:13:02Z",
				"message": "move guild arrays into seperate collections",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T10:42:43Z",
				"message": ":bug: fix export",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T10:27:09Z",
				"message": ":bug: can not override event -> update events",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T19:44:26Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T19:44:12Z",
				"message": ":sparkles: updated other models",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T19:43:51Z",
				"message": ":sparkles: Event model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T07:33:46Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T07:33:02Z",
				"message": ":bug: fix member model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T21:05:17Z",
				"message": "setup listeners",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T21:04:55Z",
				"message": "move Schema from util to gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T21:04:13Z",
				"message": "util function to emit event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T21:03:40Z",
				"message": "move Schema from util to api",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T19:59:58Z",
				"message": "fix models + move schemas in api and gateway",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T13:37:16Z",
				"message": "update import to fosscord-server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T13:34:55Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-02-10T13:34:54Z",
				"message": ":bug: fix error handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T13:16:30Z",
				"message": "update imports for fosscord-server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T13:16:04Z",
				"message": "export event",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-09T21:13:13Z",
				"message": ":bug: update package import to fosscord-server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-09T18:07:55Z",
				"message": "update repository urls",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-09T18:07:21Z",
				"message": "update name",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-09T12:20:26Z",
				"message": "Merge branch 'main' of https://github.com/discord-open-source/discord-gateway into main",
				"messageBody": "…-gateway into main"
			},
			{
				"committedDate": "2021-02-09T12:20:16Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-api",
				"messageBody": "…rd-api"
			},
			{
				"committedDate": "2021-02-09T09:00:35Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-09T08:57:33Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-09T08:53:26Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-09T08:51:19Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-08T15:29:36Z",
				"message": ":sparkles: Event Model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-08T14:39:46Z",
				"message": ":arrow_up: bump lambert-db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T16:57:54Z",
				"message": ":arrow_up: bump lambert-db to version 1.1.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T16:57:48Z",
				"message": ":arrow_up: bump lambert-db to version 1.1.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T16:57:41Z",
				"message": ":arrow_up: bump lambert-db to version 1.1.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T10:25:39Z",
				"message": ":bug: prevent @googlemail.com trick",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T21:33:25Z",
				"message": ":construction: db listener",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T21:07:56Z",
				"message": "update lambert-db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T20:39:23Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T20:36:37Z",
				"message": ":sparkles: add guilds array to user model",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T16:08:33Z",
				"message": ":bug: fix identify schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T16:08:18Z",
				"message": ":sparkles: opcodes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T16:08:08Z",
				"message": ":sparkles: Base Server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T14:35:02Z",
				"message": ":sparkles: Schema interfaces",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T09:09:32Z",
				"message": ":bug: update imports",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T09:09:17Z",
				"message": "moved utils to server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T09:08:59Z",
				"message": "moved models to server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T09:08:25Z",
				"message": "untrack DS_Store",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T09:06:57Z",
				"message": "update missing-native-js-functions version",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T09:06:47Z",
				"message": "update missing-native-js-functions version",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T09:06:37Z",
				"message": "update missing-native-js-functions version",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T08:20:07Z",
				"message": ":sparkles: convertBigIntToString",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T21:05:03Z",
				"message": ":bug: export files and classes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T21:01:01Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T20:55:07Z",
				"message": "Move Models/Schemas to server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T16:47:44Z",
				"message": "use discord-server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T15:58:50Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T15:25:27Z",
				"message": ":art: use discord-server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T15:24:51Z",
				"message": ":art: use discord-server-util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T15:20:34Z",
				"message": ":bug: make default options optional",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T15:14:17Z",
				"message": ":art: rename Database -> db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T14:35:57Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T14:33:42Z",
				"message": ":art: export functions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T14:19:44Z",
				"message": ":tada: init",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T14:19:37Z",
				"message": "Database",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T14:19:32Z",
				"message": "Config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T14:19:24Z",
				"message": "checkToken",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-04T19:31:16Z",
				"message": "Initial commit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-04T09:25:41Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-gateway into main",
				"messageBody": "…rd-gateway into main"
			},
			{
				"committedDate": "2021-02-04T08:55:06Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-server",
				"messageBody": "…rd-server"
			},
			{
				"committedDate": "2021-02-04T08:53:55Z",
				"message": ":art: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-03T18:06:56Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-03T18:06:11Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-03T17:15:16Z",
				"message": "Initial commit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-03T16:43:04Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-server",
				"messageBody": "…rd-server"
			},
			{
				"committedDate": "2021-02-03T16:42:49Z",
				"message": ":lock: prevent passwort denial of server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-03T13:49:13Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-03T10:52:49Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-02T20:43:37Z",
				"message": "Initial commit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T23:58:32Z",
				"message": ":bug: fix register date of birth",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T23:51:00Z",
				"message": ":art:  Body Parser error",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T23:50:12Z",
				"message": ":sparkles: [Route] Register",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T23:50:01Z",
				"message": ":sparkles: [Router] Register",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T20:49:01Z",
				"message": ":sparkles: added defaults to config",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T20:47:47Z",
				"message": ":globe_with_meridians: localization",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T20:47:16Z",
				"message": ":sparkles: models",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T20:46:52Z",
				"message": ":sparkles: added Date + Email Body Type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T20:45:41Z",
				"message": ":sparkles: [Route] Login",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T20:45:22Z",
				"message": ":sparkles: [Route] Register",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T15:54:16Z",
				"message": ":bug: fix Snowflake return bigint instead of string",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T23:20:37Z",
				"message": ":zap: Snowflake generate improve performance with BigInt",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T22:55:32Z",
				"message": ":zap: Convert BitField to BigInt",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:58:17Z",
				"message": "Merge branch 'master' of https://github.com/discord-open-source/discord-server",
				"messageBody": "…rd-server"
			},
			{
				"committedDate": "2021-01-30T18:58:15Z",
				"message": ":sparkles: Util",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:58:02Z",
				"message": ":sparkles: Database",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:57:28Z",
				"message": ":sparkles: RateLimit",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:57:07Z",
				"message": ":sparkles: Authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T15:29:49Z",
				"message": ":tada: init",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T15:14:19Z",
				"message": ":sparkles: update to use new lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T15:10:12Z",
				"message": ":sparkles: update to use new Lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-03T21:45:12Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/discord-server-opensource",
				"messageBody": "…ensource"
			},
			{
				"committedDate": "2021-01-03T21:44:44Z",
				"message": ":sparkles: rethinkdb",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T21:26:20Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-28T18:31:04Z",
				"message": ":tada: standard client finished",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-28T12:39:04Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Database and Storage**\n\n* TypeORM support\n* Mongoose support\n* Better-SQLite3 support\n* RethinkDB support\n* File storage\n* Asset caching\n* Attachment support\n* CDN endpoint configuration\n\n**Security and Authentication**\n\n* Rate limiting\n* IP blocking\n* Token checking\n* Permission system\n* Auth middleware\n* Captcha support\n\n**Config and Environment**\n\n* Environment variable configuration\n* .env file support\n* Config initialization\n* Default configuration options\n\n**Routing and API**\n\n* API routing\n* Route specific rate limits\n* Route middleware testing\n* Event transmission\n* REST API\n* WebSocket API\n\n**Models and Schemas**\n\n* User model\n* Guild model\n* Channel model\n* Message model\n* Member model\n* Ban model\n* Event model\n* Schema interfaces\n* Mongoose schemas\n\n**Events and WebSockets**\n\n* Event dispatching\n* Event model\n* Event transmission\n* Gateway events\n* WebSocket events\n\n**Miscellaneous**\n\n* Logger\n* Error handler\n* Test client\n* Benchmarking\n* Code formatting\n* Code refactoring\n* Code organization\n* Documentation generation"
	},
	{
		"id": "R_kgDOE0tmkQ",
		"description": "A zero-dependency JavaScript utility library delivering missing native functions 💼",
		"homepageUrl": "http://mnjsf.trantlabs.com/",
		"url": "https://github.com/trantlabs/missing-native-js-functions",
		"name": "missing-native-js-functions",
		"nameWithOwner": "trantlabs/missing-native-js-functions",
		"owner": {
			"login": "trantlabs"
		},
		"createdAt": "2020-12-22T18:52:28Z",
		"updatedAt": "2024-01-26T19:11:40Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/7f25a785668fbb468895f7da4e9786d60072bffb8bd5e5a73c1429b99de97f28/trantlabs/missing-native-js-functions",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 1,
			"nodes": [
				{
					"createdAt": "2023-01-14T18:25:55Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 2,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 42972,
			"edges": [
				{
					"size": 34404,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 8568,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 11,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOE0tmka9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 151
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2023-03-15T21:03:05Z",
				"message": "Merge pull request #25 from Intevel/feat-randompush\n\nfeat(array): push random function",
				"messageBody": "feat(array): push random function"
			},
			{
				"committedDate": "2023-02-25T23:10:21Z",
				"message": "fix: exclude docs from npm package",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-25T23:08:41Z",
				"message": "v1.4.2",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-25T23:08:06Z",
				"message": "feat: error handling for missing callbacks",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-24T14:20:04Z",
				"message": "v1.4.1",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-20T07:48:07Z",
				"message": "Merge pull request #24 from trantlabs/date",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-20T00:01:28Z",
				"message": ".",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-19T23:59:07Z",
				"message": ".",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-19T23:58:44Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-19T23:57:57Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-19T23:56:43Z",
				"message": "ci: deploy docs under http://mnjsf.trantlabs.com/",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-19T23:38:07Z",
				"message": "feat(Date): add() and set() function",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-17T10:16:39Z",
				"message": "Merge pull request #23 from trantlabs/date\n\nDate",
				"messageBody": "Date"
			},
			{
				"committedDate": "2023-01-17T10:12:19Z",
				"message": "publish: 1.4.0",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-17T10:11:15Z",
				"message": "!fix(Promise): make caught optional to fix prisma.io client",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-14T18:25:55Z",
				"message": "Merge pull request #22 from trantlabs/date",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-14T18:08:23Z",
				"message": "feat(date): addYear, addMonth, addDate, addHours, addMinutes, addSeconds, addMilliseconds",
				"messageBody": "…nds, addMilliseconds"
			},
			{
				"committedDate": "2023-01-14T18:07:31Z",
				"message": "fix(string): similarity",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-30T20:54:58Z",
				"message": "chore: changelog",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-30T20:50:57Z",
				"message": "v1.3.1",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-30T20:50:07Z",
				"message": "perf(Array.flat): use push(...) instead of concat",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-24T03:18:45Z",
				"message": "fix: CI/CD",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-24T03:17:49Z",
				"message": "fix: CI/CD",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-24T03:15:48Z",
				"message": "feat: docs + CI/CD",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-18T20:30:16Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T16:21:25Z",
				"message": "update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T16:20:37Z",
				"message": "update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-07T13:45:42Z",
				"message": "Merge pull request #20 from Intevel/feat-date-updates\n\nfeat: new date methods",
				"messageBody": "feat: new date methods"
			},
			{
				"committedDate": "2022-10-07T09:20:33Z",
				"message": "Merge pull request #19 from Intevel/feat-yarn",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-16T21:57:20Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-24T14:40:51Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T18:08:20Z",
				"message": "1.2.18",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T18:04:55Z",
				"message": "build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-16T18:04:39Z",
				"message": ":sparkles: added map to array.unique()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T16:55:10Z",
				"message": "1.2.17",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T16:54:58Z",
				"message": "build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:18:40Z",
				"message": "1.2.16",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:18:39Z",
				"message": "1.2.15",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:18:38Z",
				"message": "1.2.14",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:18:36Z",
				"message": "1.2.13",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:17:50Z",
				"message": "build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:17:24Z",
				"message": "1.2.12",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-04T20:17:18Z",
				"message": ":heavy_minus_sign: remove object.equals",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-29T13:34:21Z",
				"message": "Merge pull request #18 from LukasDoesDev/patch-1\n\nFix TypeScript error TS1070",
				"messageBody": "Fix TypeScript error TS1070"
			},
			{
				"committedDate": "2021-08-28T00:10:09Z",
				"message": "1.2.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-28T00:10:07Z",
				"message": ":bug: remove object.values",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T22:30:07Z",
				"message": "1.2.10",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-09T22:30:06Z",
				"message": ":bug: fix global",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:27:14Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:17:49Z",
				"message": "1.2.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:17:45Z",
				"message": ":pencil: updates docs + types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:07:55Z",
				"message": "1.2.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:07:53Z",
				"message": ":sparkles: add string.toBoolean()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-07T08:07:36Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/missing-native-JS-functions into main",
				"messageBody": "…-functions into main"
			},
			{
				"committedDate": "2021-08-07T08:07:34Z",
				"message": ":sparkles: add string.toBoolean()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-06T08:30:40Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-06T08:29:50Z",
				"message": "Delete .DS_Store",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-20T09:00:05Z",
				"message": "1.2.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-20T09:00:02Z",
				"message": ":bug: error handler for string.join() CallStack overflow",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T20:57:27Z",
				"message": "1.2.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T20:57:23Z",
				"message": ":bug: fix JSON stringify",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-05T21:19:28Z",
				"message": "1.2.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-05T21:18:23Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/missing-native-JS-functions into main",
				"messageBody": "…-functions into main"
			},
			{
				"committedDate": "2021-03-05T21:18:14Z",
				"message": ":pencil: update homepage",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-05T21:16:57Z",
				"message": "Merge pull request #17 from xNaCly/main\n\n#16",
				"messageBody": "#16"
			},
			{
				"committedDate": "2021-03-05T21:16:43Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T23:11:17Z",
				"message": "1.2.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T23:10:58Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T23:10:20Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T23:09:45Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/missing-native-JS-functions into main",
				"messageBody": "…-functions into main"
			},
			{
				"committedDate": "2021-02-12T23:09:16Z",
				"message": ":bug: fix static Object equals type declaration",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T23:08:46Z",
				"message": "Merge pull request #15 from xNaCly/main\n\nAdded Date.nowSeconds() as requested in #11",
				"messageBody": "Added Date.nowSeconds() as requested in #11"
			},
			{
				"committedDate": "2021-02-12T22:52:08Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-12T22:45:32Z",
				"message": "Merge pull request #14 from xNaCly/main\n\nchanged scripts to https version",
				"messageBody": "changed scripts to https version"
			},
			{
				"committedDate": "2021-02-12T22:41:45Z",
				"message": "Merge pull request #13 from xNaCly/main\n\n[Documentation] Website to host documentation on",
				"messageBody": "[Documentation] Website to host documentation on"
			},
			{
				"committedDate": "2021-02-12T22:30:26Z",
				"message": ":bug: fix array insert return type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T09:56:30Z",
				"message": ":pencil: added comments to String example",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T09:52:45Z",
				"message": ":pencil: added Object example comments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T09:49:50Z",
				"message": ":pencil: added Number example comments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T09:49:14Z",
				"message": ":pencil: added example comments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T09:48:37Z",
				"message": ":pencil: added JSON example comments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T09:48:21Z",
				"message": ":pencil: added Global example comments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-11T09:45:49Z",
				"message": ":pencil: Array example comments",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T15:29:02Z",
				"message": "1.2.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T15:28:10Z",
				"message": ":bug: export files",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T08:56:44Z",
				"message": "1.2.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T08:56:37Z",
				"message": ":sparkles: JSON.stringify bigint and circular object",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T16:14:37Z",
				"message": "1.2.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-05T16:13:25Z",
				"message": ":sparkles: setIntervalNow",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T22:52:39Z",
				"message": "1.2.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T22:52:02Z",
				"message": "Math.randomIntBetween(min, max)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T22:51:49Z",
				"message": ":pencil: add examples",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T18:19:33Z",
				"message": "1.1.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T18:17:22Z",
				"message": "Merge pull request #10 from xNaCly/main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T18:14:14Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/missing-native-JS-functions into main",
				"messageBody": "…-functions into main"
			},
			{
				"committedDate": "2021-02-01T18:12:55Z",
				"message": ":sparkles: Number.toInt()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T18:12:31Z",
				"message": ":sparkles: Math.randomBetween(min, max)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T18:12:09Z",
				"message": ":art: restructure define",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T17:01:53Z",
				"message": "Merge pull request #10 from xNaCly/main\n\nAdded JSON methods to mnJSf",
				"messageBody": "Added JSON methods to mnJSf"
			},
			{
				"committedDate": "2021-01-31T14:09:29Z",
				"message": "1.1.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T14:09:25Z",
				"message": ":bug: fix double import errors",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T12:48:44Z",
				"message": ":sparkles: update Readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T12:27:09Z",
				"message": "1.1.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T12:27:06Z",
				"message": ":bug: fix Object.merge(obj) -> do not merge classes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T13:52:19Z",
				"message": "1.1.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T13:52:17Z",
				"message": ":sparkles: Array.diff(arr) + Array.missing(arr)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-29T18:56:51Z",
				"message": "1.1.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-29T18:56:47Z",
				"message": ":sparkles: Object.merge(obj)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:48:05Z",
				"message": "1.1.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:47:59Z",
				"message": ":ambulance: Promise.catch() - forgot type declaration",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:45:08Z",
				"message": "1.1.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:44:59Z",
				"message": ":see_no_evil: Promise.caugh(): forgot return this",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:41:07Z",
				"message": "1.1.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:41:03Z",
				"message": ":bug: add Promise to export",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:38:25Z",
				"message": "1.1.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-28T07:38:13Z",
				"message": ":sparkles: Promise.caught()",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-27T18:31:40Z",
				"message": "1.1.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-27T18:30:55Z",
				"message": ":sparkles: arr.findLast && arr.findLastIndex",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-26T14:59:09Z",
				"message": ":bug: fix biginit error",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-26T14:53:19Z",
				"message": "Merge branch 'intevel-main' into main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-26T14:45:38Z",
				"message": "1.0.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-26T14:44:56Z",
				"message": ":bug: fix findMap",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-14T15:28:53Z",
				"message": "Merge pull request #7 from xNaCly/main\n\nAdded .title() & .swapcase() methods",
				"messageBody": "Added .title() & .swapcase() methods"
			},
			{
				"committedDate": "2021-01-14T07:05:06Z",
				"message": "Merge pull request #6 from xNaCly/main\n\nMissing global prototype declaration for the count method",
				"messageBody": "Missing global prototype declaration for the count method"
			},
			{
				"committedDate": "2021-01-14T06:52:28Z",
				"message": "Merge pull request #4 from xNaCly/main\n\nAdded Array.count()",
				"messageBody": "Added Array.count()"
			},
			{
				"committedDate": "2021-01-13T19:16:01Z",
				"message": "Merge pull request #5 from Flam3rboy/Intevel-main\n\nIntevel main",
				"messageBody": "Intevel main"
			},
			{
				"committedDate": "2021-01-13T19:01:09Z",
				"message": "Merge branch 'main' of https://github.com/Intevel/missing-native-JS-functions into Intevel-main",
				"messageBody": "…unctions into Intevel-main"
			},
			{
				"committedDate": "2021-01-13T13:36:47Z",
				"message": ":wrench: tests",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-10T13:11:45Z",
				"message": "1.0.10",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-10T13:07:19Z",
				"message": "Merge pull request #2 from xNaCly/main\n\nNew Object methods & method declarations for Intellisense",
				"messageBody": "New Object methods & method declarations for Intellisense"
			},
			{
				"committedDate": "2021-01-10T13:06:52Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-10T11:55:39Z",
				"message": "Merge pull request #1 from xNaCly/main\n\n4 new methods to be added to the package",
				"messageBody": "4 new methods to be added to the package"
			},
			{
				"committedDate": "2021-01-01T16:57:16Z",
				"message": "1.0.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-01T16:57:10Z",
				"message": ":sparkles: String similarity also for different casing",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-29T18:09:05Z",
				"message": "1.0.8",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-29T18:09:00Z",
				"message": ":bug: fix cannot change readonly property for third party libs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-28T17:31:26Z",
				"message": "1.0.7",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-28T17:31:14Z",
				"message": ":bug: fix typo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-28T15:54:57Z",
				"message": "1.0.6",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-28T15:54:49Z",
				"message": "make functions not iterable",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T22:31:29Z",
				"message": "1.0.5",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T22:31:21Z",
				"message": ":pencil: updated docs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T22:19:13Z",
				"message": "1.0.4",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T22:19:09Z",
				"message": ":sparkles: String.similarity(compare)",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T19:34:11Z",
				"message": "1.0.3",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T19:33:53Z",
				"message": ":bug: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T19:32:39Z",
				"message": "1.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T19:32:37Z",
				"message": ":tada: build",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T19:30:32Z",
				"message": "1.0.1",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T19:30:23Z",
				"message": ":sparkles: missing-native-JS-functions",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T18:52:30Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Categories and Implemented Features:**\n\n1. **Array**\n   - `arr.diff(arr)`\n   - `arr.findLast`\n   - `arr.findLastIndex`\n   - `arr.flat`\n   - `arr.insert`\n   - `arr.missing(arr)`\n   - `arr.unique()` with `map` functionality\n\n2. **Date**\n   - `add()`\n   - `addHours()`\n   - `addMinutes()`\n   - `addMonth()`\n   - `addSeconds()`\n   - `addMilliseconds()`\n   - `addYear()`\n   - `set()`\n\n3. **Error Handling**\n   - Error handler for missing callbacks\n   - Error handler for `string.join()` CallStack overflow\n   - `Promise.catch()` type declaration\n   - `Promise.caught()` with return type fix\n\n4. **JSON**\n   - `JSON.stringify()` for bigint and circular objects\n\n5. **Math**\n   - `Math.randomBetween(min, max)`\n   - `Math.randomIntBetween(min, max)`\n\n6. **Number**\n   - `Number.toInt()`\n\n7. **Object**\n   - `Object.equals()` removed\n   - `Object.merge(obj)` without class merging\n   - Type declaration for `Object.equals()`\n\n8. **Promise**\n   - `Promise.caught()`\n   - `Promise.catch()` optional\n\n9. **String**\n   - `string.similarity(compare)` with different casing\n   - `string.toBoolean()`"
	},
	{
		"id": "R_kgDOHKkv-Q",
		"description": "Easily create & mashup custom emojis ♻️ ",
		"homepageUrl": "",
		"url": "https://github.com/trantlabs/emoji-mashup",
		"name": "emoji-mashup",
		"nameWithOwner": "trantlabs/emoji-mashup",
		"owner": {
			"login": "trantlabs"
		},
		"createdAt": "2022-04-12T14:39:42Z",
		"updatedAt": "2024-08-15T19:49:10Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/0bd00417f1930bf9a43e1995d1870a72948aa517caac1a41899350873b32527c/trantlabs/emoji-mashup",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 8174,
			"edges": [
				{
					"size": 7962,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 212,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 3,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOHKkv-bFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": {
			"text": "# emoji-mashup\n\n[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![Github Actions CI][github-actions-ci-src]][github-actions-ci-href]\n[![License][license-src]][license-href]\n\nEasily create & mashup custom emojis ♻️🥴\n\n## Install\n\n\n```sh\n# Using npm\nnpm install emoji-mashup\n\n# Using yarn\nyarn add emoji-mashup\n```\n\n\n## Usage\n\n### `createCustomEmoji({ base, mouth?, eyes?, special? })`\n\nThis method converts the given emojis and then creates an SVG as string which you can write and edit.\n\n```js\nconst { createCustomEmoji } = require(\"emoji-mashup\");\n\nconst newEmoji = { base: \"🥴\", mouth: \"🥴\", eyes: \"💀\", special: \"🤕\" };\nvar emojiCombined = createCustomEmoji(newEmoji);\n\n// You receive a string with the svg data, in this example we write a file with that.\n// You will generate a mashup of 🥴, 💀 & 🤕.\n```\n\n## License\n\nPublished under MIT - Made with 💚  by TrantLabs\n\n<!-- Badges -->\n\n[npm-version-src]: https://img.shields.io/npm/v/emoji-mashup/latest.svg\n[npm-version-href]: https://npmjs.com/package/emoji-mashup\n[npm-downloads-src]: https://img.shields.io/npm/dt/emoji-mashup.svg\n[npm-downloads-href]: https://npmjs.com/package/emoji-mashup\n[github-actions-ci-src]: https://github.com/trantlabs/emoji-mashup/actions/workflows/ci.yml/badge.svg\n[github-actions-ci-href]: https://github.com/trantlabs/emoji-mashup/actions?query=workflow%3Aci\n[license-src]: https://img.shields.io/npm/l/emoji-mashup.svg\n[license-href]: https://npmjs.com/package/emoji-mashup"
		},
		"commits": [
			{
				"committedDate": "2022-04-12T18:15:44Z",
				"message": "feat(api): finished custom emoji route",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOIt77xQ",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/trantlabs/trant-analytics",
		"name": "trant-analytics",
		"nameWithOwner": "trantlabs/trant-analytics",
		"owner": {
			"login": "trantlabs"
		},
		"createdAt": "2023-01-04T06:49:43Z",
		"updatedAt": "2023-04-17T07:27:35Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/96025368?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 59431,
			"edges": [
				{
					"size": 40657,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 17556,
					"node": {
						"color": "#41b883",
						"name": "Vue"
					}
				},
				{
					"size": 517,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOIt77xa9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 59
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2023-01-19T21:07:34Z",
				"message": "fix(server): docker",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T18:34:45Z",
				"message": "fix(web): diagnostics",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T18:34:40Z",
				"message": "feat(server): projects route",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T13:25:14Z",
				"message": "fix(server): auth",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T01:21:11Z",
				"message": "feat(server): authentication github + jwt routes",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T01:20:41Z",
				"message": "wip(core): rollup plugin",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T01:20:29Z",
				"message": "feat(core): send stack for logs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T01:19:36Z",
				"message": "feat(web): login",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-17T10:13:21Z",
				"message": "fix(web): docker",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-16T17:19:53Z",
				"message": "fix(server): secure mongodb query",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-16T17:19:53Z",
				"message": "feat(server): sourcemaps",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-15T20:54:39Z",
				"message": "v1.0.3-alpha.6",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-15T20:54:17Z",
				"message": "!feat(core): remove console overwrite + add log function for analytics class",
				"messageBody": "…s class"
			},
			{
				"committedDate": "2023-01-13T18:16:51Z",
				"message": "update(web): dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-13T17:55:42Z",
				"message": "v1.0.3-alpha.5",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-13T17:55:03Z",
				"message": "feat(web): docker",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-13T16:54:47Z",
				"message": "v1.0.3-alpha.4",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-13T16:54:34Z",
				"message": "fix(core): react native uuid dependency",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T14:45:59Z",
				"message": "fix(web): useFetch diagnostics",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T14:34:39Z",
				"message": "update(server): dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T14:33:30Z",
				"message": "v1.0.3-alpha.3",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T14:32:30Z",
				"message": "fix(server): events",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T14:31:47Z",
				"message": "fix(core): type",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T20:30:55Z",
				"message": "v1.0.3-alpha.2",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T20:30:36Z",
				"message": "fix(lib,server): types",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T20:17:26Z",
				"message": "v1.0.3-alpha.1",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T20:16:24Z",
				"message": "fix(server): lib",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T20:16:18Z",
				"message": "fix(core): models",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T19:58:16Z",
				"message": "v1.0.3-alpha.0",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T19:57:10Z",
				"message": "feat(server): docker",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T19:57:10Z",
				"message": "fix(core): build",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-10T13:07:50Z",
				"message": "feat(core): improve storage handling",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-09T20:20:48Z",
				"message": "feat(mobile): error page",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-08T22:04:01Z",
				"message": "feat(mobile): errors screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T20:18:06Z",
				"message": "feat(mobile): widget",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T15:58:20Z",
				"message": "fix(lib): types",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T15:29:52Z",
				"message": "feat(mobile): add widgets",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T11:46:00Z",
				"message": "refactor: move @trantlabs:analytics -> core",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T11:41:55Z",
				"message": "wip(mobile): details screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T11:41:25Z",
				"message": "refactor: move library -> packages",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T03:28:56Z",
				"message": "feat(server): add dotenv",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-07T00:05:13Z",
				"message": "feat(mobile): widget",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-06T16:48:57Z",
				"message": "refactor: client -> mobile",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-06T16:48:39Z",
				"message": "feat(lib): react-native",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-06T13:20:46Z",
				"message": "perf(client): calculate stats with mongodb",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-06T02:39:33Z",
				"message": "feat(client): visit stats",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-06T02:38:54Z",
				"message": "feat(client): unplugin icons",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-06T02:38:29Z",
				"message": "feat(client): update react native to 0.71",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-05T14:13:31Z",
				"message": "feat: disable, fix safari",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-05T13:42:37Z",
				"message": "feat: performance metrics",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-05T13:41:56Z",
				"message": "feat: user agent parsing",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-05T11:50:57Z",
				"message": "feat: web analytics",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T19:33:42Z",
				"message": "feat(lib): web analytics",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T17:29:24Z",
				"message": "feat: add date support for ajv/json schema",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T14:25:15Z",
				"message": "refactor: move type models in lib",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T14:16:47Z",
				"message": "feat: server types",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T09:53:28Z",
				"message": "fix(client): mobile",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T09:53:19Z",
				"message": "feat: docs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T06:49:18Z",
				"message": "feat: init",
				"messageBody": ""
			}
		],
		"commitSummary": "**Categories and Features:**\n\n1. **Core**\n\t- Add log function for analytics class\n\t- Improve storage handling\n\t- Remove console overwrite\n\t- Rollup plugin (WIP)\n\t- Send stack for logs\n\t- Type fixes\n2. **Web**\n\t- Add widgets\n\t- Diagnostics\n\t- Docker\n\t- Error screen\n\t- Login\n\t- UseFetch diagnostics\n3. **Server**\n\t- Add dotenv\n\t- Authentication (GitHub + JWT routes)\n\t- Docker\n\t- Events fix\n\t- Lib types\n\t- MongoDB query security\n\t- Project route\n\t- Sourcemaps\n4. **Mobile**\n\t- Add widgets\n\t- Details screen (WIP)\n\t- Error page\n\t- Errors screen\n\t- React native upgrade to 0.71\n5. **General**\n\t- User agent parsing\n\t- Date support for ajv/json schema\n\t- Performance metrics\n6. **Lib**\n\t- React native\n\t- Types\n\t- Web analytics\n7. **Depreciated/Refactor**\n\t- Move @trantlabs:analytics -> core\n\t- Move library -> packages\n\t- Move type models in lib\n\t- Rename client -> mobile"
	},
	{
		"id": "R_kgDOIyNQJA",
		"description": "Status Page + 🐛 Minimal crawler for crawling a websites availability ",
		"homepageUrl": "",
		"url": "https://github.com/trantlabs/status",
		"name": "status",
		"nameWithOwner": "trantlabs/status",
		"owner": {
			"login": "trantlabs"
		},
		"createdAt": "2023-01-16T10:00:37Z",
		"updatedAt": "2023-07-04T06:32:16Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/96025368?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 6,
			"totalSize": 16704,
			"edges": [
				{
					"size": 10190,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				},
				{
					"size": 5112,
					"node": {
						"color": "#41b883",
						"name": "Vue"
					}
				},
				{
					"size": 425,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOIyNQJK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 8
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2023-01-24T18:19:48Z",
				"message": "fix(web): deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T17:27:44Z",
				"message": "fix(web): endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T17:27:44Z",
				"message": "fix(web): fetching on server",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T15:03:25Z",
				"message": "feat(raupe): http server",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T14:35:36Z",
				"message": "feat(raupe, api): add authentication header",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T14:35:15Z",
				"message": "feat(api): move to mongodb",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T14:34:44Z",
				"message": "feat(api, raupe): docker",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-18T13:33:03Z",
				"message": "chore: move raupe into seperate directory",
				"messageBody": ""
			}
		],
		"commitSummary": "**Implementations Summary:**\n1. Bug Fixes:\n   - Deployment (web)\n   - Endpoint (web)\n   - Server-side fetching (web)\n\n2. New Features:\n   - Raupe HTTP server (raupe)\n   - Raupe/api authentication header (raupe, api)\n   - Api mongodb migration (api)\n   - Dockerization (api, raupe)\n\n3. Chores:\n   - Moved raupe to separate directory"
	},
	{
		"id": "R_kgDOJqlj1g",
		"description": "Compiler and Interpreter for the Echt programming language",
		"homepageUrl": null,
		"url": "https://github.com/Echt-lang/cc",
		"name": "cc",
		"nameWithOwner": "Echt-lang/cc",
		"owner": {
			"login": "Echt-lang"
		},
		"createdAt": "2023-06-02T12:39:00Z",
		"updatedAt": "2023-06-02T14:07:16Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/135337468?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 54,
			"edges": [
				{
					"size": 54,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOJqlj1q9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOJqlmxg",
		"description": "Standard library for the Echt programming language",
		"homepageUrl": null,
		"url": "https://github.com/Echt-lang/std",
		"name": "std",
		"nameWithOwner": "Echt-lang/std",
		"owner": {
			"login": "Echt-lang"
		},
		"createdAt": "2023-06-02T12:40:59Z",
		"updatedAt": "2023-06-02T12:41:00Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/135337468?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": null,
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 0,
			"totalSize": 0,
			"edges": []
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": null,
		"object": null
	},
	{
		"id": "R_kgDOJqlqIQ",
		"description": "Package manager for the Echt programming language",
		"homepageUrl": null,
		"url": "https://github.com/Echt-lang/pkg",
		"name": "pkg",
		"nameWithOwner": "Echt-lang/pkg",
		"owner": {
			"login": "Echt-lang"
		},
		"createdAt": "2023-06-02T12:43:23Z",
		"updatedAt": "2023-06-02T12:43:23Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/135337468?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": null,
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 0,
			"totalSize": 0,
			"edges": []
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": null,
		"object": null
	},
	{
		"id": "R_kgDOGhY1NA",
		"description": "Respond is a messenger which unites all messengers in one app",
		"homepageUrl": "",
		"url": "https://github.com/respondchat/respond",
		"name": "respond",
		"nameWithOwner": "respondchat/respond",
		"owner": {
			"login": "respondchat"
		},
		"createdAt": "2021-12-12T21:43:53Z",
		"updatedAt": "2024-10-03T23:31:23Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/148276572?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 1,
			"nodes": [
				{
					"createdAt": "2023-04-07T21:20:41Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 14,
			"totalSize": 3343780,
			"edges": [
				{
					"size": 2995203,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 302983,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 11225,
					"node": {
						"color": "#F05138",
						"name": "Swift"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOGhY1NK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 1171
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2024-10-03T23:24:02Z",
				"message": "feat: reactions + images for skia dom list",
				"messageBody": ""
			},
			{
				"committedDate": "2024-10-03T15:02:42Z",
				"message": "wip: improved lister renderer",
				"messageBody": ""
			},
			{
				"committedDate": "2024-10-03T00:05:59Z",
				"message": "wip: improve wgpu performance",
				"messageBody": ""
			},
			{
				"committedDate": "2024-10-02T21:41:21Z",
				"message": "wip: wgpu list rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2024-10-02T14:03:54Z",
				"message": "wip: wgpu for rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2024-10-02T14:03:47Z",
				"message": "wip: use skia list for rendering chat messages",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-29T14:03:59Z",
				"message": "wip: db fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-28T13:23:21Z",
				"message": "feat: prevent auto scrolling when finger is down",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-26T21:29:24Z",
				"message": "feat: smooth insert animation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-26T00:22:08Z",
				"message": "wip: message insert animation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-25T20:15:00Z",
				"message": "feat: add reactions",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-25T12:25:08Z",
				"message": "fix: context menu jumping when clicking away and scrolling immediately",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-24T21:45:32Z",
				"message": "feat: android support",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-23T15:29:22Z",
				"message": "perf: zero allocations render",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-23T10:45:43Z",
				"message": "perf: 0 allocation render Function",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-21T22:29:31Z",
				"message": "feat: restructure message list",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-21T21:43:58Z",
				"message": "wip: test",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-21T17:57:46Z",
				"message": "wip: opacity config",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-21T15:46:32Z",
				"message": "feat: message skia context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-21T01:10:39Z",
				"message": "wip: message list context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-20T01:18:56Z",
				"message": "wip: attachments + reactions",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-19T01:19:04Z",
				"message": "fix: skia item rendering in rewind loop",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-18T23:31:27Z",
				"message": "wip: skia",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-18T19:15:47Z",
				"message": "feat: skia list",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-18T01:20:54Z",
				"message": "feat: skia list + wip messages",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-16T02:51:05Z",
				"message": "wip: skia list",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-14T14:31:25Z",
				"message": "wip: skia",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-14T05:05:46Z",
				"message": "feat: skia list",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-13T01:41:30Z",
				"message": "wip: skia scrollview",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-12T11:23:11Z",
				"message": "Merge pull request #268 from respondchat/dependabot/npm_and_yarn/documentation/express-4.21.0\n\nchore(deps): bump express from 4.19.2 to 4.21.0 in /documentation",
				"messageBody": "…mentation/express-4.21.0\n\nchore(deps): bump express from 4.19.2 to 4.21.0 in /documentation"
			},
			{
				"committedDate": "2024-09-12T01:36:32Z",
				"message": "feat: drizzle db optimizations + fixes",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-12T01:34:48Z",
				"message": "wip: tauri",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-11T14:28:29Z",
				"message": "fix: electron desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-11T01:11:15Z",
				"message": "Merge pull request #267 from respondchat/dependabot/npm_and_yarn/documentation/micromatch-4.0.8\n\nchore(deps): bump micromatch from 4.0.5 to 4.0.8 in /documentation",
				"messageBody": "…mentation/micromatch-4.0.8\n\nchore(deps): bump micromatch from 4.0.5 to 4.0.8 in /documentation"
			},
			{
				"committedDate": "2024-09-11T01:10:07Z",
				"message": "feat: embed libsignal in ios",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-11T01:09:13Z",
				"message": "feat: signal use libsignal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-11T01:09:02Z",
				"message": "feat: drizzle orm db",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-10T00:36:44Z",
				"message": "feat: ci testing",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-10T00:36:44Z",
				"message": "wip: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-10T00:36:44Z",
				"message": "feat: update to react-native v0.75.2",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-10T00:36:44Z",
				"message": "update",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-04T17:59:15Z",
				"message": "Merge pull request #266 from respondchat/dependabot/npm_and_yarn/server/micromatch-4.0.8\n\nchore(deps): bump micromatch from 4.0.5 to 4.0.8 in /server",
				"messageBody": "…er/micromatch-4.0.8\n\nchore(deps): bump micromatch from 4.0.5 to 4.0.8 in /server"
			},
			{
				"committedDate": "2024-09-03T18:08:27Z",
				"message": "Merge pull request #265 from respondchat/dependabot/npm_and_yarn/documentation/webpack-5.94.0\n\nchore(deps): bump webpack from 5.91.0 to 5.94.0 in /documentation",
				"messageBody": "…mentation/webpack-5.94.0\n\nchore(deps): bump webpack from 5.91.0 to 5.94.0 in /documentation"
			},
			{
				"committedDate": "2024-08-23T09:59:27Z",
				"message": "Merge pull request #263 from respondchat/dependabot/npm_and_yarn/server/hono-4.5.8\n\nchore(deps): bump hono from 4.2.7 to 4.5.8 in /server",
				"messageBody": "…er/hono-4.5.8\n\nchore(deps): bump hono from 4.2.7 to 4.5.8 in /server"
			},
			{
				"committedDate": "2024-08-23T09:59:18Z",
				"message": "Merge pull request #264 from respondchat/dependabot/bundler/client/rexml-3.3.6\n\nchore(deps): bump rexml from 3.3.3 to 3.3.6 in /client",
				"messageBody": "…xml-3.3.6\n\nchore(deps): bump rexml from 3.3.3 to 3.3.6 in /client"
			},
			{
				"committedDate": "2024-08-20T23:52:16Z",
				"message": "fix: ui bugs",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-20T23:51:58Z",
				"message": "feat: update discord",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-20T23:51:47Z",
				"message": "feat: add discord testing env",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T14:33:58Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T14:30:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T14:30:23Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T14:27:30Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T14:14:06Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T14:13:06Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T13:42:38Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T13:40:28Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T13:29:30Z",
				"message": "fix: docker build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-09T12:52:07Z",
				"message": "Merge pull request #262 from respondchat/dependabot/bundler/client/rexml-3.3.3\n\nchore(deps): bump rexml from 3.2.8 to 3.3.3 in /client",
				"messageBody": "…xml-3.3.3\n\nchore(deps): bump rexml from 3.2.8 to 3.3.3 in /client"
			},
			{
				"committedDate": "2024-08-09T12:48:41Z",
				"message": "Customization & UI\n- [x] Scan QR Code: less round\n- [x] Customization Message Bubbles: disabled not working\n- [x] Icons: flickering on customization adjustment\n- [x] Color Picker: customization\n\nContext Menu\n- [x] Context Menu Unpinned Chat: should have an outlined pin icon\n- [x] Context Menu Chat Delete: confirm red\n\nAdditional Features\n- [x] Vibration: ausstellbar",
				"messageBody": "- [x] Scan QR Code: less round\n- [x] Customization Message Bubbles: disabled not working\n- [x] Icons: flickering on customization adjustment\n- [x] Color Picker: customization\n\nContext Menu\n- [x] Context Menu Unpinned Chat: should have an outlined pin icon\n- [x] Context Menu Chat Delete: confirm red\n\nAdditional Features\n- [x] Vibration: ausstellbar"
			},
			{
				"committedDate": "2024-08-09T12:48:41Z",
				"message": "Revert \"feat: signal support + update\"\n\nThis reverts commit 164d9c3031667964760b73e31e723142044a2ac9.",
				"messageBody": "This reverts commit 164d9c3031667964760b73e31e723142044a2ac9."
			},
			{
				"committedDate": "2024-08-09T12:48:41Z",
				"message": "Revert \"feat: use libsignal\"\n\nThis reverts commit 6f73629ed8253745fc7d82c2ae7cb8b21a11a420.",
				"messageBody": "This reverts commit 6f73629ed8253745fc7d82c2ae7cb8b21a11a420."
			},
			{
				"committedDate": "2024-08-09T12:48:40Z",
				"message": "feat: use libsignal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-08T22:52:16Z",
				"message": "Update Dockerfile",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-08T22:45:49Z",
				"message": "Update build.sh",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-31T10:23:21Z",
				"message": "feat: signal support + update",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-31T10:23:10Z",
				"message": "feat: signal support + update",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-07T22:42:13Z",
				"message": "signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-05T00:23:10Z",
				"message": "feat: signal message ui integration",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-04T02:29:59Z",
				"message": "feat: signal auth + fixes",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-02T02:07:32Z",
				"message": "fix: signal bug fixes",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-02T02:07:15Z",
				"message": "feat: signal/whatsapp method onboarding",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T23:33:18Z",
				"message": "fix: ghost message",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T23:01:09Z",
				"message": "fix: discord notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T22:47:07Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T15:14:00Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T15:03:10Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T15:02:09Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T14:25:20Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T13:00:51Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T01:05:01Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T00:59:41Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T00:56:11Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T00:51:26Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T00:48:45Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T00:46:38Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T00:42:25Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-25T23:01:34Z",
				"message": "Merge pull request #259 from respondchat/dependabot/npm_and_yarn/server/braces-3.0.3",
				"messageBody": "…er/braces-3.0.3"
			},
			{
				"committedDate": "2024-06-25T00:26:02Z",
				"message": "feat: update dependencies + performance",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-18T13:05:15Z",
				"message": "Merge pull request #261 from respondchat/dependabot/npm_and_yarn/library/ws-8.17.1\n\nchore(deps-dev): bump ws from 8.17.0 to 8.17.1 in /library",
				"messageBody": "…ary/ws-8.17.1\n\nchore(deps-dev): bump ws from 8.17.0 to 8.17.1 in /library"
			},
			{
				"committedDate": "2024-06-18T13:04:26Z",
				"message": "Merge pull request #260 from respondchat/dependabot/npm_and_yarn/documentation/ws-7.5.10\n\nchore(deps): bump ws from 7.5.9 to 7.5.10 in /documentation",
				"messageBody": "…mentation/ws-7.5.10\n\nchore(deps): bump ws from 7.5.9 to 7.5.10 in /documentation"
			},
			{
				"committedDate": "2024-06-14T13:30:16Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-14T13:24:05Z",
				"message": "fix: docker",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-14T12:55:40Z",
				"message": "fix: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-14T12:52:32Z",
				"message": "fix: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-14T01:19:39Z",
				"message": "feat: group decryption",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-13T13:14:54Z",
				"message": "fix: signal auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-13T13:01:57Z",
				"message": "fix: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-13T01:53:23Z",
				"message": "feat: signal group",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-12T23:42:05Z",
				"message": "fix: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-12T23:35:39Z",
				"message": "fix: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-12T23:26:49Z",
				"message": "Merge pull request #258 from respondchat/dependabot/npm_and_yarn/documentation/braces-3.0.3\n\nchore(deps): bump braces from 3.0.2 to 3.0.3 in /documentation",
				"messageBody": "…mentation/braces-3.0.3\n\nchore(deps): bump braces from 3.0.2 to 3.0.3 in /documentation"
			},
			{
				"committedDate": "2024-06-12T23:26:05Z",
				"message": "feat(server): signal deriveGroupFields",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-12T21:46:46Z",
				"message": "wip: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T15:14:22Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T14:59:05Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T14:50:36Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T14:49:07Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T14:47:35Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T14:45:26Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T13:46:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T13:40:37Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T13:36:41Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T13:24:02Z",
				"message": "feat: signal group + sealed sender + storage",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-06T13:17:49Z",
				"message": "fix(lib): prototype pollution security vulnerability",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-06T13:17:16Z",
				"message": "fix(lib): prototype pollution security vulnerability",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-06T13:15:53Z",
				"message": "Merge pull request #257 from respondchat/dependabot/npm_and_yarn/documentation/http-cache-semantics-4.1.1\n\nchore(deps): bump http-cache-semantics from 4.1.0 to 4.1.1 in /documentation",
				"messageBody": "…mentation/http-cache-semantics-4.1.1\n\nchore(deps): bump http-cache-semantics from 4.1.0 to 4.1.1 in /documentation"
			},
			{
				"committedDate": "2024-06-06T13:15:05Z",
				"message": "Merge pull request #256 from respondchat/dependabot/npm_and_yarn/documentation/webpack-5.91.0\n\nchore(deps): bump webpack from 5.75.0 to 5.91.0 in /documentation",
				"messageBody": "…mentation/webpack-5.91.0\n\nchore(deps): bump webpack from 5.75.0 to 5.91.0 in /documentation"
			},
			{
				"committedDate": "2024-06-06T02:36:55Z",
				"message": "feat: signal sealed senders",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-04T04:17:03Z",
				"message": "fix(lib): prototype pollution security vulnerability",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-03T01:31:23Z",
				"message": "feat: working signal multi device",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T18:18:35Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T18:00:45Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T17:36:55Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T17:34:56Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T16:41:17Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T16:31:11Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T16:17:49Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-18T21:48:09Z",
				"message": "Merge pull request #255 from respondchat/dependabot/bundler/client/rexml-3.2.8\n\nchore(deps): bump rexml from 3.2.6 to 3.2.8 in /client",
				"messageBody": "…xml-3.2.8\n\nchore(deps): bump rexml from 3.2.6 to 3.2.8 in /client"
			},
			{
				"committedDate": "2024-05-16T00:20:06Z",
				"message": "feat: update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-07T10:55:58Z",
				"message": "feat: add transparency for desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-07T10:55:57Z",
				"message": "fix: message",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-03T08:41:53Z",
				"message": "Merge pull request #254 from respondchat/dependabot/npm_and_yarn/client/ejs-3.1.10\n\nchore(deps): bump ejs from 3.1.9 to 3.1.10 in /client",
				"messageBody": "…nt/ejs-3.1.10\n\nchore(deps): bump ejs from 3.1.9 to 3.1.10 in /client"
			},
			{
				"committedDate": "2024-05-01T03:00:25Z",
				"message": "Merge pull request #253 from respondchat/dependabot/npm_and_yarn/server/hono-4.2.7\n\nchore(deps): bump hono from 3.11.7 to 4.2.7 in /server",
				"messageBody": "…er/hono-4.2.7\n\nchore(deps): bump hono from 3.11.7 to 4.2.7 in /server"
			},
			{
				"committedDate": "2024-04-29T17:29:29Z",
				"message": "fix: folder",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-26T03:34:29Z",
				"message": "fix: message + folders + chats + library",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-25T18:03:42Z",
				"message": "fix: folders",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-25T11:22:47Z",
				"message": "fix: chats + provider screen crash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-25T03:30:53Z",
				"message": "fix: inpu + scroll to botom + folders",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-25T03:30:14Z",
				"message": "feat: message swip timestamp reveal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-25T02:49:26Z",
				"message": "feat: update message swipe",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-25T02:48:52Z",
				"message": "feat: update chats folders",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-24T15:10:16Z",
				"message": "feat: smoother message send animation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-24T13:36:03Z",
				"message": "feat: update packages",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-23T12:29:31Z",
				"message": "perf: startup performance",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-23T12:29:17Z",
				"message": "fix: chat input buttons",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-23T12:28:50Z",
				"message": "fix: keyboard with bottomsheet",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-23T12:27:41Z",
				"message": "fix: messages scroll bar + blurview",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-23T12:26:28Z",
				"message": "feat: message send error + retry",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-21T14:40:31Z",
				"message": "feat: ai suggestions",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-20T20:45:29Z",
				"message": "style: app render in separate component",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-20T12:16:47Z",
				"message": "chore: remove log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T21:15:27Z",
				"message": "wip: combined provider",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T21:15:26Z",
				"message": "feat: auto update discord endpoints + constants",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T21:15:24Z",
				"message": "fix: app settings not saved",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T21:13:56Z",
				"message": "fix: types",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T11:21:23Z",
				"message": "wip: combined chat",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-17T21:55:45Z",
				"message": "wip: compose share sheet",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-13T03:26:50Z",
				"message": "WIP: compose view",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-13T02:30:41Z",
				"message": "fix: HMR not working",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-13T02:30:09Z",
				"message": "WIP: share extension",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-12T01:28:21Z",
				"message": "feat: performance improvments and small bug fixes",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-11T14:29:12Z",
				"message": "feat: setup instructions",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-11T14:29:11Z",
				"message": "fix: setup by updating dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-11T14:29:10Z",
				"message": "fix: channel list",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-11T03:20:57Z",
				"message": "Merge pull request #58 from respondchat/dependabot/npm_and_yarn/client/tar-6.2.1\n\nchore(deps): bump tar from 6.2.0 to 6.2.1 in /client",
				"messageBody": "…t/tar-6.2.1\n\nchore(deps): bump tar from 6.2.0 to 6.2.1 in /client"
			},
			{
				"committedDate": "2024-04-11T03:19:59Z",
				"message": "feat: guild sorting by official client sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-11T03:18:56Z",
				"message": "fix: video attachments",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-10T04:10:35Z",
				"message": "feat: new desktop sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-10T01:25:43Z",
				"message": "feat: desktop tauri support + qr code authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-07T22:02:55Z",
				"message": "feat: performance improvements",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-05T12:43:26Z",
				"message": "fix: discord notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-03T04:24:47Z",
				"message": "Merge pull request #56 from respondchat/dependabot/npm_and_yarn/client/express-4.19.2\n\nchore(deps): bump express from 4.18.2 to 4.19.2 in /client",
				"messageBody": "…t/express-4.19.2\n\nchore(deps): bump express from 4.18.2 to 4.19.2 in /client"
			},
			{
				"committedDate": "2024-04-03T04:24:41Z",
				"message": "Merge pull request #57 from respondchat/dependabot/npm_and_yarn/documentation/express-4.19.2\n\nchore(deps): bump express from 4.18.2 to 4.19.2 in /documentation",
				"messageBody": "…entation/express-4.19.2\n\nchore(deps): bump express from 4.18.2 to 4.19.2 in /documentation"
			},
			{
				"committedDate": "2024-04-03T04:24:36Z",
				"message": "Merge pull request #54 from respondchat/dependabot/npm_and_yarn/client/webpack-dev-middleware-5.3.4\n\nchore(deps): bump webpack-dev-middleware from 5.3.3 to 5.3.4 in /client",
				"messageBody": "…t/webpack-dev-middleware-5.3.4\n\nchore(deps): bump webpack-dev-middleware from 5.3.3 to 5.3.4 in /client"
			},
			{
				"committedDate": "2024-04-03T04:23:25Z",
				"message": "feat: migrate to react-native-iconify + mobx optimization",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-23T23:16:37Z",
				"message": "Merge pull request #55 from respondchat/dependabot/npm_and_yarn/documentation/webpack-dev-middleware-5.3.4\n\nchore(deps): bump webpack-dev-middleware from 5.3.3 to 5.3.4 in /documentation",
				"messageBody": "…entation/webpack-dev-middleware-5.3.4\n\nchore(deps): bump webpack-dev-middleware from 5.3.3 to 5.3.4 in /documentation"
			},
			{
				"committedDate": "2024-03-17T18:25:35Z",
				"message": "Merge pull request #53 from respondchat/dependabot/cargo/client/src-tauri/rustix-0.37.27\n\nchore(deps): bump rustix from 0.37.8 to 0.37.27 in /client/src-tauri",
				"messageBody": "…auri/rustix-0.37.27\n\nchore(deps): bump rustix from 0.37.8 to 0.37.27 in /client/src-tauri"
			},
			{
				"committedDate": "2024-03-17T18:24:30Z",
				"message": "Merge pull request #47 from respondchat/dependabot/npm_and_yarn/client/react-native-document-picker-9.1.1\n\nchore(deps): bump react-native-document-picker from 8.2.1 to 9.1.1 in /client",
				"messageBody": "…t/react-native-document-picker-9.1.1\n\nchore(deps): bump react-native-document-picker from 8.2.1 to 9.1.1 in /client"
			},
			{
				"committedDate": "2024-03-17T18:24:23Z",
				"message": "Merge pull request #51 from respondchat/dependabot/npm_and_yarn/client/follow-redirects-1.15.6\n\nchore(deps): bump follow-redirects from 1.15.4 to 1.15.6 in /client",
				"messageBody": "…t/follow-redirects-1.15.6\n\nchore(deps): bump follow-redirects from 1.15.4 to 1.15.6 in /client"
			},
			{
				"committedDate": "2024-03-17T18:24:15Z",
				"message": "Merge pull request #52 from respondchat/dependabot/npm_and_yarn/documentation/follow-redirects-1.15.6\n\nchore(deps): bump follow-redirects from 1.15.4 to 1.15.6 in /documentation",
				"messageBody": "…entation/follow-redirects-1.15.6\n\nchore(deps): bump follow-redirects from 1.15.4 to 1.15.6 in /documentation"
			},
			{
				"committedDate": "2024-03-06T19:56:58Z",
				"message": "Merge pull request #50 from respondchat/dependabot/cargo/client/src-tauri/mio-0.8.11\n\nchore(deps): bump mio from 0.8.6 to 0.8.11 in /client/src-tauri",
				"messageBody": "…auri/mio-0.8.11\n\nchore(deps): bump mio from 0.8.6 to 0.8.11 in /client/src-tauri"
			},
			{
				"committedDate": "2024-03-02T22:10:30Z",
				"message": "Merge pull request #49 from respondchat/dependabot/npm_and_yarn/client/sentry/react-native-5.19.1\n\nchore(deps): bump @sentry/react-native from 5.17.0 to 5.19.1 in /client",
				"messageBody": "…t/sentry/react-native-5.19.1\n\nchore(deps): bump @sentry/react-native from 5.17.0 to 5.19.1 in /client"
			},
			{
				"committedDate": "2024-02-22T12:48:40Z",
				"message": "Merge pull request #48 from respondchat/dependabot/npm_and_yarn/client/ip-1.1.9\n\nchore(deps): bump ip from 1.1.8 to 1.1.9 in /client",
				"messageBody": "…t/ip-1.1.9\n\nchore(deps): bump ip from 1.1.8 to 1.1.9 in /client"
			},
			{
				"committedDate": "2024-02-07T10:33:08Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-07T04:46:36Z",
				"message": "feat: new call ui",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-07T04:46:28Z",
				"message": "feat: new context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-07T04:37:51Z",
				"message": "fix: input attachment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-07T04:37:38Z",
				"message": "fix: input jump on send",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-06T17:27:30Z",
				"message": "feat: add instagram apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-06T17:27:12Z",
				"message": "fix: server",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-28T14:22:15Z",
				"message": "fix: chat input",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T20:59:47Z",
				"message": "feat: faster sqlite db",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T20:59:43Z",
				"message": "feat: new react-native version",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T20:58:39Z",
				"message": "fix: keyboard input + messages",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-10T11:18:33Z",
				"message": "Merge pull request #46 from respondchat/dependabot/npm_and_yarn/documentation/follow-redirects-1.15.4\n\nchore(deps): bump follow-redirects from 1.15.2 to 1.15.4 in /documentation",
				"messageBody": "…entation/follow-redirects-1.15.4\n\nchore(deps): bump follow-redirects from 1.15.2 to 1.15.4 in /documentation"
			},
			{
				"committedDate": "2024-01-10T10:55:51Z",
				"message": "Merge pull request #45 from respondchat/dependabot/npm_and_yarn/client/follow-redirects-1.15.4\n\nchore(deps): bump follow-redirects from 1.15.2 to 1.15.4 in /client",
				"messageBody": "…t/follow-redirects-1.15.4\n\nchore(deps): bump follow-redirects from 1.15.2 to 1.15.4 in /client"
			},
			{
				"committedDate": "2023-12-29T03:10:28Z",
				"message": "Merge pull request #41 from respondchat/dependabot/npm_and_yarn/client/adobe/css-tools-4.3.2\n\nchore(deps): bump @adobe/css-tools from 4.3.1 to 4.3.2 in /client",
				"messageBody": "…t/adobe/css-tools-4.3.2\n\nchore(deps): bump @adobe/css-tools from 4.3.1 to 4.3.2 in /client"
			},
			{
				"committedDate": "2023-12-29T03:10:16Z",
				"message": "Merge pull request #42 from respondchat/dependabot/npm_and_yarn/server/hono-3.11.7\n\nchore(deps): bump hono from 3.7.6 to 3.11.7 in /server",
				"messageBody": "…r/hono-3.11.7\n\nchore(deps): bump hono from 3.7.6 to 3.11.7 in /server"
			},
			{
				"committedDate": "2023-12-29T03:10:05Z",
				"message": "Merge pull request #43 from respondchat/dependabot/npm_and_yarn/client/tauri-apps/cli-1.5.6\n\nchore(deps-dev): bump @tauri-apps/cli from 1.4.0 to 1.5.6 in /client",
				"messageBody": "…t/tauri-apps/cli-1.5.6\n\nchore(deps-dev): bump @tauri-apps/cli from 1.4.0 to 1.5.6 in /client"
			},
			{
				"committedDate": "2023-12-29T03:09:57Z",
				"message": "Merge pull request #44 from respondchat/dependabot/npm_and_yarn/server/msgpackr-1.10.1\n\nchore(deps): bump msgpackr from 1.9.9 to 1.10.1 in /server",
				"messageBody": "…r/msgpackr-1.10.1\n\nchore(deps): bump msgpackr from 1.9.9 to 1.10.1 in /server"
			},
			{
				"committedDate": "2023-12-25T16:58:19Z",
				"message": "fix: notification",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-25T16:52:49Z",
				"message": "wip: use wishlist",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-25T16:52:48Z",
				"message": "fix: notification error handling",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-25T16:52:46Z",
				"message": "feat: update react-native",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-30T19:47:56Z",
				"message": "README.md aktualisieren",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-29T15:49:58Z",
				"message": "fix: signal registration + attachment button",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-29T15:41:59Z",
				"message": "fix: signal registration + attachment button",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-29T15:41:58Z",
				"message": "fix: server",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-29T15:41:56Z",
				"message": "feat: discord join guild button + science",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-29T15:41:55Z",
				"message": "feat: signal working kyber + wip group poksho",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-29T15:41:54Z",
				"message": "fix: signal decryption",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-12T15:05:57Z",
				"message": "Merge pull request #40 from respondchat/dependabot/npm_and_yarn/library/axios-1.6.0\n\nchore(deps-dev): bump axios from 1.4.0 to 1.6.0 in /library",
				"messageBody": "…ry/axios-1.6.0\n\nchore(deps-dev): bump axios from 1.4.0 to 1.6.0 in /library"
			},
			{
				"committedDate": "2023-10-31T01:47:28Z",
				"message": "Update Message.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T21:51:28Z",
				"message": "Merge pull request #39 from respondchat/dependabot/npm_and_yarn/client/electron-25.8.4\n\nchore(deps): bump electron from 25.8.0 to 25.8.4 in /client",
				"messageBody": "…t/electron-25.8.4\n\nchore(deps): bump electron from 25.8.0 to 25.8.4 in /client"
			},
			{
				"committedDate": "2023-10-27T18:48:45Z",
				"message": "Merge pull request #37 from respondchat/dependabot/npm_and_yarn/client/browserify-sign-4.2.2",
				"messageBody": "…t/browserify-sign-4.2.2"
			},
			{
				"committedDate": "2023-10-27T18:48:26Z",
				"message": "Merge pull request #38 from respondchat/dependabot/npm_and_yarn/library/postcss-8.4.31",
				"messageBody": "…ry/postcss-8.4.31"
			},
			{
				"committedDate": "2023-10-27T18:11:18Z",
				"message": "wip: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:17Z",
				"message": "fix: apns notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:16Z",
				"message": "feat: folders icons",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:14Z",
				"message": "fix: call crash",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:13Z",
				"message": "fix: multi account folders",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:11Z",
				"message": "fix: message scroll bounce",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:10Z",
				"message": "fix: call ringback",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:09Z",
				"message": "fix: discord calls",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-27T18:11:07Z",
				"message": "fix: notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-26T12:39:27Z",
				"message": "Merge pull request #35 from respondchat/dependabot/npm_and_yarn/client/react-devtools-core-4.28.4\n\nchore(deps): bump react-devtools-core from 4.28.0 to 4.28.4 in /client",
				"messageBody": "…t/react-devtools-core-4.28.4\n\nchore(deps): bump react-devtools-core from 4.28.0 to 4.28.4 in /client"
			},
			{
				"committedDate": "2023-10-26T12:39:18Z",
				"message": "Merge pull request #33 from respondchat/dependabot/npm_and_yarn/documentation/babel/traverse-7.23.2\n\nchore(deps): bump @babel/traverse from 7.20.13 to 7.23.2 in /documentation",
				"messageBody": "…entation/babel/traverse-7.23.2\n\nchore(deps): bump @babel/traverse from 7.20.13 to 7.23.2 in /documentation"
			},
			{
				"committedDate": "2023-10-26T12:38:43Z",
				"message": "Merge pull request #36 from respondchat/dependabot/npm_and_yarn/client/crypto-js-4.2.0\n\nchore(deps): bump crypto-js from 4.1.1 to 4.2.0 in /client",
				"messageBody": "…t/crypto-js-4.2.0\n\nchore(deps): bump crypto-js from 4.1.1 to 4.2.0 in /client"
			},
			{
				"committedDate": "2023-10-19T09:29:01Z",
				"message": "feat: signal rewrite",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-18T12:19:18Z",
				"message": "fix: notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-17T19:20:09Z",
				"message": "update docker compose redis",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-17T12:15:49Z",
				"message": "Merge pull request #34 from trantlabs/dependabot/npm_and_yarn/client/babel/traverse-7.23.2\n\nchore(deps): bump @babel/traverse from 7.22.17 to 7.23.2 in /client",
				"messageBody": "…babel/traverse-7.23.2\n\nchore(deps): bump @babel/traverse from 7.22.17 to 7.23.2 in /client"
			},
			{
				"committedDate": "2023-10-16T22:25:51Z",
				"message": "update trant -> respond",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-14T12:18:46Z",
				"message": "fix: server docker deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-13T21:30:40Z",
				"message": "fix: server docker deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-12T17:37:02Z",
				"message": "fix: server docker",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-12T15:21:27Z",
				"message": "feat: notification server with apns",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-12T15:19:05Z",
				"message": "fix: library types",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-12T15:19:02Z",
				"message": "feat: apns client",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-12T15:19:00Z",
				"message": "feat: libsignal library",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-12T15:18:59Z",
				"message": "feat: signal authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-12T15:18:57Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-02T22:04:13Z",
				"message": "Merge pull request #30 from trantlabs/dependabot/cargo/server/notification-relay-discord/tungstenite-0.20.1\n\nchore(deps): bump tungstenite from 0.17.3 to 0.20.1 in /server/notification-relay-discord",
				"messageBody": "…ation-relay-discord/tungstenite-0.20.1\n\nchore(deps): bump tungstenite from 0.17.3 to 0.20.1 in /server/notification-relay-discord"
			},
			{
				"committedDate": "2023-10-02T21:58:26Z",
				"message": "Merge pull request #29 from trantlabs/dependabot/cargo/client/src-tauri/webpki-0.22.2\n\nchore(deps): bump webpki from 0.22.0 to 0.22.2 in /client/src-tauri",
				"messageBody": "…ri/webpki-0.22.2\n\nchore(deps): bump webpki from 0.22.0 to 0.22.2 in /client/src-tauri"
			},
			{
				"committedDate": "2023-08-31T08:13:02Z",
				"message": "wip: signal lib",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-31T08:13:02Z",
				"message": "fix: desktop missing input accessory view",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-31T08:13:02Z",
				"message": "fix: server token not saved",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-31T08:12:46Z",
				"message": "fix: reactions missing observable",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-30T23:43:59Z",
				"message": "Merge pull request #28 from trantlabs/dependabot/npm_and_yarn/server/notification-relay-discord-js/mongodb-4.17.0",
				"messageBody": "…notification-relay-discord-js/mongodb-4.17.0"
			},
			{
				"committedDate": "2023-08-30T23:43:19Z",
				"message": "Merge pull request #27 from trantlabs/dependabot/npm_and_yarn/server/notification-provider/mongodb-4.17.0",
				"messageBody": "…notification-provider/mongodb-4.17.0"
			},
			{
				"committedDate": "2023-08-30T11:20:36Z",
				"message": "Merge pull request #26 from trantlabs/dependabot/npm_and_yarn/client/adobe/css-tools-4.3.1\n\nchore(deps-dev): bump @adobe/css-tools from 4.2.0 to 4.3.1 in /client",
				"messageBody": "…adobe/css-tools-4.3.1\n\nchore(deps-dev): bump @adobe/css-tools from 4.2.0 to 4.3.1 in /client"
			},
			{
				"committedDate": "2023-08-24T00:17:38Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-21T10:54:01Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-21T10:50:10Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-21T10:31:53Z",
				"message": "fix: server",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-21T10:31:50Z",
				"message": "feat: customizable folders",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-20T23:26:58Z",
				"message": "feat: discord friend requests",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-20T23:26:45Z",
				"message": "fix: chat input + chat not found",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-20T19:33:28Z",
				"message": "feat: working signal directory server",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-17T03:45:29Z",
				"message": "wip: signal connection + decryption + directory",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-16T01:29:39Z",
				"message": "wip: signal registration",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-16T01:29:24Z",
				"message": "perf: only render video thumbnail",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-16T01:28:53Z",
				"message": "fix: ui bugs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-16T01:28:06Z",
				"message": "refactor: chat input bar",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-14T18:18:01Z",
				"message": "perf(lib): discord do not merge undefined properties",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-14T18:17:18Z",
				"message": "feat: use context for message options",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-14T18:16:34Z",
				"message": "feat: chat tabs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-13T23:21:35Z",
				"message": "wip: chat tab",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-12T01:11:53Z",
				"message": "chore: bug fixes, ui updates",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-12T01:11:42Z",
				"message": "fix: message swipe only on message",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-12T01:10:40Z",
				"message": "perf(lib): optimize entities + discord onReady",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-12T01:09:04Z",
				"message": "fix: input bar now bound to chat",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-12T01:08:11Z",
				"message": "wip: swipable chat input bar",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-12T01:07:27Z",
				"message": "feat: update react-native to v0.72.3",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-06T01:38:36Z",
				"message": "feat: design improvements\n- discord authentication no fullscreen navigation gesture\n- whatsapp reword method screen\n- message avatar bigger and always at the top near the author name\n- message author name bugger\n- message bubble padding bigger\n- smaller and cleaner context menu\n- message fix markdown list rendering\n- message consistent max width\n- chats search now properly clears\n- discord embed rendering",
				"messageBody": "- discord authentication no fullscreen navigation gesture\n- whatsapp reword method screen\n- message avatar bigger and always at the top near the author name\n- message author name bugger\n- message bubble padding bigger\n- smaller and cleaner context menu\n- message fix markdown list rendering\n- message consistent max width\n- chats search now properly clears\n- discord embed rendering"
			},
			{
				"committedDate": "2023-08-03T00:16:38Z",
				"message": "fix: attachments + notifications + authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-03T00:14:28Z",
				"message": "fix: whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-03T00:14:07Z",
				"message": "fix: reactions not updated + invalid chat.last_message",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-03T00:12:56Z",
				"message": "fix: open chat does not mark new messages as read",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-03T00:11:54Z",
				"message": "fix: chat highlight displayed twice",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-03T00:10:43Z",
				"message": "fix: message swipe inconsistencies",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-20T00:27:24Z",
				"message": "refactor: attachment single top level object",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-20T00:26:50Z",
				"message": "fix: whatsapp chat name from contacts",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-20T00:26:50Z",
				"message": "feat: whatsapp reactions + edit message",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-18T21:59:17Z",
				"message": "Merge pull request #24 from trantlabs/dependabot/npm_and_yarn/library/word-wrap-1.2.4\n\nchore(deps): bump word-wrap from 1.2.3 to 1.2.4 in /library",
				"messageBody": "…/word-wrap-1.2.4\n\nchore(deps): bump word-wrap from 1.2.3 to 1.2.4 in /library"
			},
			{
				"committedDate": "2023-07-18T21:59:11Z",
				"message": "Merge pull request #25 from trantlabs/dependabot/npm_and_yarn/client/word-wrap-1.2.4\n\nchore(deps): bump word-wrap from 1.2.3 to 1.2.4 in /client",
				"messageBody": "…word-wrap-1.2.4\n\nchore(deps): bump word-wrap from 1.2.3 to 1.2.4 in /client"
			},
			{
				"committedDate": "2023-07-18T21:47:48Z",
				"message": "Merge pull request #22 from trantlabs/dependabot/npm_and_yarn/server/notification-provider/mongoose-6.11.3\n\nchore(deps): bump mongoose from 6.7.2 to 6.11.3 in /server/notification-provider",
				"messageBody": "…notification-provider/mongoose-6.11.3\n\nchore(deps): bump mongoose from 6.7.2 to 6.11.3 in /server/notification-provider"
			},
			{
				"committedDate": "2023-07-18T21:47:41Z",
				"message": "Merge pull request #23 from trantlabs/dependabot/npm_and_yarn/server/notification-relay-discord-js/mongoose-6.11.3\n\nchore(deps): bump mongoose from 6.7.2 to 6.11.3 in /server/notification-relay-discord-js",
				"messageBody": "…notification-relay-discord-js/mongoose-6.11.3\n\nchore(deps): bump mongoose from 6.7.2 to 6.11.3 in /server/notification-relay-discord-js"
			},
			{
				"committedDate": "2023-07-13T13:33:33Z",
				"message": "Merge pull request #19 from trantlabs/dependabot/npm_and_yarn/server/notification-provider/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /server/notification-provider",
				"messageBody": "…notification-provider/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /server/notification-provider"
			},
			{
				"committedDate": "2023-07-13T13:33:26Z",
				"message": "Merge pull request #20 from trantlabs/dependabot/npm_and_yarn/server/notification-relay-discord-js/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /server/notification-relay-discord-js",
				"messageBody": "…notification-relay-discord-js/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /server/notification-relay-discord-js"
			},
			{
				"committedDate": "2023-07-13T13:33:20Z",
				"message": "Merge pull request #21 from trantlabs/dependabot/npm_and_yarn/documentation/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /documentation",
				"messageBody": "…tation/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /documentation"
			},
			{
				"committedDate": "2023-07-12T20:02:42Z",
				"message": "wip: signal",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-12T07:05:10Z",
				"message": "Merge pull request #16 from trantlabs/dependabot/npm_and_yarn/library/protobufjs-7.2.4\n\nchore(deps): bump protobufjs from 6.11.3 to 7.2.4 in /library",
				"messageBody": "…/protobufjs-7.2.4\n\nchore(deps): bump protobufjs from 6.11.3 to 7.2.4 in /library"
			},
			{
				"committedDate": "2023-07-12T07:04:59Z",
				"message": "Merge pull request #17 from trantlabs/dependabot/npm_and_yarn/library/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /library",
				"messageBody": "…/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /library"
			},
			{
				"committedDate": "2023-07-12T07:04:47Z",
				"message": "Merge pull request #18 from trantlabs/dependabot/npm_and_yarn/client/semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /client",
				"messageBody": "…semver-5.7.2\n\nchore(deps): bump semver from 5.7.1 to 5.7.2 in /client"
			},
			{
				"committedDate": "2023-06-29T01:00:57Z",
				"message": "Merge pull request #15 from trantlabs/dependabot/npm_and_yarn/server/notification-relay-discord-js/fast-xml-parser-and-aws-sdk/credential-providers-4.2.5\n\nchore(deps): bump fast-xml-parser and @aws-sdk/credential-providers in /server/notification-relay-discord-js",
				"messageBody": "…notification-relay-discord-js/fast-xml-parser-and-aws-sdk/credential-providers-4.2.5\n\nchore(deps): bump fast-xml-parser and @aws-sdk/credential-providers in /server/notification-relay-discord-js"
			},
			{
				"committedDate": "2023-06-29T00:58:14Z",
				"message": "feat(lib): wip signal",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-23T00:19:06Z",
				"message": "fix(lib): mentions",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-23T00:19:06Z",
				"message": "fix(client): notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-22T23:22:15Z",
				"message": "Merge pull request #13 from trantlabs/dependabot/npm_and_yarn/library/fast-xml-parser-4.2.5\n\nchore(deps): bump fast-xml-parser from 4.2.4 to 4.2.5 in /library",
				"messageBody": "…/fast-xml-parser-4.2.5\n\nchore(deps): bump fast-xml-parser from 4.2.4 to 4.2.5 in /library"
			},
			{
				"committedDate": "2023-06-22T23:22:08Z",
				"message": "Merge pull request #14 from trantlabs/dependabot/npm_and_yarn/client/fast-xml-parser-4.2.5\n\nchore(deps): bump fast-xml-parser from 4.2.4 to 4.2.5 in /client",
				"messageBody": "…fast-xml-parser-4.2.5\n\nchore(deps): bump fast-xml-parser from 4.2.4 to 4.2.5 in /client"
			},
			{
				"committedDate": "2023-06-22T23:21:23Z",
				"message": "chore(client): clean up",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-22T23:21:23Z",
				"message": "feat(lib): discord fetch members support",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-22T23:21:23Z",
				"message": "feat(client): mention other users",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-22T23:21:23Z",
				"message": "chore(client): split input bar into multiple component files",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-22T23:21:23Z",
				"message": "feat(client): reaction emoji picker",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-21T22:55:20Z",
				"message": "Merge pull request #12 from trantlabs/dependabot/cargo/server/notification-relay-discord/openssl-0.10.55\n\nchore(deps): bump openssl from 0.10.48 to 0.10.55 in /server/notification-relay-discord",
				"messageBody": "…ation-relay-discord/openssl-0.10.55\n\nchore(deps): bump openssl from 0.10.48 to 0.10.55 in /server/notification-relay-discord"
			},
			{
				"committedDate": "2023-06-19T18:04:39Z",
				"message": "fix(lib): discord delete cached channel, if it has been deleted",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-19T18:03:53Z",
				"message": "fix(lib): discord member does not contain @everyone role",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T13:33:08Z",
				"message": "feat(client): hide hidden channels",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T11:33:19Z",
				"message": "fix(lib): discord permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T10:13:46Z",
				"message": "fix(client): discord permissions",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T08:56:18Z",
				"message": "fix(client): notifications in guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T08:55:52Z",
				"message": "feat(client): unread filter",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T08:19:51Z",
				"message": "fix(client): markdown header rendering + discord emoji url",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T08:19:36Z",
				"message": "fix(client): message pfp + reactions alignment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-18T08:19:01Z",
				"message": "fix(lib): Discord attachment sending",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-16T09:49:16Z",
				"message": "fix(client): notification handler",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-15T19:18:31Z",
				"message": "fix(client): preload not working",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-15T19:18:06Z",
				"message": "fix(lib): discord ghost reply",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-10T04:13:07Z",
				"message": "feat(client): timestamp messages + context menu web + sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-08T10:08:49Z",
				"message": "Merge pull request #11 from trantlabs/dependabot/npm_and_yarn/server/notification-relay-discord-js/fast-xml-parser-and-aws-sdk/credential-providers-4.2.4\n\nchore(deps): bump fast-xml-parser and @aws-sdk/credential-providers in /server/notification-relay-discord-js",
				"messageBody": "…notification-relay-discord-js/fast-xml-parser-and-aws-sdk/credential-providers-4.2.4\n\nchore(deps): bump fast-xml-parser and @aws-sdk/credential-providers in /server/notification-relay-discord-js"
			},
			{
				"committedDate": "2023-06-07T23:30:34Z",
				"message": "fix(client): desktop open link tauri",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-07T23:26:28Z",
				"message": "fix(lib): message edit with attachment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-07T23:26:28Z",
				"message": "fix(server): loop bug",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-06T20:59:46Z",
				"message": "Merge pull request #7 from trantlabs/dependabot/cargo/client/src-tauri/tauri-1.2.5\n\nchore(deps): bump tauri from 1.2.4 to 1.2.5 in /client/src-tauri",
				"messageBody": "…i/tauri-1.2.5\n\nchore(deps): bump tauri from 1.2.4 to 1.2.5 in /client/src-tauri"
			},
			{
				"committedDate": "2023-06-06T20:59:38Z",
				"message": "Merge pull request #9 from trantlabs/dependabot/npm_and_yarn/library/fast-xml-parser-4.2.4\n\nchore(deps): bump fast-xml-parser from 4.1.3 to 4.2.4 in /library",
				"messageBody": "…fast-xml-parser-4.2.4\n\nchore(deps): bump fast-xml-parser from 4.1.3 to 4.2.4 in /library"
			},
			{
				"committedDate": "2023-06-06T20:59:33Z",
				"message": "Merge pull request #10 from trantlabs/dependabot/npm_and_yarn/client/fast-xml-parser-4.2.4\n\nchore(deps): bump fast-xml-parser from 4.2.2 to 4.2.4 in /client",
				"messageBody": "…fast-xml-parser-4.2.4\n\nchore(deps): bump fast-xml-parser from 4.2.2 to 4.2.4 in /client"
			},
			{
				"committedDate": "2023-06-04T18:52:16Z",
				"message": "fix: server",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:32:15Z",
				"message": "feat: open message notification in new screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "feat: open message notification in new screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "feat: auto renew notification subscription",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "fix: chat sorting for communities",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "fix: message context menu with reply",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "feat: search alphabet section headers",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "feat: user profile message + call button",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "fix: discord emoji reaction",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-04T02:27:27Z",
				"message": "fix: edit not working",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-02T18:12:52Z",
				"message": "Merge pull request #8 from trantlabs/dependabot/npm_and_yarn/client/antfu/utils-0.7.4",
				"messageBody": "…ntfu/utils-0.7.4"
			},
			{
				"committedDate": "2023-05-31T22:48:57Z",
				"message": "feat: add electron fallback for dev + macos",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-25T17:52:58Z",
				"message": "fix: android",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-25T14:39:31Z",
				"message": "fix: chat last input not set",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-17T15:33:40Z",
				"message": "feat: whatsapp mobile register",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-17T14:37:43Z",
				"message": "feat: add nick name, discord global_name",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-13T15:36:44Z",
				"message": "fix: chat zoomable avatar",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-13T15:35:30Z",
				"message": "feat: whatsapp download attachments",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-13T15:34:44Z",
				"message": "feat: update discord api version",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-12T22:45:24Z",
				"message": "feat(lib): whatsapp image thumbnail",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-11T20:31:05Z",
				"message": "feat: whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-10T01:44:01Z",
				"message": "wip: whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-03T21:34:41Z",
				"message": "feat(client): view profile picture modal",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-03T21:34:18Z",
				"message": "feat(lib): startChat from user",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-03T21:34:04Z",
				"message": "feat(client): search user",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-01T22:21:17Z",
				"message": "fix(lib): emoji only regex",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-01T21:57:49Z",
				"message": "feat(client): chats search",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-01T18:53:20Z",
				"message": "fix(client): video missing control",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-01T00:11:34Z",
				"message": "fix(client): update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T23:55:45Z",
				"message": "fix(client): refetch messages on chat",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T23:24:21Z",
				"message": "fix(lib): double message bug",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T23:13:03Z",
				"message": "feat(lib): auto split discord messages larger than 2000 chars",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T23:04:00Z",
				"message": "fix(client): chat highlight color",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T23:03:48Z",
				"message": "fix(client): blockquote theme",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T22:36:56Z",
				"message": "fix(client): stuck",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T22:34:15Z",
				"message": "wip(lib): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T22:33:51Z",
				"message": "fix(client): update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T22:33:35Z",
				"message": "feat(client): smooth message send/receive animation",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-23T19:19:16Z",
				"message": "chore(client): cleanup",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-23T19:18:39Z",
				"message": "perf(client): load all chats on startup",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-23T19:17:50Z",
				"message": "feat(client): chat highlight",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-23T19:17:33Z",
				"message": "feat(client): edit message",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-12T00:31:48Z",
				"message": "fix(client): deadlock + notification",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-10T23:22:15Z",
				"message": "fix(lib): message.attachment undefined",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-09T23:54:18Z",
				"message": "fix(lib): last message not overwritten",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-09T23:54:02Z",
				"message": "fix(client): message reaction + context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-09T23:16:43Z",
				"message": "fix(client): desktop context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-08T22:44:43Z",
				"message": "fix(client): message reaction + reply rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-08T22:44:12Z",
				"message": "feat(client): scroll to bottom FAB",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-08T22:43:15Z",
				"message": "fix(lib): message reactions not observable",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T21:20:41Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T21:18:17Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T20:28:41Z",
				"message": "fix: ci cache",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T20:26:23Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T19:58:15Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T17:38:42Z",
				"message": "fix(client): patches",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T17:29:09Z",
				"message": "feat(client): add arm + intel arch",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T16:44:12Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T16:41:18Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T16:08:39Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T16:02:34Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:58:59Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:49:09Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:47:54Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:45:49Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:43:34Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:41:36Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:38:59Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:19:48Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:13:30Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:09:48Z",
				"message": "fix: ci",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T15:08:11Z",
				"message": "feat(client): desktop tauri build",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T14:37:01Z",
				"message": "fix(client): windows",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T12:55:28Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-07T12:55:11Z",
				"message": "fix(client): windows",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-06T23:10:21Z",
				"message": "fix(client): call",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-06T21:45:21Z",
				"message": "wip(client): tauri authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-06T21:44:55Z",
				"message": "feat(lib): discord permission handling",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-06T21:44:14Z",
				"message": "feat(client): improve keyboard hanlding with message context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-06T21:43:05Z",
				"message": "feat(client): better scroll to dissmis keyboard handling",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-06T12:13:11Z",
				"message": "fix(client): swipe + pinned + sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-06T12:12:55Z",
				"message": "feat(client): use tauri instead of electron",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-04T23:55:32Z",
				"message": "chore(client)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-04T23:55:16Z",
				"message": "feat(client): call indicator",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-04T23:54:48Z",
				"message": "feat(client): splash screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-04T23:54:38Z",
				"message": "fix(client): message send animation",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-04T23:54:13Z",
				"message": "fix(lib): message update + create",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-03T22:09:55Z",
				"message": "chore(client): clean up",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-03T22:09:43Z",
				"message": "feat(client): chat context menu description screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-03T22:08:57Z",
				"message": "perf(client): improve startup rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-03T22:08:32Z",
				"message": "fix(client): input bar crash on startup + other bugs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-01T01:44:15Z",
				"message": "perf(client): one swipeable for alle messages",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-01T01:43:40Z",
				"message": "feat(client): bottom sheet as context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-31T00:15:32Z",
				"message": "fix(server): deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-31T00:15:32Z",
				"message": "fix(client): rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-29T02:13:11Z",
				"message": "Merge pull request #4 from trantlabs/dependabot/npm_and_yarn/server/notification-provider/minimatch-3.1.2",
				"messageBody": "…otification-provider/minimatch-3.1.2"
			},
			{
				"committedDate": "2023-03-29T02:12:40Z",
				"message": "Merge pull request #6 from trantlabs/dependabot/cargo/server/notification-relay-discord/tokio-1.24.2",
				"messageBody": "…tion-relay-discord/tokio-1.24.2"
			},
			{
				"committedDate": "2023-03-29T02:12:22Z",
				"message": "Merge pull request #5 from trantlabs/dependabot/npm_and_yarn/server/notification-provider/fastify-4.10.2",
				"messageBody": "…otification-provider/fastify-4.10.2"
			},
			{
				"committedDate": "2023-03-29T02:11:01Z",
				"message": "Merge pull request #3 from trantlabs/dependabot/cargo/server/notification-relay-discord/openssl-0.10.48\n\nchore(deps): bump openssl from 0.10.42 to 0.10.48 in /server/notification-relay-discord",
				"messageBody": "…tion-relay-discord/openssl-0.10.48\n\nchore(deps): bump openssl from 0.10.42 to 0.10.48 in /server/notification-relay-discord"
			},
			{
				"committedDate": "2023-03-29T02:09:27Z",
				"message": "feat(client): animation with reanimated",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-29T02:08:22Z",
				"message": "perf(lib): use observable map instead of collection",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-28T18:23:16Z",
				"message": "fix(client): react-native-reanimated makeShareableCloneRecursive Call Stack Size Exceeded #4177",
				"messageBody": "… Stack Size Exceeded #4177"
			},
			{
				"committedDate": "2023-03-26T00:20:44Z",
				"message": "chore(client): clean up",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-26T00:20:07Z",
				"message": "fix(client): video controls not working",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-26T00:19:47Z",
				"message": "feat(client): paste images in input",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-26T00:19:29Z",
				"message": "feat(client): attachment send files",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-25T22:30:28Z",
				"message": "feat(client): message timestamps on swipe",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-25T20:24:56Z",
				"message": "fix(client): input box not remounted on navigation",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-24T23:21:20Z",
				"message": "feat(client): message replies",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-24T23:21:14Z",
				"message": "feat(client): message day timestamp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-24T00:51:19Z",
				"message": "feat(client): tab bar: chats, communities, settings",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-23T03:17:03Z",
				"message": "fix(client): message embeds + link rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-23T03:16:33Z",
				"message": "feat(client): message reply gesture",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-22T23:53:16Z",
				"message": "fix(client): chat + message display",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-22T23:52:48Z",
				"message": "style(lib): clean up code",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-20T03:14:09Z",
				"message": "feat(client): only fetch chats on screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-20T03:13:51Z",
				"message": "feat(lib): fetch chats pagination + json merge update",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-19T16:31:11Z",
				"message": "fix(client): use faster-mobx",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-19T16:30:42Z",
				"message": "fix(lib)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-19T16:30:20Z",
				"message": "fix(client): android build",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-16T15:15:54Z",
				"message": "style(client): clean up function names + props",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-16T15:15:40Z",
				"message": "perf(lib): do not resave entities after loading from database",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-16T13:35:23Z",
				"message": "Revert \"feat(lib): rewrite to mmkv storage & use faster-mobx\"\n\nThis reverts commit 86e9e46de6fa532ba8023bd8dff096ddfeb9092e.",
				"messageBody": "This reverts commit 86e9e46de6fa532ba8023bd8dff096ddfeb9092e."
			},
			{
				"committedDate": "2023-03-16T01:34:37Z",
				"message": "feat(lib): rewrite to mmkv storage & use faster-mobx",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-16T01:34:10Z",
				"message": "feat(client): use faster-mobx",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-14T01:20:50Z",
				"message": "fix(client): last message",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-13T18:12:32Z",
				"message": "feat(lib): mark guild as read",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-13T16:14:49Z",
				"message": "feat(client): unread + mention badge for folders",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-13T16:14:33Z",
				"message": "perf(client): improve channels rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-13T16:02:57Z",
				"message": "fix(client): attachment view",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-13T16:02:22Z",
				"message": "feat(client): add badge to folders",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-11T14:23:24Z",
				"message": "perf(lib): prevent unnecessary data changes -> rerenderings",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-11T13:57:18Z",
				"message": "fix(client): first message from unknown",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-11T01:45:56Z",
				"message": "fix(client): web router",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-11T01:45:45Z",
				"message": "fix(lib): dm chat number of unread messages",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-11T01:45:14Z",
				"message": "fix(client): unknown author on cache load",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T23:48:12Z",
				"message": "fix(client): desktop startup",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T20:08:53Z",
				"message": "fix(server): discord muted config",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T20:08:43Z",
				"message": "feat(client): add undo button for chat actions",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T19:12:02Z",
				"message": "feat(ci): external library docker container",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T11:29:41Z",
				"message": "fix(server): do not save message in notification relay",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T02:49:32Z",
				"message": "feat(client): add sentry error monitoring",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T02:49:20Z",
				"message": "feat(client): chat entry context menu + archived",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T02:48:52Z",
				"message": "feat(client): message scroll + cleanup",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T02:48:16Z",
				"message": "feat(lib): archived chat + cleaned up logic",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-09T02:47:40Z",
				"message": "feat(client): folders",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-04T03:51:58Z",
				"message": "feat(client): emoji + mentions rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-04T02:24:10Z",
				"message": "wip(lib): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-04T02:24:02Z",
				"message": "feat: message scroll send animation",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-25T03:51:07Z",
				"message": "fix(client): messages",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-25T03:50:28Z",
				"message": "wip(lib): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-23T13:42:02Z",
				"message": "feat(client): syntax highlighting on desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-17T23:15:34Z",
				"message": "fix(client): context menu position",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-17T22:21:26Z",
				"message": "fix(client): context menu offset blink",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-17T22:21:10Z",
				"message": "fix(client): image send crash",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-17T22:20:19Z",
				"message": "fix(client): sidebar filter",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-15T13:03:43Z",
				"message": "fix(client): customization",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-15T13:02:08Z",
				"message": "fix(lib): discord pin guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-14T23:58:34Z",
				"message": "feat(client): chats pages with filters",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-14T23:58:22Z",
				"message": "fix(lib): discord pinned chats + user settings",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-13T22:00:19Z",
				"message": "fix(client): reaction context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-13T22:00:04Z",
				"message": "wip(lib): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-13T21:59:49Z",
				"message": "feat(lib): discord user settings + pinned chats",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-01T22:56:46Z",
				"message": "chore(client): remove logs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-31T01:34:10Z",
				"message": "wip(client): message reactions",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-31T00:09:38Z",
				"message": "fix(client): message displayed twice",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-30T23:57:07Z",
				"message": "feat(client): input send button animation",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-30T23:40:24Z",
				"message": "fix(client): input on ipad",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-30T23:35:27Z",
				"message": "fix(client): pinned setting is not saved",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-30T22:04:53Z",
				"message": "perf(client): only fetch visible chats",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-30T22:04:36Z",
				"message": "fix(client): input bar not clickable",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-30T18:51:40Z",
				"message": "perf(client): save ALL notifications in local database",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-29T21:30:04Z",
				"message": "update(documentation)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-26T15:55:53Z",
				"message": "chore(clien): remove storybook + add comments",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-26T02:21:55Z",
				"message": "fix(client): crashes",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-25T19:44:36Z",
				"message": "wip(client): windows",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-24T23:11:21Z",
				"message": "fix(client): crash on call notification",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-24T03:20:49Z",
				"message": "feat(client): message send animation",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-23T03:41:46Z",
				"message": "wip(client): send animation",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T23:15:46Z",
				"message": "fix(client): prevent discord message from being rendered twice one sent",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T23:15:11Z",
				"message": "fix(client): do not show received messages as unread in chat",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T23:07:27Z",
				"message": "fix(server/notify): memory leak, when db disconnected",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T13:50:36Z",
				"message": "fix(notify/discord): shard manager",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T02:29:46Z",
				"message": "fix(client): calculating unread messages + loading chats",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T01:17:49Z",
				"message": "feat(notify): handle error when sending notification",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T01:17:02Z",
				"message": "chore(client): add logs, remove old code, fix spelling",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T01:15:48Z",
				"message": "feat(client): load message from notification",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T01:14:46Z",
				"message": "perf(lib): use faster sqlite library",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T01:13:10Z",
				"message": "fix(client): chat messages proper keyboard handling",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-22T01:09:17Z",
				"message": "fix(lib): app settings not saved",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-20T22:37:30Z",
				"message": "fix(client): chats not updating on new message",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-20T22:37:01Z",
				"message": "wip(lib): fosscord",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-20T22:36:16Z",
				"message": "fix(server): discord relay",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-16T12:44:37Z",
				"message": "fix(client): message rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-15T21:47:08Z",
				"message": "feat(client): use analytics",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-14T18:18:54Z",
				"message": "chore(client): fixes",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-14T18:18:41Z",
				"message": "update(client): react-native 0.71",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-12T00:47:56Z",
				"message": "feat(client): desktop guild sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T23:10:52Z",
				"message": "fix(client): storage desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T23:06:44Z",
				"message": "feat(client): channels + improved rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T15:50:14Z",
				"message": "fix(lib): last_message not updated",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T15:48:49Z",
				"message": "fix(server): notifications not working in production",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-09T23:47:29Z",
				"message": "feat(client): add analytics",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-04T13:00:09Z",
				"message": "perf(client): speed up useAutorun mobx",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T19:04:25Z",
				"message": "fix(client): account name only one line",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T19:02:34Z",
				"message": "fix(client): message update + attachment bubble color",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T18:52:59Z",
				"message": "fix(lib): discord message delete event",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T18:45:10Z",
				"message": "style(client): white header buttons",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T18:34:32Z",
				"message": "fix(client): message send + unread indicator",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T18:20:42Z",
				"message": "style(client): chat header",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T18:05:45Z",
				"message": "fix(client): chat message read indicator",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T17:10:22Z",
				"message": "fix(client): group chat move up avatar to author name",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T14:19:01Z",
				"message": "style(client): change dark background color",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T14:15:29Z",
				"message": "fix(client): chat context menu pin icon filled change",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T14:13:16Z",
				"message": "fix(client): same font input and messages",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T14:10:10Z",
				"message": "fix(client): center icons in navbar",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T14:05:25Z",
				"message": "fix(client): increase margin top in chats screen",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T13:41:01Z",
				"message": "fix(client): call cannot read properties map of undefined",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T13:30:38Z",
				"message": "fix(client): error boundary, reset router state",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T13:30:01Z",
				"message": "feat(client): message copy context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T03:44:27Z",
				"message": "fix(mobile): pin",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T03:17:09Z",
				"message": "fix(mobile): url polyfill",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T02:59:09Z",
				"message": "fix(desktop): pinned",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T01:51:26Z",
				"message": "refactor(client): split up components into seperate files",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-03T01:51:11Z",
				"message": "fix(lib): chat pinned and other properties not observable",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-02T23:47:39Z",
				"message": "fix(client): message loading desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-02T19:30:12Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-02T11:02:35Z",
				"message": "fix(ios): disable callkit in china",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-02T10:32:38Z",
				"message": "refactor(client)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-02T10:31:16Z",
				"message": "fix(desktop): app blank",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-02T10:30:15Z",
				"message": "feat(lib): auto save entities",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T22:47:54Z",
				"message": "feat(lib): auto save entity",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T22:47:23Z",
				"message": "feat(lib): move fetchMessages/members to chat class",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T21:36:21Z",
				"message": "fix(client): double message load",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T21:10:26Z",
				"message": "fix(client): image size",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T19:18:06Z",
				"message": "perf(client): move app initalization earlier",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T19:17:35Z",
				"message": "fix(client): chats pinned",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T19:17:04Z",
				"message": "fix(lib): keep demo chat settings",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T18:45:57Z",
				"message": "fix(mobile): auto update",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T14:35:44Z",
				"message": "fix(client): do not display discord test login in production",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-01T01:18:29Z",
				"message": "fix(lib): demo",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T23:49:35Z",
				"message": "feat: discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T23:30:24Z",
				"message": "wip: discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T03:17:11Z",
				"message": "fix: discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T03:17:11Z",
				"message": "fix(lib): discord not saving chat last message timestamp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T03:17:11Z",
				"message": "style(client): cleanup",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T03:17:11Z",
				"message": "fix(lib): mobile database",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T03:17:11Z",
				"message": "fix(client): mobile chats not clickable",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-31T03:17:11Z",
				"message": "perf(lib): use database+mobx transactions",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-30T03:29:46Z",
				"message": "perf(client): improve desktop chat scroll performance",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-30T01:02:32Z",
				"message": "fix(lib): first load, chats not ordered",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-30T00:44:22Z",
				"message": "feat(client): use iconify icons - remove ionicon font",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-29T23:18:37Z",
				"message": "feat(client): iconify mobile",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-29T21:20:30Z",
				"message": "wip(lib): remove save",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-29T14:01:36Z",
				"message": "feat(client): use chats for both desktop + mobile",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-29T14:00:45Z",
				"message": "fix(lib): instagram",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-29T13:59:36Z",
				"message": "fix(client): attachment size",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-29T00:26:44Z",
				"message": "fix: circular dependency issue",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-29T00:26:37Z",
				"message": "feat: no bubbles on desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-27T13:21:28Z",
				"message": "perf: switch to better-sqlite3",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-26T21:45:19Z",
				"message": "fix(client): production build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-26T16:35:15Z",
				"message": "feat: add contribution guide",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-26T12:35:41Z",
				"message": "chore: change package scripts",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-26T04:11:00Z",
				"message": "perf: render chats",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-26T04:10:49Z",
				"message": "fix: web not reloading when library changed",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-26T02:41:50Z",
				"message": "perf: client use vite instead of webpack",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-25T21:36:13Z",
				"message": "fix: Customization/Theme not saved",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-15T23:33:54Z",
				"message": "chore: move module declaration",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-15T01:11:08Z",
				"message": "feat(client): add analytics + crash reports",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-14T16:57:12Z",
				"message": "feat(client): discord guild channel rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T23:33:11Z",
				"message": "build: docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T23:33:03Z",
				"message": "build: docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T23:32:11Z",
				"message": "feat(client): clean up settings",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T23:31:50Z",
				"message": "feat(client): easier alert manager",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T23:31:09Z",
				"message": "perf: remove useTheme() -> directly use exported theme",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T23:08:29Z",
				"message": "feat(client): storage screen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T18:55:18Z",
				"message": "fix: unread messages badge",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T18:06:53Z",
				"message": "fix(lib): unecessary sorting",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-13T18:06:38Z",
				"message": "feat(client): bottom sheet + clean up structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-11T22:20:31Z",
				"message": "build: docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-11T22:19:32Z",
				"message": "fix(client): message rendering + context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-11T22:19:06Z",
				"message": "fix(lib): observable not working",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-09T22:53:38Z",
				"message": "feat(client): add electron packager",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-09T00:07:33Z",
				"message": "fix: use new lib structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-07T20:40:36Z",
				"message": "feat(client): use new structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-07T20:40:27Z",
				"message": "fix(lib): restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-07T08:01:52Z",
				"message": "rewrite(lib,client): the entire structure with a fast custom database loader\nreduced library codebase by half\nsimplified logic",
				"messageBody": "… loader\n\nreduced library codebase by half\nsimplified logic"
			},
			{
				"committedDate": "2022-12-07T04:11:57Z",
				"message": "style: rename .getID() -> .id",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-07T01:02:30Z",
				"message": "feat(client): discord video support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-07T01:02:08Z",
				"message": "feat(client): call UI",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-06T01:32:08Z",
				"message": "-",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-06T01:29:03Z",
				"message": "feat(client, lib): discord video support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T22:35:43Z",
				"message": "perf(client): improve message rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T02:14:14Z",
				"message": "build: docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T02:12:27Z",
				"message": "perf(lib): improve database handling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T02:12:27Z",
				"message": "fix(lib): make discord call more resilient",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T02:12:27Z",
				"message": "style(client): clean up",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T02:12:27Z",
				"message": "feat(client): show parent chat in header",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T02:12:27Z",
				"message": "fix(client): auth",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-04T02:12:27Z",
				"message": "feat(client): chats overview rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-02T18:43:15Z",
				"message": "feat(client): useAutorun mobx and remove react context",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-02T18:42:33Z",
				"message": "feat(client): unread message counter",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-01T23:09:04Z",
				"message": "feat(client): message send animation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-01T10:33:08Z",
				"message": "feat(client): open chat when notification pressed",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-01T10:32:20Z",
				"message": "perf(client): reduce renderings, when sending a message",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-30T22:06:32Z",
				"message": "fix(notify/discord/js): use own shard implementation instead of unreliable mongodb connection",
				"messageBody": "…iable mongodb connection"
			},
			{
				"committedDate": "2022-11-30T19:06:48Z",
				"message": "fix(notify/discord/js): manager",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-29T20:54:31Z",
				"message": "feat(client): add ios voip call handler",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-29T20:54:22Z",
				"message": "feat(notify/discord): add call voip notification",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-28T18:17:51Z",
				"message": "fix(notify/provider): allow push + voip token registration in one request",
				"messageBody": "…uest"
			},
			{
				"committedDate": "2022-11-28T16:28:40Z",
				"message": "fix(server): docker registry image",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-28T16:19:40Z",
				"message": "fix(notify/discord/js): send notification wrong endpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-24T21:28:19Z",
				"message": "fix(notify/server): update docker compose",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T19:01:00Z",
				"message": "fix(notify): load docker secrets into env var",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T17:48:33Z",
				"message": "fix(server): deploy",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T17:34:34Z",
				"message": "fix(notify/discord): improve error handling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T13:32:24Z",
				"message": "wip(notify/discord): rewrite to rust threads",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T01:05:41Z",
				"message": "fix(notify/docker)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T00:57:27Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T00:38:19Z",
				"message": "fix: make notification.sh exec",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-23T00:36:59Z",
				"message": "feat(notify/provider): add stats routes",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-22T16:45:36Z",
				"message": "fix(server): port",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-22T16:42:22Z",
				"message": "fix(client): dev mode",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-22T15:54:24Z",
				"message": "feat(client): notification profile picture",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-22T15:22:48Z",
				"message": "wip(client): communication notification with pfp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T23:28:01Z",
				"message": "feat(lib,client): push notification registration",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T23:27:45Z",
				"message": "fix(notify/discord): push notification sending",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T22:42:36Z",
				"message": "feat(notify/discord): handle delete",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T22:23:33Z",
				"message": "feat(notify): Dockerfile + compose",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T20:16:04Z",
				"message": "feat(notify/provider): register api routes",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-21T20:16:04Z",
				"message": "feat(notify/discord.js): discord connection + worker db lock",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-20T17:02:20Z",
				"message": "rename: server -> notification-provider & websocket-relay -> notification-relay-discord",
				"messageBody": "…tion-relay-discord"
			},
			{
				"committedDate": "2022-11-20T16:03:53Z",
				"message": "wip(lib): discord video call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-20T16:03:53Z",
				"message": "feat(server): rewrite notification provider: use fastify + clean up",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-17T23:53:38Z",
				"message": "feat(client): call UI",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-17T22:02:06Z",
				"message": "feat(lib): discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-16T22:01:24Z",
				"message": "wip(lib): discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-15T20:30:47Z",
				"message": "wip(lib): discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-11T19:29:19Z",
				"message": "wip(lib): discord call - functional two way",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-08T21:58:19Z",
				"message": "wip(server): notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-07T20:21:06Z",
				"message": "fix(lib): rss feed",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-07T19:59:03Z",
				"message": "update(client): react-native@0.70.4",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-07T19:58:47Z",
				"message": "perf(lib): remove typeorm and use custom sql wrapper",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-30T20:48:03Z",
				"message": "style: clean up unused code",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-30T20:47:44Z",
				"message": "feat(lib): working discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-25T20:13:39Z",
				"message": "style(lib): rename providers.providers -> providers.cache & .map() & .forEach",
				"messageBody": "….forEach"
			},
			{
				"committedDate": "2022-10-23T20:14:55Z",
				"message": "style: remove logs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-23T20:14:43Z",
				"message": "wip(lib): whatsapp image upload",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-23T20:13:15Z",
				"message": "build(client): update react-native@0.70.3 and react@18.1.0",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-12T15:08:20Z",
				"message": "fix(lib): discord build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T21:38:56Z",
				"message": "feat(client): changed header color + styles",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T21:38:38Z",
				"message": "feat(lib): whatsapp show contact name",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T21:38:16Z",
				"message": "feat(client): chat description screen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T20:09:03Z",
				"message": "wip(client): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T20:08:42Z",
				"message": "feat(lib): discord image sending",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T20:08:12Z",
				"message": "feat(client): better chat + attachment view",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T20:07:49Z",
				"message": "feat(client): image sending",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-11T20:06:51Z",
				"message": "feat(client): context menu design",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-10T21:29:20Z",
				"message": "refactor(client): rename chat.favorite -> chat.pinned",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-10T21:28:51Z",
				"message": "feat(client): image sending",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-10T19:25:49Z",
				"message": "fix(lib): double display of discord message",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-10T17:58:46Z",
				"message": "feat(client): consistent chats list rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-10T17:58:46Z",
				"message": "feat(client): context menu for desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-08T17:49:31Z",
				"message": "wip(client): discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-06T15:23:53Z",
				"message": "fix(client): message rendering over screen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-06T15:23:41Z",
				"message": "fix(client): chats list ordering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-06T10:58:56Z",
				"message": "style: reformat",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-06T10:58:25Z",
				"message": "fix(client): building",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-06T10:58:03Z",
				"message": "perf(lib, client): chat loading",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-05T19:42:31Z",
				"message": "wip(lib): discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-03T14:58:21Z",
				"message": "wip(lib): discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-03T14:57:03Z",
				"message": "fix(client): instagram auth",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-03T13:07:29Z",
				"message": "wip(lib): discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-03T13:07:29Z",
				"message": "fix(lib): rss feed",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-03T13:07:29Z",
				"message": "style: format files",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-03T13:07:12Z",
				"message": "feat(ios): launch screen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-03T13:07:12Z",
				"message": "fix(client): Closes [Bug] Chats Sidebar doesn't load at first router state #2",
				"messageBody": "…state #2"
			},
			{
				"committedDate": "2022-10-02T20:56:52Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-02T20:54:18Z",
				"message": "feat(client): add windows platform",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-02T18:52:52Z",
				"message": "fix(lib): rss tes.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-02T17:25:31Z",
				"message": "docs(lib)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-01T22:29:36Z",
				"message": "fix(client): instagram login",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-01T12:10:59Z",
				"message": "fix(lib): chat icon",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-30T20:12:22Z",
				"message": "ci: run unit tests every hour",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-30T20:10:30Z",
				"message": "fix(lib): rss build error",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-30T20:09:13Z",
				"message": "fix(client): do not open dev tools",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-30T20:09:13Z",
				"message": "fix(lib): whatsapp + discord unit tests",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-30T20:08:45Z",
				"message": "feat(lib): whatsapp register kaios",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-30T13:31:00Z",
				"message": "fix(client): discord auth connection issue",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-29T10:10:59Z",
				"message": "fix(client): electron discord login",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-28T22:22:31Z",
				"message": "fix(client): electron discord login",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-28T22:22:11Z",
				"message": "fix(client): icon loading",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:56:20Z",
				"message": "chore(client): logs + rename",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:55:36Z",
				"message": "fix(client): desktop image rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:55:21Z",
				"message": "fix(client): context menu ios",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:54:41Z",
				"message": "update(client): ios modules",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:54:16Z",
				"message": "fix(client): android build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:54:03Z",
				"message": "fix(discord): mesage fetching + authenticatino",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:52:56Z",
				"message": "perf(client): improve messages render performance",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:52:06Z",
				"message": "fix(client): macos catalyst safe area",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-25T12:50:20Z",
				"message": "fix(client): desktop electron support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-12T14:44:37Z",
				"message": "fix(lib): jsx",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-12T14:44:24Z",
				"message": "feat(lib): use jsx syntax for whatsapp xml nodes",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-11T19:30:43Z",
				"message": "feat(client): desktop support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-06T09:40:44Z",
				"message": "feat(web): add fast refresh",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-05T21:25:33Z",
				"message": "rename mobile -> client (for ios, android, macos, windows, linux)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-05T21:10:12Z",
				"message": "fix(mobile): web",
				"messageBody": ""
			},
			{
				"committedDate": "2022-09-05T19:41:47Z",
				"message": "fix(mobile): chat",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-31T11:10:29Z",
				"message": "fix(mobile): web",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-30T22:49:36Z",
				"message": "fix(mobile): web support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-30T16:48:14Z",
				"message": "feat(lib): clean up functions",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-30T16:48:04Z",
				"message": "feat(docs): contribution + lib",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-30T10:44:57Z",
				"message": "feat(mobile): chat indicators WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-30T10:44:45Z",
				"message": "feat(docs): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-30T10:44:27Z",
				"message": "fix(lib): whatsapp group messages",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-30T10:43:23Z",
				"message": "chore: delete old files",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-28T23:07:18Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-28T23:05:24Z",
				"message": "fix(lib): whatsapp metrics",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-26T15:49:36Z",
				"message": "feat(docs): whatsapp metrics",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-25T20:57:15Z",
				"message": "feat(mobile): chats + message",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-25T20:56:56Z",
				"message": "fix(lib): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-25T20:55:37Z",
				"message": "feat(docs): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-20T17:39:11Z",
				"message": "feat(mobile): whatsapp notification WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-19T16:49:21Z",
				"message": "feat(mobile): swift whatsapp client",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-19T16:48:55Z",
				"message": "fix(mobile): git",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-19T16:46:52Z",
				"message": "feat(mobile): whatsapp notification handler",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-19T16:46:02Z",
				"message": "feat(mobile): app header",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-19T16:45:25Z",
				"message": "feat(lib): use js only library",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-19T16:44:42Z",
				"message": "feat(server): whatsapp notification handler WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-19T16:44:13Z",
				"message": "feat(docs): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-09T20:25:33Z",
				"message": "feat(docs): apk source code transpiler",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-09T19:56:56Z",
				"message": "fix(lib): crypto, pubkey.slice(1)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-09T19:56:32Z",
				"message": "feat(docs): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-06T01:00:35Z",
				"message": "fix(docs): style",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-06T00:57:55Z",
				"message": "fix(docs): styles",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-06T00:51:55Z",
				"message": "docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-06T00:51:29Z",
				"message": "fix(mobile): android build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-06T00:51:18Z",
				"message": "fix(lib): whatsapp connection",
				"messageBody": ""
			},
			{
				"committedDate": "2022-08-06T00:50:51Z",
				"message": "feat(docs): add whatsapp docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T23:41:23Z",
				"message": "chore(mobile)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T23:40:53Z",
				"message": "fix(mobile): chat navigation gesture",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T23:40:37Z",
				"message": "fix(mobile): message error boundary",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T23:40:13Z",
				"message": "feat(lib): category label",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T23:39:41Z",
				"message": "feat(mobile): chat community view for discord servers",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T12:09:49Z",
				"message": "chore(mobile)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T12:09:31Z",
				"message": "perf(mobile): improve message chat render performance",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T12:09:01Z",
				"message": "feat(lib): dynamic state change for mobile",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-23T12:08:24Z",
				"message": "feat(mobile): chat gallery view",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-21T19:48:32Z",
				"message": "chore: update",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-21T19:48:26Z",
				"message": "feat(mobile): settings page (customization, accounts)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-21T19:48:04Z",
				"message": "feat(mobile): chat message screen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-21T19:47:30Z",
				"message": "feat(mobile): chats dynamic updates",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-21T19:46:56Z",
				"message": "feat(mobile): improved authentication screen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-21T19:46:29Z",
				"message": "docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-21T19:46:22Z",
				"message": "perf(lib): batch updates on connection into on rerender",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-18T17:30:03Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-18T17:30:01Z",
				"message": "feat(mobile): messages + chat input",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-18T17:29:22Z",
				"message": "feat(mobile): customization",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-18T11:28:07Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-18T11:28:04Z",
				"message": "fix(lib): messages mobx",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-18T11:27:45Z",
				"message": "disable ci",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-15T05:40:14Z",
				"message": "feat(mobile): chats page",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-03T22:19:49Z",
				"message": "feat(mobile): demo account",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-03T17:09:41Z",
				"message": "feat(mobile): whatsapp authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-03T17:09:33Z",
				"message": "feat(lib): webcrypto functions",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-28T01:31:34Z",
				"message": "feat(mobile): router",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-28T01:31:24Z",
				"message": "fix(lib): compile",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-28T01:31:10Z",
				"message": "feat(mobile): components",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-28T01:30:56Z",
				"message": "feat(mobile): whatsapp auth WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-25T17:52:38Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-25T17:52:17Z",
				"message": "feat(mobile): authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-25T17:51:57Z",
				"message": "fix(mobile): bigint",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-25T15:16:37Z",
				"message": "fix(mobile): build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-22T00:30:33Z",
				"message": "fix(lib): bundling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-22T00:30:24Z",
				"message": "perf(lib): reduce proto size",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-22T00:30:06Z",
				"message": "fix(client): building",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-22T00:29:37Z",
				"message": "feat(client): introduction screen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-19T09:24:56Z",
				"message": "fix(lib): test",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-19T09:22:24Z",
				"message": "refactor(app): fabric arch + hermes js engine + new structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-14T00:57:46Z",
				"message": "wip(client): new lib",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-14T00:57:32Z",
				"message": "fix(lib): circular imports",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-14T00:57:17Z",
				"message": "perf(lib): improve database performance",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-14T00:57:02Z",
				"message": "fix(lib): discord event handling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-14T00:56:46Z",
				"message": "chore(lib): core lib in sub dir",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-14T00:56:17Z",
				"message": "fix(lib): tests",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-12T21:15:25Z",
				"message": "fix(lib): types",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-12T17:39:29Z",
				"message": "feat(lib): discord event handling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-12T14:23:47Z",
				"message": "feat(lib): storage delete handlers",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-11T12:37:34Z",
				"message": "feat(lib): storage delete handlers",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-11T12:35:08Z",
				"message": "feat(lib): discord event handling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-11T11:40:37Z",
				"message": "feat(lib): strict type checking",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-10T22:09:12Z",
				"message": "feat(lib): discord + message",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-10T08:31:23Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-10T08:31:05Z",
				"message": "fix(lib): whatsapp remove md device",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-10T07:27:01Z",
				"message": "fix(app): database",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-09T23:04:46Z",
				"message": "refactor(client): use new lib structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-09T20:20:17Z",
				"message": "Update test.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-09T20:18:49Z",
				"message": "refactor(lib)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-09T11:15:02Z",
				"message": "feat(lib): whatsapp group message sending + receiving",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-08T18:35:38Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-08T18:35:22Z",
				"message": "restructure(lib): use libsignal-protocol-javascript instead of @signalapp/libsignal-client",
				"messageBody": "…lapp/libsignal-client"
			},
			{
				"committedDate": "2022-06-06T14:37:36Z",
				"message": "feat(lib): core interfaces with typed event emitter",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-06T12:56:27Z",
				"message": "feat(lib): core interfaces",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-06T12:56:18Z",
				"message": "feat(lib): whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-06T12:55:55Z",
				"message": "feat(lib): data store",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-06T12:55:47Z",
				"message": "refactor(lib): discord",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-06T11:53:47Z",
				"message": "refactor(lib): new interfaces",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-06T11:52:41Z",
				"message": "upload: proto",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-01T21:30:10Z",
				"message": "feat(lib): whatsapp group message decryption",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-30T22:50:45Z",
				"message": "feat(lib): whatsapp data structures",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-30T22:50:34Z",
				"message": "feat(lib): whatsapp message handling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-30T22:50:12Z",
				"message": "chore(lib): rename handlers + stores",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-30T22:49:21Z",
				"message": "feat(lib): signal proto",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-23T22:49:42Z",
				"message": "feat(lib): whatsapp message receiving + sending",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-23T22:49:30Z",
				"message": "feat(lib): signal stores",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-23T22:49:16Z",
				"message": "feat(whatsapp): whatsapp event handler",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-20T23:05:47Z",
				"message": "fix(lib): whatsapp framing",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-20T21:37:59Z",
				"message": "fix(lib): whatsapp send/recv",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-15T21:09:07Z",
				"message": "feat(lib): whatsapp connection authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-15T01:34:19Z",
				"message": "feat(lib): whatsapp connection",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-15T01:34:09Z",
				"message": "chore(lib): whatsapp + web",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-15T01:33:30Z",
				"message": "feat(lib): whatsapp proto",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-15T01:33:21Z",
				"message": "feat(lib): whatsapp registration",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-23T22:56:10Z",
				"message": "fix(documentation): logo + colors",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-23T22:39:11Z",
				"message": "feat(documentation): whatsapp registration",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-23T12:16:37Z",
				"message": "feat(library): whatsapp registration finished",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-22T22:01:46Z",
				"message": "feat(mobile): improve chats",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-22T22:01:19Z",
				"message": "feat(library): whatsapp registration WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-22T12:21:26Z",
				"message": "feat(server): phone number lookup",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T23:18:07Z",
				"message": "fix(mobile): new chat structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T23:17:50Z",
				"message": "fix(library): new chat hierarchy",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T21:23:25Z",
				"message": "feat(library): remove channel data structure and use chat instead",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T18:07:37Z",
				"message": "fix(mobile): channel renavigate on app open",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T16:47:49Z",
				"message": "feat(mobile): message reply gesture",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T15:18:39Z",
				"message": "fix(mobile): not more than 4 reactions visible",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T15:18:14Z",
				"message": "fix(mobile): channel and chats order",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T15:00:44Z",
				"message": "style(mobile): change icon",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T15:00:28Z",
				"message": "fix(mobile): android startup crash",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T14:57:55Z",
				"message": "fix(mobile): android crash on startup",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T14:57:29Z",
				"message": "chore(mobile)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T14:57:09Z",
				"message": "fix(mobile): crash on discord embed",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T14:56:49Z",
				"message": "feat(mobile): improve photo view",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-21T09:22:48Z",
				"message": "fix(client): input panel - animation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-20T17:22:45Z",
				"message": "chore(library): rename @trant/app -> @trant/core",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-20T16:47:01Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-20T16:33:05Z",
				"message": "ci(library): only run tests on lib change",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-20T16:08:53Z",
				"message": "fix(client): input bar padding",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-20T15:54:05Z",
				"message": "fix(client): photo/attachment view",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-19T09:27:09Z",
				"message": "fix(desktop): discord qr code + baileys",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-19T09:08:21Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-19T09:07:21Z",
				"message": "feat(client): WIP send animation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-18T22:34:36Z",
				"message": "feat(library): added tests",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-18T21:47:22Z",
				"message": "chore: rename client to mobile + delete windows reactnative",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-18T19:20:55Z",
				"message": "docs(library): update",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-18T19:20:33Z",
				"message": "fix(library): remove external dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-17T12:25:11Z",
				"message": "fix(client): array map",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-17T12:24:59Z",
				"message": "feat(lib): documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-15T23:48:28Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-15T23:48:26Z",
				"message": "feat(client): @trant/app library extract",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-14T22:45:07Z",
				"message": "fix(client): android",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-14T22:28:29Z",
				"message": "fix(client): android",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-14T22:20:02Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-14T22:20:00Z",
				"message": "fix(client): android build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-14T10:06:34Z",
				"message": "feat(client): status",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-14T10:06:25Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-14T09:57:46Z",
				"message": "fix(client): styles",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-12T14:20:40Z",
				"message": "fix(client): placeholder only one line",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-11T19:21:58Z",
				"message": "feat(client): custom emoji input",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-10T20:52:19Z",
				"message": "feat(client): image upload",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-03T22:15:28Z",
				"message": "ci(client): disable checks",
				"messageBody": ""
			},
			{
				"committedDate": "2022-04-03T22:10:52Z",
				"message": "feat(client): whatsapp basic message support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-30T21:41:14Z",
				"message": "feat(client): WIP whatsapp chats",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-29T20:14:17Z",
				"message": "feat(server): WIP voip",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-29T19:59:31Z",
				"message": "feat(client): WIP incoming call UI",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-29T19:59:18Z",
				"message": "feat(server): VOIP notification",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-27T17:06:14Z",
				"message": "feat(client): open attachments in fullscreen",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T21:47:15Z",
				"message": "fix(client): notification",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T18:38:40Z",
				"message": "ci(client): disable auto build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T18:13:06Z",
				"message": "ci(client): sign notification",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T17:29:18Z",
				"message": "ci(client): -allowProvisioningUpdates",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T17:20:11Z",
				"message": "ci",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T17:19:58Z",
				"message": "ci(client): install dependencies + setup signing",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T17:04:58Z",
				"message": "ci(client): fix",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T17:01:38Z",
				"message": "ci(client): notification profile",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T16:10:49Z",
				"message": "ci(client): signing",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T16:06:50Z",
				"message": "ci(client): setup dev team",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T15:35:45Z",
				"message": "perf(client): improve createElement performance",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T15:35:23Z",
				"message": "perf(client): improve app startup time",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T15:35:03Z",
				"message": "feat(client): change navigation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-26T15:34:45Z",
				"message": "ci(client): WIP build ipa",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:47:49Z",
				"message": "fix(tests): mock expo-device module",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:45:50Z",
				"message": "feat(client): windows, optional gesture handler",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:39:06Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:39:05Z",
				"message": "perf(client): remove and replace outdated libraries",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:38:39Z",
				"message": "feat(client): WIP message + camera input",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:38:22Z",
				"message": "style(client): change logo + color",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:37:04Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-25T13:37:00Z",
				"message": "feat(client): whatsapp WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-21T18:12:10Z",
				"message": "refactor",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-21T18:11:59Z",
				"message": "feat(client): context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-21T18:11:35Z",
				"message": "feat(client): WIP camera",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-21T18:11:08Z",
				"message": "feat(client): message reply design",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-16T21:35:12Z",
				"message": "feat(client): WIP camera + asset input",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-15T22:29:50Z",
				"message": "feat(client): WIP image sending",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-12T23:52:02Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-12T23:51:29Z",
				"message": "feat(client): render replies",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-12T13:36:03Z",
				"message": "feat(client): scroll to dismiss keyboard",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-11T10:12:27Z",
				"message": "feat(client): whatsapp lib WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-10T22:00:13Z",
				"message": "fix(client): discord login + notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-10T21:59:50Z",
				"message": "feat(client): whatsapp lib WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-10T10:11:31Z",
				"message": "feat(client): whatsapp lib WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-09T21:36:31Z",
				"message": "style(client): chat",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-08T21:20:14Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-08T21:19:46Z",
				"message": "fix(client): baileys",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-08T21:19:18Z",
				"message": "style(client): sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-08T21:18:40Z",
				"message": "feat(whatsapp): data WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-08T21:18:00Z",
				"message": "feat(client): whatsapp web authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-08T21:17:40Z",
				"message": "feat(client): permission system",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-05T11:34:56Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-05T11:31:54Z",
				"message": "fix(client): windows",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-05T00:16:52Z",
				"message": "fix(client): channel scroll on new message",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-05T00:16:33Z",
				"message": "fix(client): trant authentication page",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-05T00:16:17Z",
				"message": "feat(client): mention input",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-03T23:35:17Z",
				"message": "feat(client): WhatsApp message E2EE",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-03T22:23:16Z",
				"message": "refactor(client): imports + logs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-03T22:22:46Z",
				"message": "feat(client): whatsapp websocket",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-03T22:22:24Z",
				"message": "feat(client): mock whatsapp node imports",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-03T22:21:50Z",
				"message": "fix(client): import paths",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-03T22:19:59Z",
				"message": "feat(client): WhatsApp connection",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-03T21:35:42Z",
				"message": "perf(client): channel navigation huge performance improvement",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-02T11:25:55Z",
				"message": "fix(client): test",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-02T11:25:22Z",
				"message": "feat(server): whatsapp lightweight encrypted notification handler WIP",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T19:18:41Z",
				"message": "refactor(client): restructure components and pages",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T16:53:50Z",
				"message": "refactor(client): adjust styles",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T16:53:19Z",
				"message": "fix(client): scaling",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T16:53:07Z",
				"message": "fix(client): rendering emoji not in full size",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T16:52:38Z",
				"message": "refactor(client): split up channel component in Header + Input + Page",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T01:34:30Z",
				"message": "refactor(client)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T01:34:03Z",
				"message": "feat(client): display message time",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T01:33:33Z",
				"message": "feat(client): day indicator on scroll",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-01T01:33:05Z",
				"message": "feat(client): mentions + custom emojis",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-28T17:57:31Z",
				"message": "refactor(client): WIP data structure update if already exist",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-28T17:56:53Z",
				"message": "feat(client): keep channel scroll position and draft message input",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-28T00:00:02Z",
				"message": "fix(client): attachment rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T23:59:39Z",
				"message": "refactor(client): remove unused dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:54:12Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:53:35Z",
				"message": "feat: WIP twitter",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:46:31Z",
				"message": "test(client): remove test file",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:43:41Z",
				"message": "feat(client): drawer navigation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:42:51Z",
				"message": "fix(client): load data structure from cache + update on ready",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:42:26Z",
				"message": "feat(client): scaling support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:40:57Z",
				"message": "feat(client): render discord embeds",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-27T18:40:46Z",
				"message": "feat(client): image max width/height",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-26T12:58:47Z",
				"message": "refactor(client): rename colors to theme",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-26T00:17:52Z",
				"message": "feat(client): new navigation + cleaned up structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T18:22:16Z",
				"message": "test(client): added tests for events and data structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T17:45:05Z",
				"message": "fix(client): unit test",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T17:38:06Z",
				"message": "refactor(client): change component structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T14:57:11Z",
				"message": "refactor(client): split discord provider into multiple files",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T13:40:19Z",
				"message": "feat(client): WIP new navigation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T13:39:58Z",
				"message": "fix(client): remove message animation on load/channel open",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T13:39:17Z",
				"message": "feat(client): custom drawer position",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-25T13:38:46Z",
				"message": "refactor(client): Discord provider outsourcing constructor to patch function",
				"messageBody": "…unction"
			},
			{
				"committedDate": "2022-02-23T22:48:51Z",
				"message": "feat(client): drawer guild page",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-22T22:26:34Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-22T22:26:32Z",
				"message": "feat(client): reworked chats page",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T21:10:35Z",
				"message": "fix(server): WIP whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T21:09:26Z",
				"message": "fix(server): WIP whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T20:45:20Z",
				"message": "fix(server): handle discord token reset",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T17:25:15Z",
				"message": ":bug: fix CI/CD",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T17:22:26Z",
				"message": ":bug: fix CI/CD",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T17:21:26Z",
				"message": ":white_check_mark: CI/CD tests",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T17:13:37Z",
				"message": ":white_check_mark: message unit tests",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T16:52:09Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T16:52:06Z",
				"message": ":white_check_mark: send message test",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T16:31:47Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T16:31:18Z",
				"message": ":bug: fix jest",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T15:38:35Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T15:38:07Z",
				"message": ":bug: fix test",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-21T15:27:52Z",
				"message": ":white_check_mark: setup jest unit tests",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-20T23:44:23Z",
				"message": ":sparkles: keep and restore last channel of guild",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-20T23:33:21Z",
				"message": ":bug: server notification",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-20T23:33:09Z",
				"message": ":construction: whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-20T23:32:49Z",
				"message": "scale UI on desktop",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-20T23:32:41Z",
				"message": "pinnned + community chat list",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-19T09:32:39Z",
				"message": ":art: docs styles",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-18T22:54:53Z",
				"message": ":pencil: example",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-18T22:51:57Z",
				"message": ":tada: whatsapp registration backup_token",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-18T18:23:19Z",
				"message": ":pencil: update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-18T18:15:45Z",
				"message": ":pencil: update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-17T21:13:27Z",
				"message": ":construction: whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-17T21:12:24Z",
				"message": ":sparkles: crash page",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-14T16:48:07Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-14T16:46:51Z",
				"message": ":construction: whatsapp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-14T16:46:44Z",
				"message": ":mute: remove console.log",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-14T16:45:16Z",
				"message": ":sparkles: reload messages on open",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T23:52:03Z",
				"message": ":sparkles: cache messages",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T20:47:54Z",
				"message": ":bug: fix android",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T20:46:18Z",
				"message": ":sparkles: multiple notification targets",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T12:35:01Z",
				"message": ":bug: fix(server): message group icon",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T12:33:27Z",
				"message": ":bug: fix(server): mentions message create",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T12:31:15Z",
				"message": ":sparkles: group chat icon + channel",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T10:28:08Z",
				"message": ":art: 404 server handler",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T01:53:03Z",
				"message": ":bug: fix(server)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T01:51:18Z",
				"message": ":bug: fix server",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T01:26:07Z",
				"message": ":sparkles: open chat on notification click (when app was terminated)",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T00:11:34Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T00:11:02Z",
				"message": ":art: show attachment image preview",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T00:10:42Z",
				"message": "restore previous screen on startup",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-12T00:10:25Z",
				"message": ":zap: enable cache",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-10T19:51:19Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-10T19:50:27Z",
				"message": ":sparkles: notification avatar image",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-10T19:50:14Z",
				"message": ":sparkles: notification avatar image",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-08T22:55:46Z",
				"message": ":sparkles: context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-08T22:04:47Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T22:52:30Z",
				"message": ":sparkles: optimistic message sending",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T22:22:24Z",
				"message": ":construction: embed",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T22:21:20Z",
				"message": ":sparkles: notification",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T22:20:51Z",
				"message": ":sparkles: layout animation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T22:20:39Z",
				"message": ":sparkles: unread messages",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T15:28:37Z",
				"message": ":bug: fix double entries in chat",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T15:28:01Z",
				"message": ":mute: remove console.logs",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T15:27:06Z",
				"message": "fix channel + chat ordering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-07T02:52:08Z",
				"message": ":sparkles: [notifications] respect muted channels + update/delete notifications",
				"messageBody": "…ifications"
			},
			{
				"committedDate": "2022-02-06T23:14:20Z",
				"message": ":sparkles: notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-06T11:47:48Z",
				"message": ":zap: benchmark",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T23:29:54Z",
				"message": ":construction: notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T23:29:34Z",
				"message": ":bug: fixed chats tabbar color",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T23:29:17Z",
				"message": ":bug: fixed call menu",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T23:29:02Z",
				"message": ":art: message syntax style",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T23:28:47Z",
				"message": ":sparkles: disabled button state",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T23:28:23Z",
				"message": ":pencil: schema",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-03T15:47:05Z",
				"message": ":bug: fix textencoder",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-03T13:56:55Z",
				"message": "Merge branches 'main' and 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": "…t-app into main"
			},
			{
				"committedDate": "2022-02-03T13:56:28Z",
				"message": ":construction: Notifications",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-03T13:56:23Z",
				"message": ":sparkles: code syntax highlighting",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-03T13:53:02Z",
				"message": ":bug: call fix menu",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-03T13:52:51Z",
				"message": ":bug: fix web",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-02T19:04:12Z",
				"message": ":sparkles: LaTex support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-02T18:29:40Z",
				"message": ":sparkles: improve markdown rendering + render unicode as punycode",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-02T16:35:58Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-02T16:35:35Z",
				"message": ":bug: fix message height",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-02T16:35:01Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-02T16:34:30Z",
				"message": ":sparkles: message formatting - markdown support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-01T18:57:54Z",
				"message": ":sparkles: Call UI",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-30T22:31:06Z",
				"message": ":sparkles: fully working discord voice chat",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-30T21:35:10Z",
				"message": ":sparkles: double click message to edit",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-30T21:34:59Z",
				"message": ":bug: fix message invisibility on call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-30T21:34:12Z",
				"message": ":bug: fix web",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-29T15:03:38Z",
				"message": ":sparkles: permission request",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-28T22:47:40Z",
				"message": ":bug: fix icon color",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-28T22:47:29Z",
				"message": ":construction: discord voice receiving connection",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-28T08:59:02Z",
				"message": ":sparkles: message gradient scroll view",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-28T08:58:53Z",
				"message": ":sparkles: finished data provider: convert arrays to sets",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-26T23:47:52Z",
				"message": ":construction: rewrite data provider",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-26T23:47:39Z",
				"message": ":construction: rewrite data provider",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-24T21:07:15Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-24T21:07:12Z",
				"message": ":sparkles: desktop view",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-23T20:37:22Z",
				"message": ":sparkles: web support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-22T23:59:02Z",
				"message": ":sparkles: chat header",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-22T23:58:53Z",
				"message": ":construction: call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-20T08:32:16Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-20T08:32:10Z",
				"message": ":bug: windows support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:54:08Z",
				"message": ":art: structure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:53:52Z",
				"message": ":art: message design",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:53:32Z",
				"message": ":construction: discord call",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:52:55Z",
				"message": ":sparkles: Theme Settings",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:52:27Z",
				"message": ":art: component overhaul",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:52:12Z",
				"message": ":art: new header bar",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:51:58Z",
				"message": ":sparkles: improved chat navigation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-19T21:51:38Z",
				"message": ":sparkles: channel icons",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-12T23:16:42Z",
				"message": ":construction: search",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-11T21:09:49Z",
				"message": "Merge branch 'main' of https://github.com/trantlabs/trant-app into main",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-11T21:08:45Z",
				"message": ":sparkles: windows",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-11T21:07:46Z",
				"message": ":art: restructure Theme usage",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-09T22:04:49Z",
				"message": ":art: redesigned introduction",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T18:00:31Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T17:59:46Z",
				"message": ":sparkles: Chats tabbar",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T17:59:21Z",
				"message": ":construction: Settings Page",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T17:59:07Z",
				"message": ":zap: improve performance",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T04:26:42Z",
				"message": ":sparkles: StatusBar Messages",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T04:23:55Z",
				"message": ":sparkles: StatusBar Messages",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T03:43:01Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T03:42:43Z",
				"message": ":construction: chat swiper",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T03:21:18Z",
				"message": "Revert \":construction: animated router\"\n\nThis reverts commit 101f5462faabd8ccc01e34686c1bc989f87c4b90.",
				"messageBody": "This reverts commit 101f5462faabd8ccc01e34686c1bc989f87c4b90."
			},
			{
				"committedDate": "2022-01-05T03:20:50Z",
				"message": "Revert \":zap: rewrite to react-router\"\n\nThis reverts commit ce6156aba54d0d77677686c019abccf0b380df45.",
				"messageBody": "This reverts commit ce6156aba54d0d77677686c019abccf0b380df45."
			},
			{
				"committedDate": "2022-01-05T03:14:57Z",
				"message": ":zap: rewrite to react-router",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-05T02:57:39Z",
				"message": ":construction: animated router",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T23:59:27Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T23:59:12Z",
				"message": ":sparkles: chat channel navigation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T23:00:44Z",
				"message": ":construction: BottomSheet",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T22:47:30Z",
				"message": ":sparkles: message delete animation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T22:46:58Z",
				"message": ":bug: convert svg to tsx for web support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T22:46:16Z",
				"message": ":construction: Channels screen skeleton",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T00:39:10Z",
				"message": ":sparkles: load old messages + improve message rendering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-04T00:38:37Z",
				"message": ":bug: fix web svg support",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-03T01:07:58Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-03T01:07:56Z",
				"message": ":bug: fix chat ordering",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-03T00:43:05Z",
				"message": ":art: revert dev",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-03T00:33:33Z",
				"message": ":sparkles: message context menu",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-03T00:33:23Z",
				"message": ":bug: fix android building",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-02T03:26:06Z",
				"message": ":sparkles: message attachments + header bar",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-01T02:00:34Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-01T01:59:44Z",
				"message": ":sparkles: navigation animations + back handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-31T13:01:28Z",
				"message": ":bug: fix #1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-31T00:11:47Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-31T00:10:22Z",
				"message": ":sparkles: finished chat logic",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-30T18:04:14Z",
				"message": ":sparkles: fix chats order",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-30T00:34:59Z",
				"message": ":sparkles: Discord connection + chats",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-29T22:03:46Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-29T22:03:44Z",
				"message": ":sparkles: Discord Authentication",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-29T14:08:41Z",
				"message": ":art: clean up introduction screen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-29T00:13:59Z",
				"message": ":sparkles: chats",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T23:46:13Z",
				"message": ":sparkles: Chats Page",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T23:46:04Z",
				"message": ":sparkles: svg support",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T23:45:39Z",
				"message": ":art: cleanup fonts",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T13:37:55Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T13:37:52Z",
				"message": ":heavy_plus_sign: font",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T11:14:10Z",
				"message": "Merge branch 'main' of https://github.com/trant-app/documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T11:14:07Z",
				"message": ":construction: authenticate",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T02:56:04Z",
				"message": ":sparkles: discord events",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-28T02:22:31Z",
				"message": ":sparkles: finished discord actions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-27T23:07:41Z",
				"message": ":sparkles: finish discord types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-27T21:53:10Z",
				"message": ":construction: :sparkles: Discord provider\n\nCo-authored-by: Conner <Intevel@users.noreply.github.com>",
				"messageBody": "Co-authored-by: Conner <Intevel@users.noreply.github.com>"
			},
			{
				"committedDate": "2021-12-26T23:12:12Z",
				"message": ":sparkles: app center",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-26T23:12:02Z",
				"message": ":construction: Discord provider",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-23T12:08:23Z",
				"message": ":art: restructure",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-22T23:03:21Z",
				"message": "jest",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-22T23:02:58Z",
				"message": "update",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-22T23:01:55Z",
				"message": ":art: reformat",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-22T21:39:38Z",
				"message": ":art: restructure + update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-20T10:29:21Z",
				"message": "update interfaces",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-19T23:36:17Z",
				"message": ":sparkles: Interfaces",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-19T22:40:44Z",
				"message": ":sparkles: upload providers",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-19T21:51:13Z",
				"message": ":sparkles: test schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-19T21:51:04Z",
				"message": ":lipstick: update styles",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-14T18:23:40Z",
				"message": ":pencil: docs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-14T18:22:25Z",
				"message": ":pencil: update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-14T18:20:12Z",
				"message": ":sparkles: init client",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-13T20:21:01Z",
				"message": ":pencil: readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-13T20:17:34Z",
				"message": ":pencil2: documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-12T21:51:23Z",
				"message": ":pencil2: update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-12-12T21:47:29Z",
				"message": ":tada: init",
				"messageBody": ""
			}
		],
		"commitSummary": "**Feature Enhancements**\n\n- Reactions and images for Skia DOM list\n- Improved lister renderer\n- Smoother message send animation\n- Swipe timestamp reveal\n- Chats folders with icons\n- Instagram and WhatsApp support\n- Discord channel rendering\n- Call UI and functionality\n- Context menus for desktop and mobile\n- Message copy and quotation features\n- Customization options\n- Emoji and mention support\n- Crash reports and analytics\n\n**Performance Improvements**\n\n- Zero allocations render\n- Improved chat loading\n- Faster SQLite database operations\n- Reduced proto size\n- Improved database performance\n- Reduced renderings on message sending\n- Message cache\n- Improved channel navigation performance\n\n**Libraries and Frameworks**\n\n- Update to React Native v0.70.4 and v0.75.2\n- MobX optimization\n- Switch to better-sqlite3\n- Vite instead of Webpack\n- Tauri support for desktop\n- Electron desktop support\n- Fastify for notification provider\n\n**User Interface**\n\n- Dark background color change\n- Chat header redesign\n- Clean up code and unused components\n- Rename colors to theme\n- New navigation and cleaned up structure\n\n**Notifications and Calls**\n\n- Notification server with APNS support\n- Notification registration\n- VOIP notification\n- Discord call functionality\n- Incoming call UI\n- Multiple notification targets\n\n**Database and Storage**\n\n- Drizzle DB optimizations and fixes\n- Drizzle ORM DB\n- Auto save entities\n- Strict type checking\n- Database transactions\n\n**Miscellaneous**\n\n- Improved markdown rendering\n- Code syntax highlighting\n- Permission system\n- Chats and messages swipe features"
	},
	{
		"id": "R_kgDOJJtHkg",
		"description": "Faster-MobX is a state management library that is 50-500x times faster than the observable implementation of MobX",
		"homepageUrl": "",
		"url": "https://github.com/respondchat/faster-mobx",
		"name": "faster-mobx",
		"nameWithOwner": "respondchat/faster-mobx",
		"owner": {
			"login": "respondchat"
		},
		"createdAt": "2023-03-15T02:16:41Z",
		"updatedAt": "2024-09-11T23:55:57Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/730e1ef202870c2e0b4cacde14d3f429b1075dad9c17c87cfb99ee1d4e0cb7d6/respondchat/faster-mobx",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 20645,
			"edges": [
				{
					"size": 20054,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 366,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				},
				{
					"size": 225,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 4,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOJJtHkrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 37
				}
			}
		},
		"object": {
			"text": "# Faster Mobx\n\nMobX is a state management library designed to notify observers of changes to an observable object's state.\n\nHowever, the `observable` function of MobX has performance issues when handling large amounts of objects with many properties.\n\nTo address this issue, the `faster-mobx` library has been developed, providing a **50-500x faster** `observable` implementation of MobX that can be used as a drop in replacement.\n\n## Features\n\n-   [x] `observable`\n-   [x] `makeObservable`\n-   [x] `autorun`\n-   [x] `reaction`\n-   [x] `runInAction` (with async support)\n-   [x] `observer` (React support)\n-   [x] `observable.map`\n-   [ ] `computed`\n-   [ ] `action`\n-   [ ] `toJS`\n-   [ ] `trace`\n\n## Installation\n\n```\n# with npm\nnpm i faster-mobx\n\n# with yarn\nyarn add faster-mobx\n\n# with pnpm\npnpm add faster-mobx\n```\n\n## Usage\n\n```js\nimport { observable, autorun, makeObservable } from \"faster-mobx\";\n\nconst data = observable({\n\tname: \"John\",\n\tage: 20,\n});\n\nautorun(() => {\n\tconsole.log(data.name);\n});\n\ndata.name = \"Jane\";\n\n// with classes\n\nclass User {\n\tname = \"John\";\n\tage = 20;\n\n\tconstructor() {\n\t\t// all properties will be observable\n\t\t// if you extend this class, you MUST NOT call makeObservable again in the child class\n\t\t// the return is important to make it reactive\n\t\treturn makeObservable(this);\n\t}\n}\n```\n\n## Benchmark\n\nBenchmark was done using [benchmark.js](https://benchmarkjs.com/) on a 3.20GHz CPU with one thread.\n\n| Function                       |     Mobx     | Faster Mobx | Speedup |\n| ------------------------------ | :----------: | :---------: | :-----: |\n| observable                     | 570k ops/sec | 33M ops/sec |   58x   |\n| makeObservable (1 property)    | 750k ops/sec | 33M ops/sec |   44x   |\n| makeObservable (26 properties) | 54k ops/sec  | 33M ops/sec |  611x   |\n| autorun                        | 12M ops/sec  | 6M ops/sec  |  0.5x   |\n| get                            | 23M ops/sec  | 55M ops/sec |  2.4x   |\n| set                            | 19M ops/sec  | 30M ops/sec |  1.6x   |\n\nYou can run the benchmark yourself by cloning the repo and running the following commands:\n\n```bash\ngit clone https://github.com/trantlabs/faster-mobx\ncd faster-mobx\nnpm install\nnpm run benchmark\n```\n"
		},
		"commits": [
			{
				"committedDate": "2024-09-11T23:55:49Z",
				"message": "v1.0.14",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-11T23:55:32Z",
				"message": "fix: isSame",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T12:51:43Z",
				"message": "v1.0.13",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-26T12:51:24Z",
				"message": "fix: map",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T17:41:52Z",
				"message": "v1.0.12",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-02T17:41:33Z",
				"message": "fix: react",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T11:22:22Z",
				"message": "v1.0.11",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T11:22:01Z",
				"message": "feat: export observable type",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-11T14:24:34Z",
				"message": "Merge pull request #1 from respondchat/update\n\nUpdate",
				"messageBody": "Update"
			},
			{
				"committedDate": "2024-04-11T14:22:35Z",
				"message": "v1.0.10",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-11T14:22:07Z",
				"message": "fix: rerendering",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-08T11:57:03Z",
				"message": "v1.0.9",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-08T11:56:41Z",
				"message": "fix: observable not working for subsequent updates",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-07T19:16:26Z",
				"message": "v1.0.8",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-07T19:15:40Z",
				"message": "perf: improved performance + only reactions that subscribed to exact key",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-27T23:43:43Z",
				"message": "fix: concurrent run of effects",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-07T00:59:19Z",
				"message": "feat: update",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-02T23:45:50Z",
				"message": "v1.0.5",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-02T23:45:14Z",
				"message": "fix: map only subscribe in effect if not already subscribed",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-02T23:44:14Z",
				"message": "fix: runInAction returnType",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-02T23:44:00Z",
				"message": "fix: make react optional",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-29T02:08:38Z",
				"message": "v1.0.4",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-29T01:20:09Z",
				"message": "feat: react observer component name",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-29T01:19:57Z",
				"message": "perf: optimize observable map for hermes",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-23T23:08:48Z",
				"message": "v1.0.3",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-23T23:08:48Z",
				"message": "feat: isSame check to only schedule update if objects differ",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-23T23:08:31Z",
				"message": "fix: observable being wrongfully tracked",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-22T23:52:23Z",
				"message": "perf: only change if value is different",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-16T18:56:11Z",
				"message": "v1.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-16T18:56:00Z",
				"message": "fix: observable wrongfully tracked",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-16T18:55:37Z",
				"message": "feat: react test",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-15T17:48:10Z",
				"message": "feat: subscribe to all properties of observable",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-15T17:47:48Z",
				"message": "fix: react observer",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-15T03:12:38Z",
				"message": "v1.0.1",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-15T03:12:02Z",
				"message": "feat: react observer",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-15T03:11:48Z",
				"message": "feat: observable map",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-15T02:15:49Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "**Features**\n\n1. React observer component name\n2. Export observable type\n3. IsSame check to only schedule update if objects differ\n4. Observable map\n5. React observer\n6. React test\n7. Subscribe to all properties of observable\n8. Update \n\n**Fixes**\n\n1. IsSame\n2. Map\n3. React\n4. Observable not working for subsequent updates\n5. Rerendering\n6. RunInAction returnType\n7. Observable being wrongfully tracked (twice)\n8. Concurrent run of effects\n9. MobX observer\n\n**Performance Improvements**\n\n1. Improved performance + only reactions that subscribed to exact key\n2. Optimize observable map for hermes\n3. Only change if value is different"
	},
	{
		"id": "R_kgDOLtsKhg",
		"description": "POC repo for examining calling go code from c++",
		"homepageUrl": "https://xnacly.me/posts/2024/go-cpp-interop/",
		"url": "https://github.com/respondchat/c-go-interop",
		"name": "c-go-interop",
		"nameWithOwner": "respondchat/c-go-interop",
		"owner": {
			"login": "respondchat"
		},
		"createdAt": "2024-04-13T12:59:51Z",
		"updatedAt": "2024-10-04T22:52:55Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/ddcbc7b8bf97540b12216cbca46293fcf3c9672376021140732fca1b1815c42f/respondchat/c-go-interop",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 1302,
			"edges": [
				{
					"size": 677,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				},
				{
					"size": 527,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 98,
					"node": {
						"color": "#427819",
						"name": "Makefile"
					}
				}
			]
		},
		"stargazerCount": 2,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLtsKhq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2024-10-04T22:52:50Z",
				"message": "Merge pull request #2 from respondchat/panic-null-http-get",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOLxOH6g",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/respondchat/instagram",
		"name": "instagram",
		"nameWithOwner": "respondchat/instagram",
		"owner": {
			"login": "respondchat"
		},
		"createdAt": "2024-04-21T16:02:20Z",
		"updatedAt": "2024-07-16T18:35:46Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/148276572?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 1933,
			"edges": [
				{
					"size": 1933,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLxOH6q9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOMNILlQ",
		"description": ":key: Keychain Access for React Native",
		"homepageUrl": "",
		"url": "https://github.com/respondchat/react-native-keychain",
		"name": "react-native-keychain",
		"nameWithOwner": "respondchat/react-native-keychain",
		"owner": {
			"login": "respondchat"
		},
		"createdAt": "2024-06-23T17:38:41Z",
		"updatedAt": "2024-06-23T17:42:06Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/5a4f354bd1a0823a051783962e6d7751b6686038bf58c0a0b5c86fd63544e507/respondchat/react-native-keychain",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 9,
			"totalSize": 248117,
			"edges": [
				{
					"size": 173889,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 27336,
					"node": {
						"color": "#438eff",
						"name": "Objective-C"
					}
				},
				{
					"size": 26908,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOMNILlbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "<h1 align=\"center\">react-native-keychain</h1>\n\n<p align=\"center\"><img\n    src=\"https://user-images.githubusercontent.com/378279/36642269-6195b10c-1a3d-11e8-9e1b-37a3d1bcf7b3.png\"\n    align=\"center\" width=\"150\" height=\"201\" alt=\"\"\n  />\n</p>\n\n[![Travis](https://img.shields.io/travis/oblador/react-native-keychain.svg)](https://travis-ci.org/oblador/react-native-keychain) [![npm](https://img.shields.io/npm/v/react-native-keychain.svg)](https://npmjs.com/package/react-native-keychain) [![npm](https://img.shields.io/npm/dm/react-native-keychain.svg)](https://npmjs.com/package/react-native-keychain)\n\n# Keychain/Keystore Access for React Native\n\n- [Keychain/Keystore Access for React Native](#keychainkeystore-access-for-react-native)\n  - [Installation](#installation)\n  - [Usage](#usage)\n  - [API](#api)\n    - [`setGenericPassword(username, password, [{ accessControl, accessible, accessGroup, service, securityLevel }])`](#setgenericpasswordusername-password--accesscontrol-accessible-accessgroup-service-securitylevel-)\n    - [`getGenericPassword([{ authenticationPrompt, service, accessControl }])`](#getgenericpassword-authenticationprompt-service-accesscontrol-)\n    - [`resetGenericPassword([{ service }])`](#resetgenericpassword-service-)\n    - [`getAllGenericPasswordServices()`](#getallgenericpasswordservices)\n    - [`setInternetCredentials(server, username, password, [{ accessControl, accessible, accessGroup, securityLevel }])`](#setinternetcredentialsserver-username-password--accesscontrol-accessible-accessgroup-securitylevel-)\n    - [`hasInternetCredentials(server)`](#hasinternetcredentialsserver)\n    - [`getInternetCredentials(server, [{ authenticationPrompt }])`](#getinternetcredentialsserver--authenticationprompt-)\n    - [`resetInternetCredentials(server)`](#resetinternetcredentialsserver)\n    - [`requestSharedWebCredentials()` (iOS and visionOS only)](#requestsharedwebcredentials-ios-and-visionos-only)\n    - [`setSharedWebCredentials(server, username, password)` (iOS and visionOS only)](#setsharedwebcredentialsserver-username-password-ios-and-visionos-only)\n    - [`canImplyAuthentication([{ authenticationType }])` (iOS and visionOS only)](#canimplyauthentication-authenticationtype--ios-and-visionos-only)\n    - [`getSupportedBiometryType()`](#getsupportedbiometrytype)\n    - [`getSecurityLevel([{ accessControl }])` (Android only)](#getsecuritylevel-accesscontrol--android-only)\n    - [Options](#options)\n      - [Data Structure Properties/Fields](#data-structure-propertiesfields)\n        - [`authenticationPrompt` Properties](#authenticationprompt-properties)\n      - [`Keychain.ACCESS_CONTROL` enum](#keychainaccess_control-enum)\n      - [`Keychain.ACCESSIBLE` enum](#keychainaccessible-enum)\n      - [`Keychain.AUTHENTICATION_TYPE` enum](#keychainauthentication_type-enum)\n      - [`Keychain.BIOMETRY_TYPE` enum](#keychainbiometry_type-enum)\n      - [`Keychain.SECURITY_LEVEL` enum (Android only)](#keychainsecurity_level-enum-android-only)\n      - [`Keychain.STORAGE_TYPE` enum (Android only)](#keychainstorage_type-enum-android-only)\n      - [`Keychain.SECURITY_RULES` enum (Android only)](#keychainsecurity_rules-enum-android-only)\n  - [Important Behavior](#important-behavior)\n    - [Rule 1: Automatic Security Level Upgrade](#rule-1-automatic-security-level-upgrade)\n  - [Manual Installation](#manual-installation)\n    - [iOS](#ios)\n      - [Option: Manually](#option-manually)\n      - [Option: With CocoaPods](#option-with-cocoapods)\n      - [Enable `Keychain Sharing` entitlement for iOS 10+](#enable-keychain-sharing-entitlement-for-ios-10)\n    - [Android](#android)\n      - [Option: Manually](#option-manually-1)\n      - [Proguard Rules](#proguard-rules)\n  - [Unit Testing with Jest](#unit-testing-with-jest)\n    - [Using a Jest `__mocks__` Directory](#using-a-jest-__mocks__-directory)\n    - [Using a Jest Setup File](#using-a-jest-setup-file)\n  - [Notes](#notes)\n    - [Android Notes](#android-notes)\n      - [Configuring the Android-specific behavior](#configuring-the-android-specific-behavior)\n    - [iOS Notes](#ios-notes)\n    - [macOS Catalyst](#macos-catalyst)\n    - [Security](#security)\n  - [Maintainers](#maintainers)\n  - [For Developers / Contributors](#for-developers--contributors)\n  - [License](#license)\n\n## Installation\n\n1. Run `yarn add react-native-keychain`\n\n   1 a. **Only for React Native <= 0.59**: `$ react-native link react-native-keychain` and check `MainApplication.java` to verify the package was added. See manual installation below if you have issues with `react-native link`.\n\n2. Run `pod install` in `ios/` directory to install iOS dependencies.\n3. If you want to support FaceID, add a `NSFaceIDUsageDescription` entry in your `Info.plist`.\n4. Re-build your Android and iOS projects.\n\n## Usage\n\n```js\nimport * as Keychain from 'react-native-keychain';\n\nasync () => {\n  const username = 'zuck';\n  const password = 'poniesRgr8';\n\n  // Store the credentials\n  await Keychain.setGenericPassword(username, password);\n\n  try {\n    // Retrieve the credentials\n    const credentials = await Keychain.getGenericPassword();\n    if (credentials) {\n      console.log(\n        'Credentials successfully loaded for user ' + credentials.username\n      );\n    } else {\n      console.log('No credentials stored');\n    }\n  } catch (error) {\n    console.log(\"Keychain couldn't be accessed!\", error);\n  }\n  await Keychain.resetGenericPassword();\n};\n```\n\nSee `KeychainExample` for fully working project example.\n\nBoth `setGenericPassword` and `setInternetCredentials` are limited to strings only, so if you need to store objects etc, please use `JSON.stringify`/`JSON.parse` when you store/access it.\n\n## API\n\n### `setGenericPassword(username, password, [{ accessControl, accessible, accessGroup, service, securityLevel, synchronized }])`\n\nWill store the username/password combination in the secure storage. Resolves to `{service, storage}` or rejects in case of an error. `storage` - is a name of used internal cipher for saving secret; `service` - name used for storing secret in internal storage (empty string resolved to valid default name).\n\n### `getGenericPassword([{ authenticationPrompt, service, accessControl, synchronized }])`\n\nWill retrieve the username/password combination from the secure storage. Resolves to `{ username, password, service, storage }` if an entry exists or `false` if it doesn't. It will reject only if an unexpected error is encountered like lacking entitlements or permission.\n\n### `resetGenericPassword([{ service, synchronized }])`\n\nWill remove the username/password combination from the secure storage. Resolves to `true` in case of success.\n\n### `getAllGenericPasswordServices()`\n\nWill retrieve all known service names for which a generic password has been stored (e.g., `setGenericPassword`).\n\n_Note_: on iOS this will actully read the encrypted entries, so it will trigger an authentication UI if you have encrypted any entries with password/biometry.\n\n### `setInternetCredentials(server, username, password, [{ accessControl, accessible, accessGroup, securityLevel, synchronized }])`\n\nWill store the server/username/password combination in the secure storage. Resolves to `{ username, password, service, storage }`;\n\n### `hasInternetCredentials(server, { synchronized })`\n\nWill check if the username/password combination for server is available in the secure storage. Resolves to `true` if an entry exists or `false` if it doesn't.\n\n### `getInternetCredentials(server, [{ authenticationPrompt, synchronized }])`\n\nWill retrieve the server/username/password combination from the secure storage. Resolves to `{ username, password }` if an entry exists or `false` if it doesn't. It will reject only if an unexpected error is encountered like lacking entitlements or permission.\n\n### `resetInternetCredentials(server, { synchronized })`\n\nWill remove the server/username/password combination from the secure storage.\n\n### `requestSharedWebCredentials()` (iOS and visionOS only)\n\nAsks the user for a shared web credential. Requires additional setup both in the app and server side, see [Apple documentation](https://developer.apple.com/documentation/security/shared_web_credentials). Resolves to `{ server, username, password }` if approved and `false` if denied and throws an error if not supported on platform or there's no shared credentials.\n\n### `setSharedWebCredentials(server, username, password)` (iOS and visionOS only)\n\nSets a shared web credential. Resolves to `true` when successful.\n\n### `canImplyAuthentication([{ authenticationType }])` (iOS and visionOS only)\n\nInquire if the type of local authentication policy is supported on this device with the device settings the user chose. Should be used in combination with `accessControl` option in the setter functions. Resolves to `true` if supported.\n\n### `getSupportedBiometryType()`\n\n**On iOS and visionOS:** Get what type of hardware biometry support the device can use for biometric encryption. Resolves to a `Keychain.BIOMETRY_TYPE` value when supported and enrolled, otherwise `null`.\n\n**On Android:** Get what type of Class 3 (strong) biometry support the device has. Resolves to a `Keychain.BIOMETRY_TYPE` value when supported, otherwise `null`. In most devices this will return `FINGERPRINT` (except for Pixel 4 or similar where fingerprint sensor is not present).\n\n> This method returns `null`, if the device haven't enrolled into fingerprint/FaceId. Even though it has hardware for it.\n\n### `getSecurityLevel([{ accessControl }])` (Android only)\n\nGet security level that is supported on the current device with the current OS. Resolves to `Keychain.SECURITY_LEVEL` enum value.\n\n### Options\n\n#### Data Structure Properties/Fields\n\n| Key                        | Platform     | Description                                                                                      | Default                                                                   |\n| -------------------------- | ------------ | ------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------- |\n| **`accessControl`**        | All          | This dictates how a keychain item may be used, see possible values in `Keychain.ACCESS_CONTROL`. | _None_                                                                    |\n| **`accessible`**           | iOS only     | This dictates when a keychain item is accessible, see possible values in `Keychain.ACCESSIBLE`.  | _`Keychain.ACCESSIBLE.WHEN_UNLOCKED`_                                     |\n| **`accessGroup`**          | iOS only     | In which App Group to share the keychain. Requires additional setup with entitlements.           | _None_                                                                    |\n| **`authenticationPrompt`** | All          | What to prompt the user when unlocking the keychain with biometry or device password.            | See [`authenticationPrompt` Properties](#authenticationprompt-properties) |\n| **`authenticationType`**   | iOS only     | Policies specifying which forms of authentication are acceptable.                                | `Keychain.AUTHENTICATION_TYPE.DEVICE_PASSCODE_OR_BIOMETRICS`              |\n| **`service`**              | All          | Reverse domain name qualifier for the service associated with password.                          | _App bundle ID_                                                           |\n| **`storage`**              | Android only | Force specific cipher storage usage during saving the password                                   | Select best available storage                                             |\n| **`rules`**                | Android only | Force following to a specific security rules                                                     | `Keychain.RULES.AUTOMATIC_UPGRADE`                                        |\n| **`synchronized`**         | iOS only     | Synchronize keychain item from and to iCloud                                                     | `false`                                        |\n\n##### `authenticationPrompt` Properties\n\n| Key               | Platform     | Description                                                                                | Default                           |\n| ----------------- | ------------ | ------------------------------------------------------------------------------------------ | --------------------------------- |\n| **`title`**       | All          | Title of the authentication prompt when requesting a stored secret.                        | `Authenticate to retrieve secret` |\n| **`subtitle`**    | Android only | Subtitle of the Android authentication prompt when requesting a stored secret.             | None. Optional                    |\n| **`description`** | Android only | Description of the Android authentication prompt when requesting a stored secret.          | None. Optional                    |\n| **`cancel`**      | Android only | Negative button text of the Android authentication prompt when requesting a stored secret. | `Cancel`                          |\n\n#### `Keychain.ACCESS_CONTROL` enum\n\n| Key                                           | Description                                                                            |\n| --------------------------------------------- | -------------------------------------------------------------------------------------- |\n| **`USER_PRESENCE`**                           | Constraint to access an item with either Touch ID or passcode.                         |\n| **`BIOMETRY_ANY`**                            | Constraint to access an item with Touch ID for any enrolled fingers.                   |\n| **`BIOMETRY_CURRENT_SET`**                    | Constraint to access an item with Touch ID for currently enrolled fingers.             |\n| **`DEVICE_PASSCODE`**                         | Constraint to access an item with a passcode.                                          |\n| **`APPLICATION_PASSWORD`**                    | Constraint to use an application-provided password for data encryption key generation. |\n| **`BIOMETRY_ANY_OR_DEVICE_PASSCODE`**         | Constraint to access an item with Touch ID for any enrolled fingers or passcode.       |\n| **`BIOMETRY_CURRENT_SET_OR_DEVICE_PASSCODE`** | Constraint to access an item with Touch ID for currently enrolled fingers or passcode. |\n\n> Note #1: `BIOMETRY_ANY`, `BIOMETRY_CURRENT_SET`, `BIOMETRY_ANY_OR_DEVICE_PASSCODE`, `BIOMETRY_CURRENT_SET_OR_DEVICE_PASSCODE` - recognized by Android as a requirement for Biometric enabled storage (Till we got a better implementation);\n>\n> Note #2: For Android we support only two states: `None` (default) and `Fingerprint` (use only biometric protected storage); `Face` recognition fails with \"User not authenticated\" exception, see issue #318\n\nRefs:\n\n- <https://developer.apple.com/documentation/security/secaccesscontrolcreateflags?language=objc>\n\n#### `Keychain.ACCESSIBLE` enum\n\n| Key                                       | Description                                                                                                                                                                            |\n| ----------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **`WHEN_UNLOCKED`**                       | The data in the keychain item can be accessed only while the device is unlocked by the user.                                                                                           |\n| **`AFTER_FIRST_UNLOCK`**                  | The data in the keychain item cannot be accessed after a restart until the device has been unlocked once by the user.                                                                  |\n| **`ALWAYS`**                              | The data in the keychain item can always be accessed regardless of whether the device is locked.                                                                                       |\n| **`WHEN_PASSCODE_SET_THIS_DEVICE_ONLY`**  | The data in the keychain can only be accessed when the device is unlocked. Only available if a passcode is set on the device. Items with this attribute never migrate to a new device. |\n| **`WHEN_UNLOCKED_THIS_DEVICE_ONLY`**      | The data in the keychain item can be accessed only while the device is unlocked by the user. Items with this attribute do not migrate to a new device.                                 |\n| **`AFTER_FIRST_UNLOCK_THIS_DEVICE_ONLY`** | The data in the keychain item cannot be accessed after a restart until the device has been unlocked once by the user. Items with this attribute never migrate to a new device.         |\n\nRefs:\n\n- <https://developer.apple.com/documentation/security/ksecattraccessiblewhenunlocked>\n\n#### `Keychain.AUTHENTICATION_TYPE` enum\n\n| Key                                 | Description                                                                               |\n| ----------------------------------- | ----------------------------------------------------------------------------------------- |\n| **`DEVICE_PASSCODE_OR_BIOMETRICS`** | Device owner is going to be authenticated by biometry or device passcode.                 |\n| **`BIOMETRICS`**                    | Device owner is going to be authenticated using a biometric method (Touch ID or Face ID). |\n\nRefs:\n\n- <https://developer.apple.com/documentation/localauthentication/lapolicy>\n\n#### `Keychain.BIOMETRY_TYPE` enum\n\n| Key               | Description                                                          |\n|-------------------|----------------------------------------------------------------------|\n| **`TOUCH_ID`**    | Device supports authentication with Touch ID. (iOS only)             |\n| **`FACE_ID`**     | Device supports authentication with Face ID. (iOS only)              |\n| **`OPTIC_ID`**    | Device supports authentication with Optic ID. (visionOS only)        |\n| **`FINGERPRINT`** | Device supports authentication with Fingerprint. (Android only)      |\n| **`FACE`**        | Device supports authentication with Face Recognition. (Android only) |\n| **`IRIS`**        | Device supports authentication with Iris Recognition. (Android only) |\n\nRefs:\n\n- <https://developer.apple.com/documentation/localauthentication/labiometrytype?language=objc>\n\n#### `Keychain.SECURITY_LEVEL` enum (Android only)\n\nIf set, `securityLevel` parameter specifies minimum security level that the encryption key storage should guarantee for storing credentials to succeed.\n\n| Key               | Description                                                                                                                                                                                                                            |\n| ----------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `ANY`             | no security guarantees needed (default value); Credentials can be stored in FB Secure Storage;                                                                                                                                         |\n| `SECURE_SOFTWARE` | requires for the key to be stored in the Android Keystore, separate from the encrypted data;                                                                                                                                           |\n| `SECURE_HARDWARE` | requires for the key to be stored on a secure hardware (Trusted Execution Environment or Secure Environment). Read [this article](https://developer.android.com/training/articles/keystore#ExtractionPrevention) for more information. |\n\n#### `Keychain.STORAGE_TYPE` enum (Android only)\n\n| Key   | Description                            |\n| ----- | -------------------------------------- |\n| `FB`  | Facebook compatibility cipher          |\n| `AES` | Encryptions without human interaction. |\n| `RSA` | Encryption with biometrics.            |\n\n#### `Keychain.SECURITY_RULES` enum (Android only)\n\n| Key                 | Description                                                                                                                                                                                                                |\n| ------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `NONE`              | No rules. Be dummy, developer control everything                                                                                                                                                                           |\n| `AUTOMATIC_UPGRADE` | Upgrade secret to the best available storage as soon as it is available and user request secret extraction. Upgrade not applied till we request the secret. This rule only applies to secrets stored with FacebookConseal. |\n\n## Important Behavior\n\n### Rule 1: Automatic Security Level\n\nAs a rule the library will try to apply the best possible encryption for storing secrets. Once the secret is stored however its does not try to upgrade it unless FacebookConseal was used and the option 'SECURITY_RULES' is set to 'AUTOMATIC_UPGRADE'\n\n---\n\nQ: What will happen if user disables/drops biometric usage?\n\nA: User will lose ability to extract secret from storage. On re-enable biometric access to the secret will be possible again.\n\n---\n\nQ: Is it possible to implement automatic downgrading?\n\nA: From security perspective any Automatic downgrading is treated as \"a loss of the trust\" point.\nDeveloper should implement own logic to allow downgrade and deal with \"security loss\". _(My recommendation - never do that!)_\n\n---\n\nQ: How to enable automatic upgrade for FacebookConseal?\n\nA: Do call `getGenericPassword({ ...otherProps, rules: \"AUTOMATIC_UPGRADE\" })` with extra property `rules` set to `AUTOMATIC_UPGRADE` string value.\n\n---\n\nQ: How to force a specific level of encryption during saving the secret?\n\nA: Do call `setGenericPassword({ ...otherProps, storage: \"AES\" })` with forced storage.\n\n> Note: attempt to force storage `RSA` when biometrics is not available will force code to reject call with errors specific to device biometric configuration state.\n\n## Manual Installation\n\n### iOS\n\n#### Option: Manually\n\n- Right click on Libraries, select **Add files to \"…\"** and select `node_modules/react-native-keychain/RNKeychain.xcodeproj`\n- Select your project and under **Build Phases** -> **Link Binary With Libraries**, press the + and select `libRNKeychain.a`.\n- make sure `pod 'RNKeychain'` is not in your `Podfile`\n\n#### Option: With [CocoaPods](https://cocoapods.org/)\n\nAdd the following to your `Podfile` and run `pod update`:\n\n```\npod 'RNKeychain', :path => '../node_modules/react-native-keychain'\n```\n\n#### Enable `Keychain Sharing` entitlement for iOS 10+\n\nFor iOS 10 you'll need to enable the `Keychain Sharing` entitlement in the `Capabilities` section of your build target. (See screenshot). Otherwise you'll experience the error shown below.\n\n![screen shot 2016-09-16 at 20 56 33](https://cloud.githubusercontent.com/assets/512692/18597833/15316342-7c50-11e6-92e7-781651e61563.png)\n\n```\nError: {\n  code = \"-34018\";\n  domain = NSOSStatusErrorDomain;\n  message = \"The operation couldn\\U2019t be completed. (OSStatus error -34018.)\";\n}\n```\n\n### Android\n\n#### Option: Manually\n\n- Edit `android/settings.gradle` to look like this (without the +):\n\n```diff\nrootProject.name = 'MyApp'\n\ninclude ':app'\n\n+ include ':react-native-keychain'\n+ project(':react-native-keychain').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-keychain/android')\n```\n\n- Edit `android/app/build.gradle` (note: **app** folder) to look like this:\n\n```diff\napply plugin: 'com.android.application'\n\nandroid {\n  ...\n}\n\ndependencies {\n  implementation fileTree(dir: 'libs', include: ['*.jar'])\n  implementation 'com.android.support:appcompat-v7:23.0.1'\n  implementation 'com.facebook.react:react-native:0.19.+'\n+ implementation project(':react-native-keychain')\n}\n```\n\n- Edit your `MainApplication.java` (deep in `android/app/src/main/java/...`) to look like this (note **two** places to edit):\n\n```diff\npackage com.myapp;\n\n+ import com.oblador.keychain.KeychainPackage;\n\n....\n\npublic class MainActivity extends extends ReactActivity {\n\n  @Override\n  protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n              new MainReactPackage(),\n+             new KeychainPackage()\n      );\n  }\n  ...\n}\n```\n\n#### Proguard Rules\n\nOn Android builds that use proguard (like release), you may see the following error:\n\n```\nRNKeychainManager: no keychain entry found for service:\nJNI DETECTED ERROR IN APPLICATION: JNI FindClass called with pending exception java.lang.NoSuchFieldError: no \"J\" field \"mCtxPtr\" in class \"Lcom/facebook/crypto/cipher/NativeGCMCipher;\" or its superclasses\n```\n\nIf so, add a proguard rule in `proguard-rules.pro`:\n\n```\n-keep class com.facebook.crypto.** {\n   *;\n}\n```\n\n## Unit Testing with Jest\n\nThe keychain manager relies on interfacing with the native application itself. As such, it does not successfully compile and run in the context of a Jest test, where there is no underlying app to communicate with. To be able to call the JS functions exposed by this module in a unit test, you should mock them in one of the following two ways:\n\nFirst, let's create a mock object for the module:\n\n```js\nconst keychainMock = {\n  SECURITY_LEVEL_ANY: \"MOCK_SECURITY_LEVEL_ANY\",\n  SECURITY_LEVEL_SECURE_SOFTWARE: \"MOCK_SECURITY_LEVEL_SECURE_SOFTWARE\",\n  SECURITY_LEVEL_SECURE_HARDWARE: \"MOCK_SECURITY_LEVEL_SECURE_HARDWARE\",\n  setGenericPassword: jest.fn().mockResolvedValue(),\n  getGenericPassword: jest.fn().mockResolvedValue(),\n  resetGenericPassword: jest.fn().mockResolvedValue(),\n  ...\n}\n```\n\n### Using a Jest `__mocks__` Directory\n\n1. Read the [jest docs](https://jestjs.io/docs/en/manual-mocks#mocking-node-modules) for initial setup\n\n2. Create a `react-native-keychain` folder in the `__mocks__` directory and add `index.js` file in it. It should contain the following code:\n\n```javascript\nexport default keychainMock;\n```\n\n### Using a Jest Setup File\n\n1. In your Jest config, add a reference to a [setup file](https://jestjs.io/docs/en/configuration.html#setupfiles-array)\n\n2. Inside your setup file, set up mocking for this package:\n\n```javascript\njest.mock('react-native-keychain', () => keychainMock);\n```\n\nNow your tests should run successfully, though note that writing and reading to the keychain will be effectively a no-op.\n\n## Notes\n\n### Android Notes\n\nThe module will automatically use the appropriate CipherStorage implementation based on API level:\n\n- API level 16-22 will en/de crypt using Facebook Conceal\n- API level 23+ will en/de crypt using Android Keystore\n\nEncrypted data is stored in SharedPreferences.\n\nThe `setInternetCredentials(server, username, password)` call will be resolved as call to `setGenericPassword(username, password, server)`. Use the `server` argument to distinguish between multiple entries.\n\n#### Configuring the Android-specific behavior\n\nAndroid implementation has behavioural specifics incurred by existing inconsistency between implementations by different vendors. E.g., some Samsung devices show very slow startup of crypto system. To alleviate this, a warm-up strategy is introduced in Android implementation of this library.\n\nUsing default constructor you get default behaviour, i.e. with the warming up on.\n\n```java\n    private List<ReactPackage> createPackageList() {\n      return Arrays.asList(\n        ...\n        new KeychainPackage(),  // warming up is ON\n        ...\n      )\n\n```\n\nThose who want finer control are required to use constructor with a builder which can be configured as they like:\n\n```java\n    private List<ReactPackage> createPackageList() {\n      return Arrays.asList(\n        ...\n        new KeychainPackage(\n                new KeychainModuleBuilder()\n                        .withoutWarmUp()),   // warming up is OFF\n        ...\n      )\n```\n\n### iOS Notes\n\nIf you need Keychain Sharing in your iOS extension, make sure you use the same App Group and Keychain Sharing group names in your Main App and your Share Extension. To then share the keychain between the Main App and Share Extension, use the `accessGroup` and `service` option on `setGenericPassword` and `getGenericPassword`, like so: `getGenericPassword({ accessGroup: 'group.appname', service: 'com.example.appname' })`\n\nRefs:\n\n- <https://developer.apple.com/documentation/localauthentication>\n- <https://developer.apple.com/documentation/security>\n\n### macOS Catalyst\n\nThis package supports macOS Catalyst.\n\n### visionOS\n\nThis package supports visionOS.\n\n### Security\n\nOn API levels that do not support Android keystore, Facebook Conceal is used to en/decrypt stored data. The encrypted data is then stored in SharedPreferences. Since Conceal itself stores its encryption key in SharedPreferences, it follows that if the device is rooted (or if an attacker can somehow access the filesystem), the key can be obtained and the stored data can be decrypted. Therefore, on such a device, the conceal encryption is only an obscurity. On API level 23+ the key is stored in the Android Keystore, which makes the key non-exportable and therefore makes the entire process more secure. Follow best practices and do not store user credentials on a device. Instead use tokens or other forms of authentication and re-ask for user credentials before performing sensitive operations.\n\n![Android Security Framework](https://source.android.com/security/images/authentication-flow.png)\n\n- [Android authentication](https://source.android.com/security/authentication)\n- [Android Cipher](https://developer.android.com/guide/topics/security/cryptography)\n- [Android Protected Confirmation](https://developer.android.com/training/articles/security-android-protected-confirmation)\n\n## Maintainers\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/oblador\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/oblador.png?v=3&s=150\">\n          <br />\n          <strong>Joel Arvidsson</strong>\n        </a>\n        <br />\n        Author\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/vonovak\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/vonovak.png?v=3&s=150\">\n          <br />\n          <strong>Vojtech Novak</strong>\n        </a>\n        <br />\n        Maintainer\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/pcoltau\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/pcoltau.png?v=3&s=150\">\n          <br />\n          <strong>Pelle Stenild Coltau</strong>\n        </a>\n        <br />\n        Maintainer\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/OleksandrKucherenko\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/OleksandrKucherenko.png?v=3&s=150\">\n          <br />\n          <strong>Oleksandr Kucherenko</strong>\n        </a>\n        <br />\n        Contributor\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n## For Developers / Contributors\n\n- [How to Configure Android Studio for Development](android/README.md)\n\n## License\n\nMIT © Joel Arvidsson 2016-2020\n"
		}
	},
	{
		"id": "R_kgDOMaVvhw",
		"description": "Hermes is a small and lightweight JavaScript engine optimized for running React Native apps..",
		"homepageUrl": "https://hermesengine.dev",
		"url": "https://github.com/respondchat/hermes-windows",
		"name": "hermes-windows",
		"nameWithOwner": "respondchat/hermes-windows",
		"owner": {
			"login": "respondchat"
		},
		"createdAt": "2024-07-24T02:33:38Z",
		"updatedAt": "2024-07-24T02:33:38Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/dce064466df4fd03a8372b48eb6d1ff13a97575c8b772299744d5a6ac9b0d552/respondchat/hermes-windows",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 19,
			"totalSize": 17345114,
			"edges": [
				{
					"size": 8962826,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 6155049,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 1004338,
					"node": {
						"color": "#dea584",
						"name": "Rust"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOMaVvh69yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLegK0w",
		"description": "Documentation for the nodepush library",
		"homepageUrl": null,
		"url": "https://github.com/nodepush/docs",
		"name": "docs",
		"nameWithOwner": "nodepush/docs",
		"owner": {
			"login": "nodepush"
		},
		"createdAt": "2024-03-11T04:50:27Z",
		"updatedAt": "2024-03-11T04:50:27Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/59c7d73104eb1c4aa939cab446b99dfaf8daed3df99f049f25a03db04dcf2a2d/nodepush/docs",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": null,
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 0,
			"totalSize": 0,
			"edges": []
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLegK069yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLegQgA",
		"description": "A language-free spec detailing the intricacies of the APNS and App Token systems",
		"homepageUrl": null,
		"url": "https://github.com/nodepush/spec",
		"name": "spec",
		"nameWithOwner": "nodepush/spec",
		"owner": {
			"login": "nodepush"
		},
		"createdAt": "2024-03-11T04:56:11Z",
		"updatedAt": "2024-03-11T04:56:12Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/154642993?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": null,
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 0,
			"totalSize": 0,
			"edges": []
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLegQgK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLegVxg",
		"description": "A guide to get started using the nodepush library.",
		"homepageUrl": null,
		"url": "https://github.com/nodepush/guide",
		"name": "guide",
		"nameWithOwner": "nodepush/guide",
		"owner": {
			"login": "nodepush"
		},
		"createdAt": "2024-03-11T05:01:04Z",
		"updatedAt": "2024-03-11T05:01:05Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/bae565df76942d66cdbc05c8c620c14d2e00aaa5aee1f09099ac21bb409d22c8/nodepush/guide",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": null,
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 0,
			"totalSize": 0,
			"edges": []
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLegVxq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOL06i4g",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/jura-ki/jura",
		"name": "jura",
		"nameWithOwner": "jura-ki/jura",
		"owner": {
			"login": "jura-ki"
		},
		"createdAt": "2024-04-29T17:09:16Z",
		"updatedAt": "2024-09-18T20:39:48Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/168475061?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 4,
			"totalSize": 79281,
			"edges": [
				{
					"size": 68933,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 9252,
					"node": {
						"color": "#234d6b",
						"name": "PEG.js"
					}
				},
				{
					"size": 740,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOL06i4rFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 11
				}
			}
		},
		"object": {
			"text": "# gesetze\n\nTo install dependencies:\n\n```bash\nbun install\n```\n\nTo run:\n\n```bash\nbun run index.ts\n```\n\nThis project was created using `bun init` in bun v1.0.28. [Bun](https://bun.sh) is a fast all-in-one JavaScript runtime.\n"
		},
		"commits": [
			{
				"committedDate": "2024-09-18T20:39:43Z",
				"message": "Merge pull request #2 from jura-ki/dependabot/npm_and_yarn/next-14.2.10\n\nchore(deps): bump next from 14.2.3 to 14.2.10",
				"messageBody": "chore(deps): bump next from 14.2.3 to 14.2.10"
			},
			{
				"committedDate": "2024-05-07T22:04:50Z",
				"message": "feat: update parser",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-07T22:04:40Z",
				"message": "fix: grammar",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-07T22:04:34Z",
				"message": "feat: add UI",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-01T22:15:21Z",
				"message": "wip: grammar",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-01T11:32:43Z",
				"message": "feat: gesetz verweis parser + update types",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-30T07:24:32Z",
				"message": "feat: rewrite surreal -> mongodb",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-29T20:37:02Z",
				"message": "feat: update dat schema",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-29T18:58:50Z",
				"message": "fix: compare",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-29T18:58:50Z",
				"message": "feat: prettier",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-29T17:15:20Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "**Added Features**\n- Update parser\n- Grammar\n- UI\n- Gesetz verweis parser\n- MongoDB rewrite\n- Updates to dat schema\n- Prettier integration\n\n**Fixed Issues**\n- Grammar\n- Compare function\n\n**Work in Progress**\n- Grammar"
	},
	{
		"id": "R_kgDOL0-WGA",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/jura-ki/gesetze-api",
		"name": "gesetze-api",
		"nameWithOwner": "jura-ki/gesetze-api",
		"owner": {
			"login": "jura-ki"
		},
		"createdAt": "2024-04-29T19:37:53Z",
		"updatedAt": "2024-05-02T13:12:30Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/168475061?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 7422,
			"edges": [
				{
					"size": 7191,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				},
				{
					"size": 231,
					"node": {
						"color": "#384d54",
						"name": "Dockerfile"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOL0-WGK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOKqjPQg",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/whatsapp",
		"name": "whatsapp",
		"nameWithOwner": "SamuelScheit/whatsapp",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-11-07T17:07:17Z",
		"updatedAt": "2024-07-22T03:48:38Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/34555296?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 8,
			"totalSize": 4958083,
			"edges": [
				{
					"size": 4522350,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 286693,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 121893,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOKqjPQrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 229
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2024-07-22T03:48:33Z",
				"message": "Merge pull request #20 from SamuelScheit/dependabot/go_modules/api/github.com/gofiber/fiber/v2-2.52.5",
				"messageBody": "…thub.com/gofiber/fiber/v2-2.52.5"
			},
			{
				"committedDate": "2024-05-27T00:59:01Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-27T00:55:50Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-27T00:46:26Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-26T22:56:38Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-26T22:47:23Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-24T03:15:56Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-24T02:51:55Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-22T23:03:57Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-22T22:52:57Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-22T22:18:17Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-22T22:16:47Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-22T21:44:32Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-22T21:26:07Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T22:32:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T22:30:29Z",
				"message": "fix: use bun",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T22:10:53Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T20:23:02Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T11:34:29Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T11:31:12Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T10:38:36Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-21T10:28:12Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-20T02:51:54Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-20T02:27:55Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-20T02:24:13Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-20T02:04:14Z",
				"message": "fix: error",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-14T20:57:20Z",
				"message": "Merge pull request #19 from SamuelScheit/dependabot/npm_and_yarn/registration/next-14.1.1\n\nbuild(deps): bump next from 14.1.0 to 14.1.1 in /registration",
				"messageBody": "…stration/next-14.1.1\n\nbuild(deps): bump next from 14.1.0 to 14.1.1 in /registration"
			},
			{
				"committedDate": "2024-05-04T10:04:29Z",
				"message": "Merge pull request #18 from SamuelScheit/dependabot/npm_and_yarn/registration/ejs-3.1.10",
				"messageBody": "…stration/ejs-3.1.10"
			},
			{
				"committedDate": "2024-05-01T20:39:16Z",
				"message": "increase",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-01T20:25:15Z",
				"message": "increase concurrency",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T23:05:15Z",
				"message": "test concurrency",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T15:09:44Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T15:07:21Z",
				"message": "fix: port",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:38:32Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:36:50Z",
				"message": "docker",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:32:15Z",
				"message": "fix: docker.sh",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:11:58Z",
				"message": "feat: cobalt api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-21T22:10:25Z",
				"message": "fix: whatsapp ios",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-18T21:22:15Z",
				"message": "fix: code",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-17T11:19:47Z",
				"message": "fix: apns timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-06T18:21:15Z",
				"message": "Merge pull request #17 from SamuelScheit/dependabot/npm_and_yarn/registration/axios-1.6.0\n\nbuild(deps): bump axios from 0.27.2 to 1.6.0 in /registration",
				"messageBody": "…stration/axios-1.6.0\n\nbuild(deps): bump axios from 0.27.2 to 1.6.0 in /registration"
			},
			{
				"committedDate": "2024-04-04T19:04:27Z",
				"message": "Merge pull request #16 from SamuelScheit/dependabot/npm_and_yarn/registration/undici-6.11.1",
				"messageBody": "…stration/undici-6.11.1"
			},
			{
				"committedDate": "2024-04-04T13:34:00Z",
				"message": "feat: new generic device",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-03T13:43:09Z",
				"message": "fix: crash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-03T13:39:52Z",
				"message": "fix:crash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-03T13:35:34Z",
				"message": "fix: crash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-03T13:25:52Z",
				"message": "fix: crash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-03T13:21:28Z",
				"message": "fix: crash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-03T13:07:36Z",
				"message": "fix: proxy not working",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-31T13:27:44Z",
				"message": "print error",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-30T22:12:38Z",
				"message": "fix: negative threads",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-30T22:05:26Z",
				"message": "fix: no proxy rotation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-29T15:57:58Z",
				"message": "fix: account displayed twice",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-26T21:17:37Z",
				"message": "Merge pull request #15 from SamuelScheit/dependabot/npm_and_yarn/registration/express-4.19.2\n\nbuild(deps): bump express from 4.18.2 to 4.19.2 in /registration",
				"messageBody": "…stration/express-4.19.2\n\nbuild(deps): bump express from 4.18.2 to 4.19.2 in /registration"
			},
			{
				"committedDate": "2024-03-26T16:23:05Z",
				"message": "Merge pull request #14 from SamuelScheit/dependabot/npm_and_yarn/registration/katex-0.16.10\n\nbuild(deps): bump katex from 0.16.9 to 0.16.10 in /registration",
				"messageBody": "…stration/katex-0.16.10\n\nbuild(deps): bump katex from 0.16.9 to 0.16.10 in /registration"
			},
			{
				"committedDate": "2024-03-26T01:04:30Z",
				"message": "stats + deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-26T00:33:36Z",
				"message": "fix: stats",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-26T00:24:29Z",
				"message": "feat: add stats saving",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-24T15:50:25Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-24T15:50:21Z",
				"message": "fix: disable proxy region",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-24T13:14:45Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-24T13:12:11Z",
				"message": "perf: remove docker, bare metal deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-24T02:53:18Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-24T01:31:52Z",
				"message": "fix: crash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-22T15:14:29Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-22T15:12:20Z",
				"message": "feat: expose server hostname",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-21T15:34:17Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-21T15:32:11Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-21T15:30:14Z",
				"message": "fix: download cards",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-21T12:35:56Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-21T11:29:02Z",
				"message": "feat: add apns timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-21T11:22:08Z",
				"message": "feat: add languages",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-20T16:46:51Z",
				"message": "fix: POST method + tlsv1.2",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-19T00:33:06Z",
				"message": "fix: blocked on register",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-18T16:21:10Z",
				"message": "wip: randomize lg/lc",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-18T15:57:11Z",
				"message": "fix: download",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-17T21:07:33Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-17T20:56:42Z",
				"message": "feat: add file download",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-17T20:55:42Z",
				"message": "feat: add file download",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-17T18:25:57Z",
				"message": "Merge pull request #13 from SamuelScheit/dependabot/npm_and_yarn/registration/follow-redirects-1.15.6\n\nbuild(deps): bump follow-redirects from 1.15.5 to 1.15.6 in /registration",
				"messageBody": "…stration/follow-redirects-1.15.6\n\nbuild(deps): bump follow-redirects from 1.15.5 to 1.15.6 in /registration"
			},
			{
				"committedDate": "2024-03-16T14:44:18Z",
				"message": "feat: accounts download page",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-16T02:58:46Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-16T02:53:37Z",
				"message": "fix: logs returned from other users",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-16T01:52:09Z",
				"message": "feat: registration stop button and pending tasks counter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-16T01:52:09Z",
				"message": "feat: add accounts docs",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-15T21:48:15Z",
				"message": "Merge pull request #12 from SamuelScheit/dependabot/go_modules/api/google.golang.org/protobuf-1.33.0\n\nbuild(deps): bump google.golang.org/protobuf from 1.31.0 to 1.33.0 in /api",
				"messageBody": "…ogle.golang.org/protobuf-1.33.0\n\nbuild(deps): bump google.golang.org/protobuf from 1.31.0 to 1.33.0 in /api"
			},
			{
				"committedDate": "2024-03-15T21:09:13Z",
				"message": "fix: seg fault",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-15T21:03:44Z",
				"message": "fix: null pointer",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-15T19:44:07Z",
				"message": "feat: security code reset",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-15T19:44:02Z",
				"message": "fix: retry request with a different proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-15T18:59:07Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-15T18:57:46Z",
				"message": "fix: temporarily_unavailable + apns close",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-14T13:13:33Z",
				"message": "fix:",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-13T19:34:16Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-13T19:29:38Z",
				"message": "apns individual requests per code",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-11T22:26:33Z",
				"message": "feat: add profile",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-11T22:11:28Z",
				"message": "fix: exists",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-11T15:12:58Z",
				"message": "feat: smart proxy proxy provider",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-11T13:09:36Z",
				"message": "fix: installation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-11T13:08:17Z",
				"message": "fix: log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-11T13:01:59Z",
				"message": "feat: activate code",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-10T17:10:20Z",
				"message": "feat: activatecode.org",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-08T02:50:35Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-08T02:03:12Z",
				"message": "feat: go apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-08T02:03:11Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-08T00:39:11Z",
				"message": "Merge pull request #11 from SamuelScheit/dependabot/npm_and_yarn/registration/jose-4.15.5\n\nbuild(deps): bump jose from 4.15.4 to 4.15.5 in /registration",
				"messageBody": "…stration/jose-4.15.5\n\nbuild(deps): bump jose from 4.15.4 to 4.15.5 in /registration"
			},
			{
				"committedDate": "2024-03-07T16:21:04Z",
				"message": "fix: registration",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-07T15:51:17Z",
				"message": "fix: registration temporarily_unavailable",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-07T15:38:43Z",
				"message": "fix: registration temporarily_unavailable",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-06T15:08:13Z",
				"message": "fix: registration temporarily_unavailable",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-06T14:26:46Z",
				"message": "fix: registrtion temporarily_unavailable",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-06T01:05:52Z",
				"message": "feat: finish registration service",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-05T19:59:25Z",
				"message": "fix: register",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-05T17:53:47Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-05T17:50:25Z",
				"message": "feat: bulk",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-05T17:50:11Z",
				"message": "fix: retry on temporarily_unavailable",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-05T07:47:11Z",
				"message": "wip: queue system + fix invalid token",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-03T02:56:17Z",
				"message": "wip: bulk",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-01T16:17:20Z",
				"message": "wip",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-01T16:16:58Z",
				"message": "wip",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-27T17:09:16Z",
				"message": "fix: proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-27T11:54:13Z",
				"message": "fix: http EOF error",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T21:43:51Z",
				"message": "feat: random country + language",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T17:21:32Z",
				"message": "fix: transaction db insert",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T17:04:19Z",
				"message": "host mode",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T16:43:31Z",
				"message": "Merge pull request #10 from xNaCly/master\n\napi/whatsapp: refactor for sake of readability and correctness",
				"messageBody": "api/whatsapp: refactor for sake of readability and correctness"
			},
			{
				"committedDate": "2024-02-26T16:43:20Z",
				"message": "fix: auth + user agent",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T16:43:05Z",
				"message": "feat: increase timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T16:42:39Z",
				"message": "fix: req/resp body close",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T16:41:39Z",
				"message": "fix: docker",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T16:34:50Z",
				"message": "fix: auth + user agent",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T16:16:53Z",
				"message": "fix: docker",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T12:17:16Z",
				"message": "feat: increase timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T12:12:02Z",
				"message": "fix: req/resp body close",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-26T12:01:40Z",
				"message": "feat: update push token/code",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T21:04:41Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T20:59:34Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T20:53:39Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T20:49:56Z",
				"message": "feat: timeout + retry + remove url from error",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T19:45:06Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T19:27:16Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T19:22:33Z",
				"message": "increase timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T15:54:21Z",
				"message": "log body",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T15:37:58Z",
				"message": "increase: timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T06:28:54Z",
				"message": "feat: finished api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T06:10:42Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T06:00:46Z",
				"message": "fix: build",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T05:39:54Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-25T05:35:37Z",
				"message": "feat: new go api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-24T02:16:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-24T02:14:37Z",
				"message": "fix: deployment",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-24T02:06:27Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-24T02:05:02Z",
				"message": "fix: docker",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-23T23:59:25Z",
				"message": "fix: docker",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-23T23:53:23Z",
				"message": "fix: api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-23T05:11:50Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-23T05:06:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-23T04:55:17Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-23T04:54:44Z",
				"message": "feat: new js api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-22T18:16:26Z",
				"message": "fix: deployment replicated",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-22T17:50:18Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-22T17:49:01Z",
				"message": "feat: multi server architecture",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-21T11:19:09Z",
				"message": "Merge pull request #9 from SamuelScheit/dependabot/npm_and_yarn/registration/ip-1.1.9\n\nbuild(deps): bump ip from 1.1.8 to 1.1.9 in /registration",
				"messageBody": "…tration/ip-1.1.9\n\nbuild(deps): bump ip from 1.1.8 to 1.1.9 in /registration"
			},
			{
				"committedDate": "2024-02-19T17:01:59Z",
				"message": "fix: oxylabs country proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-19T16:39:17Z",
				"message": "fix: disable admin cache",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-19T12:54:13Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T23:14:24Z",
				"message": "feat: dashboard graphs",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T18:52:46Z",
				"message": "fix: stats",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T06:08:30Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T06:02:44Z",
				"message": "feat: go api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T06:02:44Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T05:57:56Z",
				"message": "fix: stats",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T05:51:35Z",
				"message": "fix: env",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-18T05:49:27Z",
				"message": "feat: admin dashboard",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-13T20:34:54Z",
				"message": "fix: register status for api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-12T18:46:34Z",
				"message": "fix: missing",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-12T03:01:56Z",
				"message": "feat: new supabase",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-10T14:51:44Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-10T14:48:11Z",
				"message": "fix: handler + redis",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-09T09:24:55Z",
				"message": "fix: rename success to sent",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:43:13Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:42:34Z",
				"message": "fix: response",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:28:44Z",
				"message": "fix: cycletls",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T21:16:02Z",
				"message": "update submodule",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-06T20:45:17Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-06T20:45:05Z",
				"message": "fix: don't rename username",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T21:32:35Z",
				"message": "fix: handler + update version",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T20:47:39Z",
				"message": "fix: proxy message",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T13:51:13Z",
				"message": "fix: proxy rola session id",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T01:32:24Z",
				"message": "feat: add rola proxy mapper",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T17:20:13Z",
				"message": "stash",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T17:19:33Z",
				"message": "fix: transaction price",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T01:25:01Z",
				"message": "update id",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T01:20:12Z",
				"message": "feat: client proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:09:16Z",
				"message": "fix: handler",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T18:01:22Z",
				"message": "feat: use whatsapprestapi",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:50:32Z",
				"message": "feat: use whatsapprestapi",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T13:34:01Z",
				"message": "fix: apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T13:20:57Z",
				"message": "fix: apns, recharge, registration already in progress",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-28T16:43:22Z",
				"message": "fix: retry different apns token",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-28T16:13:29Z",
				"message": "fix: apns timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T13:13:06Z",
				"message": "fix: apns timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T04:48:11Z",
				"message": "redis.ts aktualisieren",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T04:36:18Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T04:26:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-27T04:21:14Z",
				"message": "feat: lazy loading table + performance improvements",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-26T21:17:52Z",
				"message": "fix: register",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-25T15:09:20Z",
				"message": "fix: data",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-25T01:22:48Z",
				"message": "fix: business",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-25T01:06:00Z",
				"message": "feat: new api_key",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-25T01:05:14Z",
				"message": "feat: account password, email, api key change",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-25T01:03:54Z",
				"message": "fix: business",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-24T19:54:42Z",
				"message": "rename message to status",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-24T17:34:27Z",
				"message": "fix: parallel events",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-24T16:31:25Z",
				"message": "fix: proxy + auth + modal + status",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-24T14:32:04Z",
				"message": "feat: update api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T23:55:22Z",
				"message": "update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T23:47:54Z",
				"message": "fix: phone account events",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T23:20:15Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T23:01:26Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T22:51:19Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T22:38:14Z",
				"message": "add logging + account modal",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T22:14:52Z",
				"message": "fix: auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T20:51:44Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T19:49:56Z",
				"message": "fix: apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T17:51:39Z",
				"message": "update .env",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-23T17:38:02Z",
				"message": "feat: bullmq dashboard + proxy handler",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-22T17:47:43Z",
				"message": "feat: finish api",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-18T17:34:01Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "- **API Development**: \n  - New generic API\n  - Go API\n  - New JS API\n  - Admin dashboard API\n  - Supabase API\n  - Cobalt API\n  - WhatsApp REST API\n  - Oxylabs country proxy API\n\n- **Deployment and Environment**: \n  - Docker deployment\n  - Bare metal deployment\n  - Host mode\n  - Stats deployment\n  - Increase concurrency\n  - Increase timeout\n\n- **Feature Additions**: \n  - Add APNS timeout\n  - Add languages\n  - Add file download\n  - Add accounts download page\n  - Add profile\n  - Add stats saving\n  - Add account password, email, and API key change\n  - Add registration stop button and pending tasks counter\n  - Add accounts documentation\n  - Activate code feature\n  - Activate code org feature\n  - Smart proxy proxy provider\n  - Installation fix\n  - Security code reset\n  - Retry request with different proxy\n  - Multi-server architecture\n  - Dashboard graphs\n  - New account creation\n  - Client proxy\n\n- **Fixes and Bug Fixes**: \n  - Fixes for proxy rotation and region\n  - Fixes for registration\n  - Fixes for APNS and recharge\n  - Fixes for temporarily_unavailable errors\n  - Fixes for WhatsApp iOS and download issues\n  - Fixes for error handling\n  - Fixes for stats\n  - Fixes for crash issues\n  - Fixes for concurrency and port issues\n  - Fixes for installation and environment\n  - Fixes for http errors and transactions\n  - Fixes for JWT token handling\n  - Admin cache and auth issues\n  - Username changes\n  - Rola proxy and mapper\n\n- **Testing and Quality Assurance**: \n  - Test concurrency\n  - WIP queue and fix for invalid tokens\n  - WIP bulk registration\n  - Registration temporarily_unavailable error\n  - Proxy and error handling test"
	},
	{
		"id": "R_kgDOL472Tg",
		"description": "Technical analysis of browser fingerprinting techniques based on FingerprintJS",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/fingerprinting",
		"name": "fingerprinting",
		"nameWithOwner": "SamuelScheit/fingerprinting",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-05-08T17:42:01Z",
		"updatedAt": "2024-10-11T17:40:00Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/797898318/52696cb5-e5e7-4ce2-bdd3-e4f42376f36e",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#e34c26",
			"name": "HTML"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 8,
			"totalSize": 2850365,
			"edges": [
				{
					"size": 1369970,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				},
				{
					"size": 734324,
					"node": {
						"color": "#ecdebe",
						"name": "Roff"
					}
				},
				{
					"size": 567970,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOL472TrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 65
				}
			}
		},
		"object": {
			"text": "# Technical analysis of browser fingerprinting techniques based on FingerprintJS\n\n## [Paper](./paper/paper.pdf)\n\nAuthors:\n[Samuel Scheit](https://samuelscheit.com/),\n[James Bergfeld](mailto:j.bergfeld@tum.de)\n\n## Abstract\n\nThis work provides a comprehensive technical analysis of browser fingerprinting techniques, in particular using FingerprintJS. Browser fingerprinting allows individual users to be identified based on specific characteristics of their web browser without the need for cookies or other traditional tracking methods. This study examines the various components and mechanisms of FingerprintJS in detail, including their ability to create unique fingerprints and evaluate their accuracy and reliability. In addition, the effectiveness of these fingerprinting techniques in various application scenarios is analyzed and evaluated.\n\nA central part of this research is the development of a custom fingerprinting library and the collection of our own dataset to validate and evaluate the methods. By analyzing this dataset, additional insights into the practical challenges and performance of the fingerprinting methods could be gained. The goal is to highlight the strengths and weaknesses of the current methods and to identify possible improvements and possible fingerprinting countermeasures.\n\n## General\n\n-   [demo/](./demo) Contains a POC with the fingerprint.pro.js library that can be run locally.\n\n-   [notes/](./notes) Contains notes and assets for documentation.\n\n-   [paper/](./paper) Contains the paper in typst with all assets.\n\n-   [overrides](./overrides) Contains the browser overrides (JS source files) to debug the [FingerprintJS demo](https://fingerprint.com/demo/).\n\n-   [website](./website) Contains the [website](https://fingerprint.samuelscheit.com/) with the custom fingerprinting library.\n"
		},
		"commits": [
			{
				"committedDate": "2024-09-18T20:39:37Z",
				"message": "Merge pull request #2 from SamuelScheit/dependabot/npm_and_yarn/website/next-14.2.10\n\nbuild(deps): bump next from 14.2.3 to 14.2.10 in /website",
				"messageBody": "…te/next-14.2.10\n\nbuild(deps): bump next from 14.2.3 to 14.2.10 in /website"
			},
			{
				"committedDate": "2024-09-12T12:06:39Z",
				"message": "Merge pull request #1 from SamuelScheit/dependabot/npm_and_yarn/website/micromatch-4.0.8\n\nbuild(deps): bump micromatch from 4.0.7 to 4.0.8 in /website",
				"messageBody": "…te/micromatch-4.0.8\n\nbuild(deps): bump micromatch from 4.0.7 to 4.0.8 in /website"
			},
			{
				"committedDate": "2024-08-08T21:24:12Z",
				"message": "final",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-29T11:44:48Z",
				"message": "final",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-29T11:43:54Z",
				"message": "final",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-29T11:38:15Z",
				"message": "final",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-27T16:27:55Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-27T16:27:42Z",
				"message": "feat: add analysis script",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-09T23:24:31Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-09T23:19:11Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-09T23:18:30Z",
				"message": "fix: ip",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-09T22:43:48Z",
				"message": "fix: docker",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-09T21:19:38Z",
				"message": "feat: working percentage calculation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-03T11:26:02Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-03T11:19:58Z",
				"message": "feat: deploy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T16:14:41Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T16:13:34Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T16:09:29Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T16:06:09Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T15:59:37Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T15:59:16Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T15:58:33Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-10T15:58:11Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-05T10:57:50Z",
				"message": "fix: sql query",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-05T10:48:56Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-05T10:34:09Z",
				"message": "feat: table",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-05T10:16:10Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-05T09:46:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-05T09:44:07Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-05T09:35:43Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-04T02:44:54Z",
				"message": "feat: update paper + website",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-01T10:49:00Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T21:07:45Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T15:24:38Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T15:24:02Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T15:11:59Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T15:08:07Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T15:06:55Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T01:44:36Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T01:31:52Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T01:08:13Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T01:04:01Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-31T00:59:17Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-30T15:36:01Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-30T14:46:32Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T18:42:27Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T18:35:40Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T18:29:49Z",
				"message": "fix: schema",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T18:26:51Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T18:18:24Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T18:14:43Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T18:04:46Z",
				"message": "move dir",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T17:53:16Z",
				"message": "fix: website",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-29T02:29:37Z",
				"message": "feat: finish website",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T22:48:20Z",
				"message": "wip: custom lib implementation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T14:32:17Z",
				"message": "feat: update stages + paper",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-09T23:06:13Z",
				"message": "feat: update stage documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-09T22:42:10Z",
				"message": "feat: update stage documentation",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-09T19:19:56Z",
				"message": "feat: add documentation for all stages",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-09T02:09:29Z",
				"message": "wip: audio fingerprint",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-09T01:59:59Z",
				"message": "feat: add explanations for few stages",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-08T20:23:37Z",
				"message": "feat: add more properties",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-08T20:23:18Z",
				"message": "feat: manual demo",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-08T17:45:16Z",
				"message": "update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-08T17:42:08Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "1. Features: \n   1. Analysis script\n   2. Working percentage calculation\n   3. Deploy\n   4. Table\n   5. Update paper + website\n   6. Update stages + paper\n   7. Update stage documentation\n   8. Documentation for all stages\n   9. Add explanations for few stages\n   10. Add more properties\n   11. Manual demo\n\n2. Fixes:\n   1. ip\n   2. Docker\n   3. SQL query\n   4. Schema\n   5. Website\n\n3. Work-in-Progress:\n   1. Custom lib implementation\n   2. Audio fingerprint"
	},
	{
		"id": "R_kgDOE0fcVg",
		"description": "A Library for puppeteer to retrieve audio and/or video streams",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/puppeteer-stream",
		"name": "puppeteer-stream",
		"nameWithOwner": "SamuelScheit/puppeteer-stream",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2020-12-22T00:05:19Z",
		"updatedAt": "2024-10-10T07:08:40Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/323476566/402009dd-03ae-463a-b1bc-0b576fe2a2fd",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 115,
		"isFork": false,
		"languages": {
			"totalCount": 4,
			"totalSize": 15413,
			"edges": [
				{
					"size": 12050,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 3161,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 153,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				}
			]
		},
		"stargazerCount": 360,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOE0fcVq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 145
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2024-10-04T10:10:39Z",
				"message": "Merge pull request #174 from lorikku/fix-constraints-args",
				"messageBody": ""
			},
			{
				"committedDate": "2024-10-04T10:10:03Z",
				"message": "fix: types",
				"messageBody": ""
			},
			{
				"committedDate": "2024-10-04T09:41:59Z",
				"message": "fix: race condition when capturing multiple tabs simultaneously",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-28T13:29:19Z",
				"message": "v3.0.18",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-28T13:27:35Z",
				"message": "v3.0.17",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-28T13:27:25Z",
				"message": "Merge pull request #173 from lorikku/optional-tab-query-options",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-18T20:40:41Z",
				"message": "Merge pull request #171 from DoctorFTB/main\n\nfix: remove testing code",
				"messageBody": "fix: remove testing code"
			},
			{
				"committedDate": "2024-09-18T20:27:48Z",
				"message": "Merge pull request #170 from DoctorFTB/main\n\nfeat: public getExtensionPage",
				"messageBody": "feat: public getExtensionPage"
			},
			{
				"committedDate": "2024-09-17T12:43:33Z",
				"message": "v3.0.16",
				"messageBody": ""
			},
			{
				"committedDate": "2024-09-17T12:43:12Z",
				"message": "feat: add extensionPath docs",
				"messageBody": ""
			},
			{
				"committedDate": "2024-08-28T16:40:48Z",
				"message": "Merge pull request #169 from htdangkhoa/patch-1\n\nfix: cannot launch browser because wrong executablePath",
				"messageBody": "fix: cannot launch browser because wrong executablePath"
			},
			{
				"committedDate": "2024-08-06T07:16:10Z",
				"message": "Merge pull request #167 from tarikhagustia/main",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-25T22:59:22Z",
				"message": "v3.0.15",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-25T22:59:04Z",
				"message": "feat: update dependency + fix type",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-19T15:20:07Z",
				"message": "Merge pull request #164 from yuekui/main\n\nUpdate puppeteer-core and ws",
				"messageBody": "Update puppeteer-core and ws"
			},
			{
				"committedDate": "2024-06-19T15:19:44Z",
				"message": "update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2024-06-19T15:18:09Z",
				"message": "Merge pull request #163 from ramiel/main\n\nRemove console.log",
				"messageBody": "Remove console.log"
			},
			{
				"committedDate": "2024-05-15T16:24:51Z",
				"message": "v3.0.14",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T16:24:17Z",
				"message": "update example",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T16:24:17Z",
				"message": "v3.0.13",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T16:21:31Z",
				"message": "Merge pull request #157 from TalkLounge/main",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T16:21:14Z",
				"message": "chore: format",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T16:20:51Z",
				"message": "update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-15T11:30:12Z",
				"message": "README.md aktualisieren",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-06T15:43:11Z",
				"message": "v3.0.12",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-06T15:42:46Z",
				"message": "fix: recording",
				"messageBody": ""
			},
			{
				"committedDate": "2024-05-01T21:13:05Z",
				"message": "v3.0.11",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-30T15:31:14Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-07T19:09:50Z",
				"message": "v3.0.10",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-07T19:09:29Z",
				"message": "fix: tab not found",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-07T19:09:25Z",
				"message": "Merge pull request #154 from TalkLounge/docu\n\nUpdate code example on how to properly close",
				"messageBody": "Update code example on how to properly close"
			},
			{
				"committedDate": "2024-04-07T19:09:00Z",
				"message": "v3.0.9",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-07T19:08:55Z",
				"message": "Merge pull request #155 from TalkLounge/protocol-error\n\nFix TargetCloseError",
				"messageBody": "Fix TargetCloseError"
			},
			{
				"committedDate": "2024-03-07T17:22:41Z",
				"message": "Merge pull request #150 from TalkLounge/main\n\nEnable parallel recordings",
				"messageBody": "Enable parallel recordings"
			},
			{
				"committedDate": "2024-03-07T17:21:18Z",
				"message": "fix: tsconfig version change",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-07T17:16:51Z",
				"message": "Merge pull request #138 from Takeno/patch-1\n\nfix: comma separated --window-size value",
				"messageBody": "fix: comma separated --window-size value"
			},
			{
				"committedDate": "2024-02-17T01:11:24Z",
				"message": "feat: add multi tab example",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-17T01:11:09Z",
				"message": "v3.0.8",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-17T01:10:29Z",
				"message": "feat: improve concurrency with better tab managment",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-29T13:35:54Z",
				"message": "v3.0.7",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-29T13:34:05Z",
				"message": "feat: make close timeout configurable",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-26T13:30:40Z",
				"message": "feat: migrate to websocket for data transmission",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-07T17:40:02Z",
				"message": "fix: ffmpeg example",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-19T10:09:16Z",
				"message": "Merge pull request #122 from noeRls/main\n\nFix typing of the launch function when using puppeteer library as first argument",
				"messageBody": "Fix typing of the launch function when using puppeteer library as first argument"
			},
			{
				"committedDate": "2023-06-27T22:28:20Z",
				"message": "v3.0.5",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-27T22:25:09Z",
				"message": "Merge pull request #119 from SamuelScheit/pr/nivhsay/118-2\n\nfeat: use tcp transmission and remove udp",
				"messageBody": "feat: use tcp transmission and remove udp"
			},
			{
				"committedDate": "2023-06-27T22:24:46Z",
				"message": "Merge pull request #118 from nivhsay/feature/tcp-transmission\n\nsupport for tcp transmission",
				"messageBody": "support for tcp transmission"
			},
			{
				"committedDate": "2023-06-27T22:23:29Z",
				"message": "feat: use tcp transmission and remove udp",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-20T19:52:24Z",
				"message": "Merge pull request #117 from tmm1/ffmpeg-copy",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-20T18:58:47Z",
				"message": "Merge pull request #116 from tmm1/update-url",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-20T18:58:28Z",
				"message": "Merge pull request #115 from tmm1/no-pinned-tab",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-20T18:40:45Z",
				"message": "Merge pull request #114 from tmm1/win32",
				"messageBody": ""
			},
			{
				"committedDate": "2023-06-20T18:38:41Z",
				"message": "Merge pull request #113 from tmm1/bump-puppeteer",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-16T15:29:36Z",
				"message": "v3.0.4",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-26T21:10:03Z",
				"message": "Merge pull request #97 from SoTrxII/main\n\nSolving a race condition",
				"messageBody": "Solving a race condition"
			},
			{
				"committedDate": "2023-04-26T21:09:46Z",
				"message": "Merge branch 'main' into main",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-26T21:06:09Z",
				"message": "Merge pull request #102 from oleghind/patch-1\n\nFix missing export of UDPStream",
				"messageBody": "Fix missing export of UDPStream"
			},
			{
				"committedDate": "2023-03-28T15:24:34Z",
				"message": "v3.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-28T15:23:24Z",
				"message": "feat: add audioConstraints",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-28T11:43:00Z",
				"message": "v3.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-28T11:42:28Z",
				"message": "Merge pull request #96 from swaniris/main\n\nUse allowlisted-extension-id instead whitelisted-extension-id",
				"messageBody": "Use allowlisted-extension-id instead whitelisted-extension-id"
			},
			{
				"committedDate": "2023-03-13T17:43:17Z",
				"message": "feat: allowIncognito option",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-06T01:37:49Z",
				"message": "v3.0.1",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-06T01:37:40Z",
				"message": "fix: type",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-06T01:23:28Z",
				"message": "ci: npm",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-06T01:19:20Z",
				"message": "ci: npm",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-06T01:18:02Z",
				"message": "v3.0.0",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-06T01:17:46Z",
				"message": "feat: rewrite extension manifest V3 + UDP socket for transmission",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T12:38:04Z",
				"message": "2.1.4",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T12:36:55Z",
				"message": "Merge pull request #83 from audiopump/expose-timecode",
				"messageBody": ""
			},
			{
				"committedDate": "2023-01-11T12:35:27Z",
				"message": "Merge pull request #82 from audiopump/use-chrome-bin-env-var\n\nUse CHROME_BIN environment variable to specify path to Chrome/Chromium.",
				"messageBody": "Use CHROME_BIN environment variable to specify path to Chrome/Chromium."
			},
			{
				"committedDate": "2022-12-15T21:24:50Z",
				"message": "2.1.2",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-15T21:24:07Z",
				"message": "Merge pull request #55 from simllll/patch-1\n\nlittle refactoring and fix for tab index",
				"messageBody": "little refactoring and fix for tab index"
			},
			{
				"committedDate": "2022-12-15T21:23:14Z",
				"message": "v2.1.3",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-15T21:22:48Z",
				"message": "v2.1.2",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-15T21:20:17Z",
				"message": "style: reformat",
				"messageBody": ""
			},
			{
				"committedDate": "2022-12-09T13:05:28Z",
				"message": "Merge pull request #79 from asim-aashish/main\n\nFix: change global variable to local variable",
				"messageBody": "Fix: change global variable to local variable"
			},
			{
				"committedDate": "2022-12-06T11:50:16Z",
				"message": "Merge pull request #77 from romain130492/chore/readme\n\nChore/read-me-with-video-contraints",
				"messageBody": "Chore/read-me-with-video-contraints"
			},
			{
				"committedDate": "2022-12-06T11:49:59Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-08T12:32:13Z",
				"message": "Merge pull request #73 from dax-hurley/fix-waitfortarget\n\nHave waitForTarget() extension search use url instead of private field.",
				"messageBody": "Have waitForTarget() extension search use url instead of private field."
			},
			{
				"committedDate": "2022-11-08T12:31:50Z",
				"message": "update puppeteer",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-28T21:58:25Z",
				"message": "Update PuppeteerStream.ts",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-28T21:56:42Z",
				"message": "Delete .DS_Store",
				"messageBody": ""
			},
			{
				"committedDate": "2022-07-19T12:54:58Z",
				"message": "Merge pull request #59 from ownagedj/main\n\nfeat: use puppeteer-core",
				"messageBody": "feat: use puppeteer-core"
			},
			{
				"committedDate": "2022-06-29T14:21:58Z",
				"message": "Merge pull request #56 from DantrazTrev/patch-1",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-07T21:00:40Z",
				"message": "Merge pull request #51 from ganganimaulik/feat/extra-plugin\n\nsecond argument optional - typescript",
				"messageBody": "second argument optional - typescript"
			},
			{
				"committedDate": "2022-05-24T02:38:08Z",
				"message": "Merge pull request #48 from ganganimaulik/feat/extra-plugin",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-21T11:38:43Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2022-05-21T11:38:32Z",
				"message": "use MIT license",
				"messageBody": ""
			},
			{
				"committedDate": "2022-03-12T12:31:36Z",
				"message": "Update ffmpeg.js",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:49:58Z",
				"message": "2.0.9",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:49:35Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/puppeteer-stream",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:49:01Z",
				"message": "2.0.8",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:48:56Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:45:07Z",
				"message": ":bug: fix #36",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:44:46Z",
				"message": ":bug: fix #37",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:41:18Z",
				"message": ":bug: fix #34",
				"messageBody": ""
			},
			{
				"committedDate": "2022-02-05T15:36:06Z",
				"message": ":bug: fix #35",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-24T10:05:05Z",
				"message": "Update .npmignore",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-24T10:03:21Z",
				"message": "2.0.8",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-24T09:40:32Z",
				"message": "Merge pull request #32 from natashafenech/patch-1\n\nAdd option to pass videoConstraints",
				"messageBody": "Add option to pass videoConstraints"
			},
			{
				"committedDate": "2022-01-11T15:07:37Z",
				"message": "Merge pull request #29 from Cheaterflums/main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-21T08:21:47Z",
				"message": "2.0.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-24T13:38:16Z",
				"message": "Merge pull request #18 from InsideBSITheSecond/main\n\nFixing .destroy()",
				"messageBody": "Fixing .destroy()"
			},
			{
				"committedDate": "2021-07-25T12:58:32Z",
				"message": "2.0.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-25T12:58:30Z",
				"message": ":bug: wait for target",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-04T13:38:35Z",
				"message": "2.0.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-04T13:38:32Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-30T19:47:10Z",
				"message": "2.0.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-30T19:28:07Z",
				"message": "Merge pull request #11 from TalkLounge/patch-1\n\nFix extension loading",
				"messageBody": "Fix extension loading"
			},
			{
				"committedDate": "2021-06-21T16:50:08Z",
				"message": "Delete output.mp4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-05T08:39:41Z",
				"message": "2.0.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-05T08:39:34Z",
				"message": ":pencil: docs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-20T13:58:04Z",
				"message": "2.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-20T13:58:00Z",
				"message": "add gitignore",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-20T13:57:38Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/puppeteer-stream into main",
				"messageBody": "…into main"
			},
			{
				"committedDate": "2021-02-19T08:39:49Z",
				"message": "Merge pull request #3 from javimey/fixing_typo\n\nFixed typo in README.md example",
				"messageBody": "Fixed typo in README.md example"
			},
			{
				"committedDate": "2021-02-18T17:30:46Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-18T17:26:07Z",
				"message": "Delete .DS_Store",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-18T17:25:26Z",
				"message": "2.0.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-18T17:25:20Z",
				"message": ":pencil: update examples",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-18T17:22:23Z",
				"message": "do not patch puppeteer but, export functions",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T11:15:03Z",
				"message": "1.0.7",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T11:15:00Z",
				"message": ":art: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T11:03:21Z",
				"message": "1.0.6",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T11:03:15Z",
				"message": ":art: update examples",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T10:58:18Z",
				"message": "1.0.5",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T10:58:10Z",
				"message": ":bug: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:47:51Z",
				"message": "1.0.4",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:47:40Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:45:37Z",
				"message": "1.0.3",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:45:30Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:44:02Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:43:33Z",
				"message": "1.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:43:26Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:21:43Z",
				"message": "1.0.1",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:21:35Z",
				"message": ":art: restructure dirs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:21:21Z",
				"message": ":art:",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:19:59Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:18:04Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/puppeteer-stream into main",
				"messageBody": "…into main"
			},
			{
				"committedDate": "2020-12-22T03:18:03Z",
				"message": ":bug: move file",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:17:17Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T03:16:25Z",
				"message": ":sparkles: init + Readme",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T02:04:36Z",
				"message": "🌊 Puppeteer-Stream",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-22T00:05:21Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Feature additions:**\n- Rewrite extension manifest V3 + UDP socket for transmission\n- Migrate to websocket for data transmission\n- Use tcp transmission and remove udp\n- Add audioConstraints\n- AllowIncognito option\n- Improve concurrency with better tab managment\n- Make close timeout configurable\n- Add multi tab example\n- Add extensionPath docs\n- Update dependency\n\n**Bug fixes:**\n- type\n- race condition when capturing multiple tabs simultaneously\n- recording\n- tab not found\n- tsconfig version change\n- ffmpeg example\n\n**Other changes:**\n- Chore: format\n- Update example\n- Update readme\n- Update PuppeteerStream.ts\n- Update package.json\n- Update dependencies\n- update ffmpeg.js\n- Use MIT license\n- Delete .DS_Store\n- Initial commit"
	},
	{
		"id": "R_kgDOK3t5XQ",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/Baileys",
		"name": "Baileys",
		"nameWithOwner": "SamuelScheit/Baileys",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-12-09T13:18:39Z",
		"updatedAt": "2024-09-09T20:55:46Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/34555296?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 1,
			"nodes": [
				{
					"createdAt": "2024-09-09T20:55:42Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 0
							}
						]
					}
				}
			]
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 5057605,
			"edges": [
				{
					"size": 4622481,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 434721,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 403,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOK3t5XbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 49
				}
			}
		},
		"object": {
			"text": "# Baileys - Typescript/Javascript WhatsApp Web API\n\n### Important Note\n\nThis library was originally a project for **CS-2362 at Ashoka University** and is in no way affiliated with or endorsed by WhatsApp. Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage. \n\n#### Liability and License Notice\nBaileys and its maintainers cannot be held liable for misuse of this application, as stated in the [MIT license](https://github.com/WhiskeySockets/Baileys/blob/master/LICENSE).\nThe maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.\n##\n\nBaileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. \nNot running Selenium or Chromimum saves you like **half a gig** of ram :/ \nBaileys supports interacting with the multi-device & web versions of WhatsApp.\nThank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.\n \n## Please Read\n\nThe original repository had to be removed by the original author - we now continue development in this repository here.\nThis is the only official repository and is maintained by the community.\n **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**\n \n## Example\n\nDo check out & run [example.ts](Example/example.ts) to see an example usage of the library.\nThe script covers most common use cases.\nTo run the example script, download or clone the repo and then type the following in a terminal:\n1. ``` cd path/to/Baileys ```\n2. ``` yarn ```\n3. ``` yarn example ```\n\n## Install\n\nUse the stable version:\n```\nyarn add @whiskeysockets/baileys\n```\n\nUse the edge version (no guarantee of stability, but latest fixes + features)\n```\nyarn add github:WhiskeySockets/Baileys\n```\n\nThen import your code using:\n``` ts \nimport makeWASocket from '@whiskeysockets/baileys'\n```\n\n## Unit Tests\n\nTODO\n\n## Connecting multi device (recommended)\n\nWhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a QR code with WhatsApp on your phone.\n\n``` ts\nimport makeWASocket, { DisconnectReason } from '@whiskeysockets/baileys'\nimport { Boom } from '@hapi/boom'\n\nasync function connectToWhatsApp () {\n    const sock = makeWASocket({\n        // can provide additional config here\n        printQRInTerminal: true\n    })\n    sock.ev.on('connection.update', (update) => {\n        const { connection, lastDisconnect } = update\n        if(connection === 'close') {\n            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut\n            console.log('connection closed due to ', lastDisconnect.error, ', reconnecting ', shouldReconnect)\n            // reconnect if not logged out\n            if(shouldReconnect) {\n                connectToWhatsApp()\n            }\n        } else if(connection === 'open') {\n            console.log('opened connection')\n        }\n    })\n    sock.ev.on('messages.upsert', m => {\n        console.log(JSON.stringify(m, undefined, 2))\n\n        console.log('replying to', m.messages[0].key.remoteJid)\n        await sock.sendMessage(m.messages[0].key.remoteJid!, { text: 'Hello there!' })\n    })\n}\n// run in main file\nconnectToWhatsApp()\n``` \n\nIf the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you'll be logged in!\n\n**Note:** install `qrcode-terminal` using `yarn add qrcode-terminal` to auto-print the QR to the terminal.\n\n**Note:** the code to support the legacy version of WA Web (pre multi-device) has been removed in v5. Only the standard multi-device connection is now supported. This is done as WA seems to have completely dropped support for the legacy version.\n\n## Connecting native mobile api\n\nBaileys also supports the native mobile API, which allows users to authenticate as a standalone WhatsApp client using their phone number.\n\nRun the [example](Example/example.ts) file with ``--mobile`` cli flag to use the native mobile API.\n\n## Configuring the Connection\n\nYou can configure the connection by passing a `SocketConfig` object.\n\nThe entire `SocketConfig` structure is mentioned here with default values:\n``` ts\ntype SocketConfig = {\n    /** the WS url to connect to WA */\n    waWebSocketUrl: string | URL\n    /** Fails the connection if the socket times out in this interval */\n\tconnectTimeoutMs: number\n    /** Default timeout for queries, undefined for no timeout */\n    defaultQueryTimeoutMs: number | undefined\n    /** ping-pong interval for WS connection */\n    keepAliveIntervalMs: number\n    /** proxy agent */\n\tagent?: Agent\n    /** pino logger */\n\tlogger: Logger\n    /** version to connect with */\n    version: WAVersion\n    /** override browser config */\n\tbrowser: WABrowserDescription\n\t/** agent used for fetch requests -- uploading/downloading media */\n\tfetchAgent?: Agent\n    /** should the QR be printed in the terminal */\n    printQRInTerminal: boolean\n    /** should events be emitted for actions done by this socket connection */\n    emitOwnEvents: boolean\n    /** provide a cache to store media, so does not have to be re-uploaded */\n    mediaCache?: NodeCache\n    /** custom upload hosts to upload media to */\n    customUploadHosts: MediaConnInfo['hosts']\n    /** time to wait between sending new retry requests */\n    retryRequestDelayMs: number\n    /** time to wait for the generation of the next QR in ms */\n    qrTimeout?: number;\n    /** provide an auth state object to maintain the auth state */\n    auth: AuthenticationState\n    /** manage history processing with this control; by default will sync up everything */\n    shouldSyncHistoryMessage: (msg: proto.Message.IHistorySyncNotification) => boolean\n    /** transaction capability options for SignalKeyStore */\n    transactionOpts: TransactionCapabilityOptions\n    /** provide a cache to store a user's device list */\n    userDevicesCache?: NodeCache\n    /** marks the client as online whenever the socket successfully connects */\n    markOnlineOnConnect: boolean\n    /**\n     * map to store the retry counts for failed messages;\n     * used to determine whether to retry a message or not */\n    msgRetryCounterMap?: MessageRetryMap\n    /** width for link preview images */\n    linkPreviewImageThumbnailWidth: number\n    /** Should Baileys ask the phone for full history, will be received async */\n    syncFullHistory: boolean\n    /** Should baileys fire init queries automatically, default true */\n    fireInitQueries: boolean\n    /**\n     * generate a high quality link preview,\n     * entails uploading the jpegThumbnail to WA\n     * */\n    generateHighQualityLinkPreview: boolean\n\n    /** options for axios */\n    options: AxiosRequestConfig<any>\n    /**\n     * fetch a message from your store\n     * implement this so that messages failed to send (solves the \"this message can take a while\" issue) can be retried\n     * */\n    getMessage: (key: proto.IMessageKey) => Promise<proto.IMessage | undefined>\n}\n```\n\n### Emulating the Desktop app instead of the web\n\n1. Baileys, by default, emulates a chrome web session\n2. If you'd like to emulate a desktop connection (and receive more message history), add this to your Socket config:\n    ``` ts\n    const conn = makeWASocket({\n        ...otherOpts,\n        // can use Windows, Ubuntu here too\n        browser: Browsers.macOS('Desktop'),\n        syncFullHistory: true\n    })\n    ```\n\n## Saving & Restoring Sessions\n\nYou obviously don't want to keep scanning the QR code every time you want to connect. \n\nSo, you can load the credentials to log back in:\n``` ts\nimport makeWASocket, { BufferJSON, useMultiFileAuthState } from '@whiskeysockets/baileys'\nimport * as fs from 'fs'\n\n// utility function to help save the auth state in a single folder\n// this function serves as a good guide to help write auth & key states for SQL/no-SQL databases, which I would recommend in any production grade system\nconst { state, saveCreds } = await useMultiFileAuthState('auth_info_baileys')\n// will use the given state to connect\n// so if valid credentials are available -- it'll connect without QR\nconst conn = makeWASocket({ auth: state }) \n// this will be called as soon as the credentials are updated\nconn.ev.on ('creds.update', saveCreds)\n```\n\n**Note:** When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient & cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.\n\n## Listening to Connection Updates\n\nBaileys now fires the `connection.update` event to let you know something has updated in the connection. This data has the following structure:\n``` ts\ntype ConnectionState = {\n\t/** connection is now open, connecting or closed */\n\tconnection: WAConnectionState\n\t/** the error that caused the connection to close */\n\tlastDisconnect?: {\n\t\terror: Error\n\t\tdate: Date\n\t}\n\t/** is this a new login */\n\tisNewLogin?: boolean\n\t/** the current QR code */\n\tqr?: string\n\t/** has the device received all pending notifications while it was offline */\n\treceivedPendingNotifications?: boolean \n}\n```\n\n**Note:** this also offers any updates to the QR\n\n## Handling Events\n\nBaileys uses the EventEmitter syntax for events. \nThey're all nicely typed up, so you shouldn't have any issues with an Intellisense editor like VS Code.\n\nThe events are typed as mentioned here:\n\n``` ts\n\nexport type BaileysEventMap = {\n    /** connection state has been updated -- WS closed, opened, connecting etc. */\n\t'connection.update': Partial<ConnectionState>\n    /** credentials updated -- some metadata, keys or something */\n    'creds.update': Partial<AuthenticationCreds>\n    /** history sync, everything is reverse chronologically sorted */\n    'messaging-history.set': {\n        chats: Chat[]\n        contacts: Contact[]\n        messages: WAMessage[]\n        isLatest: boolean\n    }\n    /** upsert chats */\n    'chats.upsert': Chat[]\n    /** update the given chats */\n    'chats.update': Partial<Chat>[]\n    /** delete chats with given ID */\n    'chats.delete': string[]\n    'labels.association': LabelAssociation\n    'labels.edit': Label\n    /** presence of contact in a chat updated */\n    'presence.update': { id: string, presences: { [participant: string]: PresenceData } }\n\n    'contacts.upsert': Contact[]\n    'contacts.update': Partial<Contact>[]\n\n    'messages.delete': { keys: WAMessageKey[] } | { jid: string, all: true }\n    'messages.update': WAMessageUpdate[]\n    'messages.media-update': { key: WAMessageKey, media?: { ciphertext: Uint8Array, iv: Uint8Array }, error?: Boom }[]\n    /**\n     * add/update the given messages. If they were received while the connection was online,\n     * the update will have type: \"notify\"\n     *  */\n    'messages.upsert': { messages: WAMessage[], type: MessageUpsertType }\n    /** message was reacted to. If reaction was removed -- then \"reaction.text\" will be falsey */\n    'messages.reaction': { key: WAMessageKey, reaction: proto.IReaction }[]\n\n    'message-receipt.update': MessageUserReceiptUpdate[]\n\n    'groups.upsert': GroupMetadata[]\n    'groups.update': Partial<GroupMetadata>[]\n    /** apply an action to participants in a group */\n    'group-participants.update': { id: string, participants: string[], action: ParticipantAction }\n\n    'blocklist.set': { blocklist: string[] }\n    'blocklist.update': { blocklist: string[], type: 'add' | 'remove' }\n    /** Receive an update on a call, including when the call was received, rejected, accepted */\n    'call': WACallEvent[]\n}\n```\n\nYou can listen to these events like this:\n``` ts\n\nconst sock = makeWASocket()\nsock.ev.on('messages.upsert', ({ messages }) => {\n    console.log('got messages', messages)\n})\n\n```\n\n## Implementing a Data Store\n\nBaileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.\n\nIt can be used as follows:\n\n``` ts\nimport makeWASocket, { makeInMemoryStore } from '@whiskeysockets/baileys'\n// the store maintains the data of the WA connection in memory\n// can be written out to a file & read from it\nconst store = makeInMemoryStore({ })\n// can be read from a file\nstore.readFromFile('./baileys_store.json')\n// saves the state to a file every 10s\nsetInterval(() => {\n    store.writeToFile('./baileys_store.json')\n}, 10_000)\n\nconst sock = makeWASocket({ })\n// will listen from this socket\n// the store can listen from a new socket once the current socket outlives its lifetime\nstore.bind(sock.ev)\n\nsock.ev.on('chats.set', () => {\n    // can use \"store.chats\" however you want, even after the socket dies out\n    // \"chats\" => a KeyedDB instance\n    console.log('got chats', store.chats.all())\n})\n\nsock.ev.on('contacts.set', () => {\n    console.log('got contacts', Object.values(store.contacts))\n})\n\n```\n\nThe store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.\n\n**Note:** I highly recommend building your own data store especially for MD connections, as storing someone's entire chat history in memory is a terrible waste of RAM.\n\n## Sending Messages\n\n**Send all types of messages with a single function:**\n\n### Non-Media Messages\n\n``` ts\nimport { MessageType, MessageOptions, Mimetype } from '@whiskeysockets/baileys'\n\nconst id = 'abcd@s.whatsapp.net' // the WhatsApp ID \n// send a simple text!\nconst sentMsg  = await sock.sendMessage(id, { text: 'oh hello there' })\n// send a reply messagge\nconst sentMsg  = await sock.sendMessage(id, { text: 'oh hello there' }, { quoted: message })\n// send a mentions message\nconst sentMsg  = await sock.sendMessage(id, { text: '@12345678901', mentions: ['12345678901@s.whatsapp.net'] })\n// send a location!\nconst sentMsg  = await sock.sendMessage(\n    id, \n    { location: { degreesLatitude: 24.121231, degreesLongitude: 55.1121221 } }\n)\n// send a contact!\nconst vcard = 'BEGIN:VCARD\\n' // metadata of the contact card\n            + 'VERSION:3.0\\n' \n            + 'FN:Jeff Singh\\n' // full name\n            + 'ORG:Ashoka Uni;\\n' // the organization of the contact\n            + 'TEL;type=CELL;type=VOICE;waid=911234567890:+91 12345 67890\\n' // WhatsApp ID + phone number\n            + 'END:VCARD'\nconst sentMsg  = await sock.sendMessage(\n    id,\n    { \n        contacts: { \n            displayName: 'Jeff', \n            contacts: [{ vcard }] \n        }\n    }\n)\n\nconst reactionMessage = {\n    react: {\n        text: \"💖\", // use an empty string to remove the reaction\n        key: message.key\n    }\n}\n\nconst sendMsg = await sock.sendMessage(id, reactionMessage)\n```\n\n### Sending messages with link previews\n\n1. By default, WA MD does not have link generation when sent from the web\n2. Baileys has a function to generate the content for these link previews\n3. To enable this function's usage, add `link-preview-js` as a dependency to your project with `yarn add link-preview-js`\n4. Send a link:\n``` ts\n// send a link\nconst sentMsg  = await sock.sendMessage(id, { text: 'Hi, this was sent using https://github.com/adiwajshing/baileys' })\n```\n\n### Media Messages\n\nSending media (video, stickers, images) is easier & more efficient than ever. \n- You can specify a buffer, a local url or even a remote url.\n- When specifying a media url, Baileys never loads the entire buffer into memory; it even encrypts the media as a readable stream.\n\n``` ts\nimport { MessageType, MessageOptions, Mimetype } from '@whiskeysockets/baileys'\n// Sending gifs\nawait sock.sendMessage(\n    id, \n    { \n        video: fs.readFileSync(\"Media/ma_gif.mp4\"), \n        caption: \"hello!\",\n        gifPlayback: true\n    }\n)\n\nawait sock.sendMessage(\n    id, \n    { \n        video: \"./Media/ma_gif.mp4\", \n        caption: \"hello!\",\n        gifPlayback: true\n    }\n)\n\n// send an audio file\nawait sock.sendMessage(\n    id, \n    { audio: { url: \"./Media/audio.mp3\" }, mimetype: 'audio/mp4' }\n    { url: \"Media/audio.mp3\" }, // can send mp3, mp4, & ogg\n)\n```\n\n### Notes\n\n- `id` is the WhatsApp ID of the person or group you're sending the message to. \n    - It must be in the format ```[country code][phone number]@s.whatsapp.net```\n\t    - Example for people: ```+19999999999@s.whatsapp.net```. \n\t    - For groups, it must be in the format ``` 123456789-123345@g.us ```. \n    - For broadcast lists, it's `[timestamp of creation]@broadcast`.\n    - For stories, the ID is `status@broadcast`.\n- For media messages, the thumbnail can be generated automatically for images & stickers provided you add `jimp` or `sharp` as a dependency in your project using `yarn add jimp` or `yarn add sharp`. Thumbnails for videos can also be generated automatically, though, you need to have `ffmpeg` installed on your system.\n- **MiscGenerationOptions**: some extra info about the message. It can have the following __optional__ values:\n    ``` ts\n    const info: MessageOptions = {\n        quoted: quotedMessage, // the message you want to quote\n        contextInfo: { forwardingScore: 2, isForwarded: true }, // some random context info (can show a forwarded message with this too)\n        timestamp: Date(), // optional, if you want to manually set the timestamp of the message\n        caption: \"hello there!\", // (for media messages) the caption to send with the media (cannot be sent with stickers though)\n        jpegThumbnail: \"23GD#4/==\", /*  (for location & media messages) has to be a base 64 encoded JPEG if you want to send a custom thumb, \n                                    or set to null if you don't want to send a thumbnail.\n                                    Do not enter this field if you want to automatically generate a thumb\n                                */\n        mimetype: Mimetype.pdf, /* (for media messages) specify the type of media (optional for all media types except documents),\n                                    import {Mimetype} from '@whiskeysockets/baileys'\n                                */\n        fileName: 'somefile.pdf', // (for media messages) file name for the media\n        /* will send audio messages as voice notes, if set to true */\n        ptt: true,\n        /** Should it send as a disappearing messages. \n         * By default 'chat' -- which follows the setting of the chat */\n        ephemeralExpiration: WA_DEFAULT_EPHEMERAL\n    }\n    ```\n## Forwarding Messages\n\n``` ts\nconst msg = getMessageFromStore('455@s.whatsapp.net', 'HSJHJWH7323HSJSJ') // implement this on your end\nawait sock.sendMessage('1234@s.whatsapp.net', { forward: msg }) // WA forward the message!\n```\n\n## Reading Messages\n\nA set of message keys must be explicitly marked read now. \nIn multi-device, you cannot mark an entire \"chat\" read as it were with Baileys Web.\nThis means you have to keep track of unread messages.\n\n``` ts\nconst key = {\n    remoteJid: '1234-123@g.us',\n    id: 'AHASHH123123AHGA', // id of the message you want to read\n    participant: '912121232@s.whatsapp.net' // the ID of the user that sent the  message (undefined for individual chats)\n}\n// pass to readMessages function\n// can pass multiple keys to read multiple messages as well\nawait sock.readMessages([key])\n```\n\nThe message ID is the unique identifier of the message that you are marking as read. \nOn a `WAMessage`, the `messageID` can be accessed using ```messageID = message.key.id```.\n\n## Update Presence\n\n``` ts\nawait sock.sendPresenceUpdate('available', id) \n\n```\nThis lets the person/group with ``` id ``` know whether you're online, offline, typing etc. \n\n``` presence ``` can be one of the following:\n``` ts\ntype WAPresence = 'unavailable' | 'available' | 'composing' | 'recording' | 'paused'\n```\n\nThe presence expires after about 10 seconds.\n\n**Note:** In the multi-device version of WhatsApp -- if a desktop client is active, WA doesn't send push notifications to the device. If you would like to receive said notifications -- mark your Baileys client offline using `sock.sendPresenceUpdate('unavailable')`\n\n## Downloading Media Messages\n\nIf you want to save the media you received\n``` ts\nimport { writeFile } from 'fs/promises'\nimport { downloadMediaMessage } from '@whiskeysockets/baileys'\n\nsock.ev.on('messages.upsert', async ({ messages }) => {\n    const m = messages[0]\n\n    if (!m.message) return // if there is no text or media message\n    const messageType = Object.keys (m.message)[0]// get what type of message it is -- text, image, video\n    // if the message is an image\n    if (messageType === 'imageMessage') {\n        // download the message\n        const buffer = await downloadMediaMessage(\n            m,\n            'buffer',\n            { },\n            { \n                logger,\n                // pass this so that baileys can request a reupload of media\n                // that has been deleted\n                reuploadRequest: sock.updateMediaMessage\n            }\n        )\n        // save to file\n        await writeFile('./my-download.jpeg', buffer)\n    }\n}\n```\n\n**Note:** WhatsApp automatically removes old media from their servers. For the device to access said media -- a re-upload is required by another device that has it. This can be accomplished using: \n``` ts\nconst updatedMediaMsg = await sock.updateMediaMessage(msg)\n```\n\n## Deleting Messages\n\n``` ts\nconst jid = '1234@s.whatsapp.net' // can also be a group\nconst response = await sock.sendMessage(jid, { text: 'hello!' }) // send a message\n// sends a message to delete the given message\n// this deletes the message for everyone\nawait sock.sendMessage(jid, { delete: response.key })\n```\n\n**Note:** deleting for oneself is supported via `chatModify` (next section)\n\n## Updating Messages\n\n``` ts\nconst jid = '1234@s.whatsapp.net'\n\nawait sock.sendMessage(jid, {\n      text: 'updated text goes here',\n      edit: response.key,\n    });\n```\n\n## Modifying Chats\n\nWA uses an encrypted form of communication to send chat/app updates. This has been implemented mostly and you can send the following updates:\n\n- Archive a chat\n  ``` ts\n  const lastMsgInChat = await getLastMessageInChat('123456@s.whatsapp.net') // implement this on your end\n  await sock.chatModify({ archive: true, lastMessages: [lastMsgInChat] }, '123456@s.whatsapp.net')\n  ```\n- Mute/unmute a chat\n  ``` ts\n  // mute for 8 hours\n  await sock.chatModify({ mute: 8*60*60*1000 }, '123456@s.whatsapp.net', [])\n  // unmute\n  await sock.chatModify({ mute: null }, '123456@s.whatsapp.net', [])\n  ```\n- Mark a chat read/unread\n  ``` ts\n  const lastMsgInChat = await getLastMessageInChat('123456@s.whatsapp.net') // implement this on your end\n  // mark it unread\n  await sock.chatModify({ markRead: false, lastMessages: [lastMsgInChat] }, '123456@s.whatsapp.net')\n  ```\n\n- Delete a message for me\n  ``` ts\n  await sock.chatModify(\n    { clear: { messages: [{ id: 'ATWYHDNNWU81732J', fromMe: true, timestamp: \"1654823909\" }] } }, \n    '123456@s.whatsapp.net', \n    []\n    )\n\n  ```\n\n- Delete a chat\n  ``` ts\n  const lastMsgInChat = await getLastMessageInChat('123456@s.whatsapp.net') // implement this on your end\n  await sock.chatModify({\n    delete: true,\n    lastMessages: [{ key: lastMsgInChat.key, messageTimestamp: lastMsgInChat.messageTimestamp }]\n  },\n  '123456@s.whatsapp.net')\n  ```\n\n- Pin/unpin a chat\n  ``` ts\n  await sock.chatModify({\n    pin: true // or `false` to unpin\n  },\n  '123456@s.whatsapp.net')\n  ```\n  \n- Star/unstar a message\n  ``` ts\n  await sock.chatModify({\n  star: {\n  \tmessages: [{ id: 'messageID', fromMe: true // or `false` }],\n      \tstar: true // - true: Star Message; false: Unstar Message\n  }},'123456@s.whatsapp.net');\n  ```\n\n**Note:** if you mess up one of your updates, WA can log you out of all your devices and you'll have to log in again.\n\n## Disappearing Messages\n\n``` ts\nconst jid = '1234@s.whatsapp.net' // can also be a group\n// turn on disappearing messages\nawait sock.sendMessage(\n    jid, \n    // this is 1 week in seconds -- how long you want messages to appear for\n    { disappearingMessagesInChat: WA_DEFAULT_EPHEMERAL }\n)\n// will send as a disappearing message\nawait sock.sendMessage(jid, { text: 'hello' }, { ephemeralExpiration: WA_DEFAULT_EPHEMERAL })\n// turn off disappearing messages\nawait sock.sendMessage(\n    jid, \n    { disappearingMessagesInChat: false }\n)\n\n```\n\n## Misc\n\n- To check if a given ID is on WhatsApp\n    ``` ts\n    const id = '123456'\n    const [result] = await sock.onWhatsApp(id)\n    if (result.exists) console.log (`${id} exists on WhatsApp, as jid: ${result.jid}`)\n    ```\n- To query chat history on a group or with someone\n    TODO, if possible\n- To get the status of some person\n    ``` ts\n    const status = await sock.fetchStatus(\"xyz@s.whatsapp.net\")\n    console.log(\"status: \" + status)\n    ```\n- To change your profile status\n    ``` ts\n    const status = 'Hello World!'\n    await sock.updateProfileStatus(status)\n    ```\n- To change your profile name\n    ``` ts\n    const name = 'My name'\n    await sock.updateProfileName(name)\n    ```\n- To get the display picture of some person/group\n    ``` ts\n    // for low res picture\n    const ppUrl = await sock.profilePictureUrl(\"xyz@g.us\")\n    console.log(\"download profile picture from: \" + ppUrl)\n    // for high res picture\n    const ppUrl = await sock.profilePictureUrl(\"xyz@g.us\", 'image')\n    ```\n- To change your display picture or a group's\n    ``` ts\n    const jid = '111234567890-1594482450@g.us' // can be your own too\n    await sock.updateProfilePicture(jid, { url: './new-profile-picture.jpeg' })\n    ```\n- To remove your display picture or a group's\n    ``` ts\n    const jid = '111234567890-1594482450@g.us' // can be your own too\n    await sock.removeProfilePicture(jid)\n    ```\n- To get someone's presence (if they're typing or online)\n    ``` ts\n    // the presence update is fetched and called here\n    sock.ev.on('presence.update', json => console.log(json))\n    // request updates for a chat\n    await sock.presenceSubscribe(\"xyz@s.whatsapp.net\") \n    ```\n- To block or unblock user\n    ``` ts\n    await sock.updateBlockStatus(\"xyz@s.whatsapp.net\", \"block\") // Block user\n    await sock.updateBlockStatus(\"xyz@s.whatsapp.net\", \"unblock\") // Unblock user\n    ```\n- To get a business profile, such as description or category\n    ```ts\n    const profile = await sock.getBusinessProfile(\"xyz@s.whatsapp.net\")\n    console.log(\"business description: \" + profile.description + \", category: \" + profile.category)\n    ```\nOf course, replace ``` xyz ``` with an actual ID. \n\n## Groups\n- To create a group\n    ``` ts\n    // title & participants\n    const group = await sock.groupCreate(\"My Fab Group\", [\"1234@s.whatsapp.net\", \"4564@s.whatsapp.net\"])\n    console.log (\"created group with id: \" + group.gid)\n    sock.sendMessage(group.id, { text: 'hello there' }) // say hello to everyone on the group\n    ```\n- To add/remove people to a group or demote/promote people\n    ``` ts\n    // id & people to add to the group (will throw error if it fails)\n    const response = await sock.groupParticipantsUpdate(\n        \"abcd-xyz@g.us\", \n        [\"abcd@s.whatsapp.net\", \"efgh@s.whatsapp.net\"],\n        \"add\" // replace this parameter with \"remove\", \"demote\" or \"promote\"\n    )\n    ```\n- To change the group's subject\n    ``` ts\n    await sock.groupUpdateSubject(\"abcd-xyz@g.us\", \"New Subject!\")\n    ```\n- To change the group's description\n    ``` ts\n    await sock.groupUpdateDescription(\"abcd-xyz@g.us\", \"New Description!\")\n    ```\n- To change group settings\n    ``` ts\n    // only allow admins to send messages\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'announcement')\n    // allow everyone to send messages\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'not_announcement')\n    // allow everyone to modify the group's settings -- like display picture etc.\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'unlocked')\n    // only allow admins to modify the group's settings\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'locked')\n    ```\n- To leave a group\n    ``` ts\n    await sock.groupLeave(\"abcd-xyz@g.us\") // (will throw error if it fails)\n    ```\n- To get the invite code for a group\n    ``` ts\n    const code = await sock.groupInviteCode(\"abcd-xyz@g.us\")\n    console.log(\"group code: \" + code)\n    ```\n- To revoke the invite code in a group\n    ```ts\n    const code = await sock.groupRevokeInvite(\"abcd-xyz@g.us\")\n    console.log(\"New group code: \" + code)\n    ```\n- To query the metadata of a group\n    ``` ts\n    const metadata = await sock.groupMetadata(\"abcd-xyz@g.us\") \n    console.log(metadata.id + \", title: \" + metadata.subject + \", description: \" + metadata.desc)\n    ```\n- To join the group using the invitation code\n    ``` ts\n    const response = await sock.groupAcceptInvite(\"xxx\")\n    console.log(\"joined to: \" + response)\n    ```\n    Of course, replace ``` xxx ``` with invitation code.\n- To get group info by invite code\n    ```ts\n    const response = await sock.groupGetInviteInfo(\"xxx\")\n    console.log(\"group information: \" + response)\n    ```\n- To join the group using groupInviteMessage\n    ``` ts\n    const response = await sock.groupAcceptInviteV4(\"abcd@s.whatsapp.net\", groupInviteMessage)\n    console.log(\"joined to: \" + response)\n    ```\n  Of course, replace ``` xxx ``` with invitation code.\n\n- To get list request join\n    ``` ts\n    const response = await sock.groupRequestParticipantsList(\"abcd-xyz@g.us\")\n    console.log(response)\n    ```\n- To approve/reject request join\n    ``` ts\n    const response = await sock.groupRequestParticipantsUpdate(\n        \"abcd-xyz@g.us\", // id group,\n        [\"abcd@s.whatsapp.net\", \"efgh@s.whatsapp.net\"],\n        \"approve\" // replace this parameter with \"reject\" \n    )\n    console.log(response)\n    ```\n\n## Privacy\n- To get the privacy settings\n    ``` ts\n    const privacySettings = await sock.fetchPrivacySettings(true)\n    console.log(\"privacy settings: \" + privacySettings)\n    ```\n- To update the LastSeen privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateLastSeenPrivacy(value)\n    ```\n- To update the Online privacy\n    ``` ts\n    const value = 'all' // 'match_last_seen'\n    await sock.updateOnlinePrivacy(value)\n    ```\n- To update the Profile Picture privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateProfilePicturePrivacy(value)\n    ```\n- To update the Status privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateStatusPrivacy(value)\n    ```\n- To update the Read Receipts privacy\n    ``` ts\n    const value = 'all' // 'none'\n    await sock.updateReadReceiptsPrivacy(value)\n    ```\n- To update the Groups Add privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateGroupsAddPrivacy(value)\n    ```\n- To update the Default Disappearing Mode\n    ``` ts\n    const duration = 86400 // 604800 | 7776000 | 0 \n    await sock.updateDefaultDisappearingMode(duration)\n    ```\n## Broadcast Lists & Stories\n\n**Note:** messages currently cannot be sent to broadcast lists from the MD version.\n\n- You can send messages to broadcast lists the same way you send messages to groups & individual chats.\n- Right now, WA Web does not support creating broadcast lists, but you can still delete them.\n- Broadcast IDs are in the format `12345678@broadcast`\n- To query a broadcast list's recipients & name:\n    ``` ts\n    const bList = await sock.getBroadcastListInfo(\"1234@broadcast\")\n    console.log (`list name: ${bList.name}, recps: ${bList.recipients}`)\n    ```\n\n## Writing Custom Functionality\nBaileys is written with custom functionality in mind. Instead of forking the project & re-writing the internals, you can simply write your own extensions.\n\nFirst, enable the logging of unhandled messages from WhatsApp by setting:\n``` ts\nconst sock = makeWASocket({\n    logger: P({ level: 'debug' }),\n})\n```\nThis will enable you to see all sorts of messages WhatsApp sends in the console. \n\nSome examples:\n\n1. Functionality to track the battery percentage of your phone.\n    You enable logging and you'll see a message about your battery pop up in the console: \n    ```{\"level\":10,\"fromMe\":false,\"frame\":{\"tag\":\"ib\",\"attrs\":{\"from\":\"@s.whatsapp.net\"},\"content\":[{\"tag\":\"edge_routing\",\"attrs\":{},\"content\":[{\"tag\":\"routing_info\",\"attrs\":{},\"content\":{\"type\":\"Buffer\",\"data\":[8,2,8,5]}}]}]},\"msg\":\"communication\"} ``` \n    \n   The \"frame\" is what the message received is, it has three components:\n   - `tag` -- what this frame is about (eg. message will have \"message\")\n   - `attrs` -- a string key-value pair with some metadata (contains ID of the message usually)\n   - `content` -- the actual data (eg. a message node will have the actual message content in it)\n   - read more about this format [here](/src/WABinary/readme.md)\n\n    You can register a callback for an event using the following:\n    ``` ts\n    // for any message with tag 'edge_routing'\n    sock.ws.on(`CB:edge_routing`, (node: BinaryNode) => { })\n    // for any message with tag 'edge_routing' and id attribute = abcd\n    sock.ws.on(`CB:edge_routing,id:abcd`, (node: BinaryNode) => { })\n    // for any message with tag 'edge_routing', id attribute = abcd & first content node routing_info\n    sock.ws.on(`CB:edge_routing,id:abcd,routing_info`, (node: BinaryNode) => { })\n    ```\n Also, this repo is now licenced under GPL 3 since it uses [libsignal-node](https://git.questbook.io/backend/service-coderunner/-/merge_requests/1)\n"
		},
		"commits": [
			{
				"committedDate": "2024-09-09T20:55:42Z",
				"message": "Merge pull request #12 from SamuelScheit/dependabot/npm_and_yarn/axios-1.7.4\n\nchore(deps): bump axios from 1.6.0 to 1.7.4",
				"messageBody": "…s-1.7.4\n\nchore(deps): bump axios from 1.6.0 to 1.7.4"
			},
			{
				"committedDate": "2024-09-03T18:08:21Z",
				"message": "Merge pull request #11 from SamuelScheit/dependabot/npm_and_yarn/micromatch-4.0.8\n\nchore(deps): bump micromatch from 4.0.5 to 4.0.8",
				"messageBody": "…omatch-4.0.8\n\nchore(deps): bump micromatch from 4.0.5 to 4.0.8"
			},
			{
				"committedDate": "2024-07-22T03:51:15Z",
				"message": "Merge pull request #10 from SamuelScheit/dependabot/npm_and_yarn/ws-8.17.1",
				"messageBody": "….17.1"
			},
			{
				"committedDate": "2024-06-25T23:01:24Z",
				"message": "Merge pull request #8 from SamuelScheit/dependabot/npm_and_yarn/ws-8.17.1",
				"messageBody": "…17.1"
			},
			{
				"committedDate": "2024-06-25T23:01:16Z",
				"message": "Merge pull request #9 from SamuelScheit/dependabot/npm_and_yarn/braces-3.0.3",
				"messageBody": "…s-3.0.3"
			},
			{
				"committedDate": "2024-03-17T18:25:48Z",
				"message": "Merge pull request #7 from SamuelScheit/dependabot/npm_and_yarn/follow-redirects-1.15.6\n\nchore(deps): bump follow-redirects from 1.15.4 to 1.15.6",
				"messageBody": "…w-redirects-1.15.6\n\nchore(deps): bump follow-redirects from 1.15.4 to 1.15.6"
			},
			{
				"committedDate": "2024-02-21T11:19:19Z",
				"message": "Merge pull request #6 from SamuelScheit/dependabot/npm_and_yarn/ip-1.1.9\n\nchore(deps): bump ip from 1.1.8 to 1.1.9",
				"messageBody": "chore(deps): bump ip from 1.1.8 to 1.1.9"
			},
			{
				"committedDate": "2024-01-14T00:18:21Z",
				"message": "fix: registration",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-11T09:43:51Z",
				"message": "Merge pull request #5 from SamuelScheit/dependabot/npm_and_yarn/follow-redirects-1.15.4\n\nchore(deps): bump follow-redirects from 1.15.2 to 1.15.4",
				"messageBody": "…w-redirects-1.15.4\n\nchore(deps): bump follow-redirects from 1.15.2 to 1.15.4"
			},
			{
				"committedDate": "2023-12-09T15:24:51Z",
				"message": "Merge pull request #2 from SamuelScheit/dependabot/npm_and_yarn/sharp-0.32.6\n\nchore(deps-dev): bump sharp from 0.30.7 to 0.32.6",
				"messageBody": "…-0.32.6\n\nchore(deps-dev): bump sharp from 0.30.7 to 0.32.6"
			},
			{
				"committedDate": "2023-12-09T15:24:44Z",
				"message": "Merge pull request #3 from SamuelScheit/dependabot/npm_and_yarn/babel/traverse-7.23.5\n\nchore(deps): bump @babel/traverse from 7.22.11 to 7.23.5",
				"messageBody": "…/traverse-7.23.5\n\nchore(deps): bump @babel/traverse from 7.22.11 to 7.23.5"
			},
			{
				"committedDate": "2023-12-09T15:24:17Z",
				"message": "Merge pull request #4 from SamuelScheit/dependabot/npm_and_yarn/axios-1.6.0\n\nchore(deps): bump axios from 1.5.0 to 1.6.0",
				"messageBody": "…-1.6.0\n\nchore(deps): bump axios from 1.5.0 to 1.6.0"
			},
			{
				"committedDate": "2023-12-09T15:24:06Z",
				"message": "Merge pull request #1 from SamuelScheit/dependabot/npm_and_yarn/proto-extract/qs-6.5.3\n\nchore(deps): bump qs from 6.5.2 to 6.5.3 in /proto-extract",
				"messageBody": "…-extract/qs-6.5.3\n\nchore(deps): bump qs from 6.5.2 to 6.5.3 in /proto-extract"
			},
			{
				"committedDate": "2023-12-09T13:19:11Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-19T14:34:21Z",
				"message": "fix: registration",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-15T15:21:37Z",
				"message": "fix: registration",
				"messageBody": ""
			},
			{
				"committedDate": "2023-11-08T13:24:25Z",
				"message": "fix: registration, add pushToken",
				"messageBody": ""
			},
			{
				"committedDate": "2023-10-19T11:34:31Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-09-17T20:30:34Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-10T09:15:12Z",
				"message": "fix: registration + add captcha support (#227)\n\n* fix: registration + update mobile version\r\n\r\n* feat: add captcha support for registration\r\n\r\n* fix: jid protocol address missing device\r\n\r\n* fix: linting errors",
				"messageBody": "* fix: registration + update mobile version\r\n\r\n* feat: add captcha support for registration\r\n\r\n* fix: jid protocol address missing device\r\n\r\n* fix: linting errors"
			},
			{
				"committedDate": "2023-08-10T08:54:38Z",
				"message": "fix: linting errors",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-01T21:36:16Z",
				"message": "Merge branch 'master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-19T15:28:50Z",
				"message": "fix: do not send message to self if the device is 0 (mobile)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-05T22:37:38Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-05T22:37:15Z",
				"message": "fix: jid protocol address missing device",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-05T22:37:15Z",
				"message": "feat: add captcha support for registration",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-05T22:37:15Z",
				"message": "fix: registration + update mobile version",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-31T16:12:43Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-26T12:13:39Z",
				"message": "feat: add md-msg-hist to MEDIA_PATH_MAP",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-26T12:13:39Z",
				"message": "feat: add native mobile api docs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-23T15:51:28Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-22T16:04:24Z",
				"message": "feat: use axios and config.options for registration",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:24:55Z",
				"message": "remove wip two factor",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:20:55Z",
				"message": "revert: example logger",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:15:40Z",
				"message": "chore: remove console.logs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:15:40Z",
				"message": "wip: two factor auth",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:13:54Z",
				"message": "Merge branch 'master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-17T14:55:24Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-14T17:21:44Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-14T15:45:20Z",
				"message": "fix: mobile app state key + message events",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-14T15:45:20Z",
				"message": "feat: fetch groups if ib:dirty",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-12T21:20:18Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-12T16:06:19Z",
				"message": "Merge branch 'master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-12T16:02:41Z",
				"message": "fix: socket options",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:33:20Z",
				"message": "add .prettierignore",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:33:20Z",
				"message": "auto connect socket",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:31:21Z",
				"message": "Merge branch 'master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:30:30Z",
				"message": "unify web + mobile and use tcp socket",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-20T11:01:11Z",
				"message": "feat: native-mobile-api",
				"messageBody": ""
			}
		],
		"commitSummary": "**Categories and Features:**\n\n1. **Security**\n   - Added captcha support for registration\n\n2. **Registration**\n   - Fixed registration issue\n   - Updated mobile version registration\n\n3. **Socket and Connection**\n   - Auto-connect socket\n   - Unified web and mobile to use TCP socket\n   - Fixed socket options\n\n4. **Mobile Features**\n   - Added native mobile API\n   - Fixed mobile app state key and message events\n\n5. **Miscellaneous**\n   - Added native mobile API docs\n   - Removed console logs\n   - Removed WIP two factor auth"
	},
	{
		"id": "R_kgDOLIwbyQ",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/Auties00/whatsapprestapi",
		"name": "whatsapprestapi",
		"nameWithOwner": "Auties00/whatsapprestapi",
		"owner": {
			"login": "Auties00"
		},
		"createdAt": "2024-01-23T20:13:01Z",
		"updatedAt": "2024-01-24T21:00:11Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/28218457?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 23322,
			"edges": [
				{
					"size": 23236,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 86,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOLIwbybFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 17
				}
			}
		},
		"object": {
			"text": "# code-with-quarkus\n\nThis project uses Quarkus, the Supersonic Subatomic Java Framework.\n\nIf you want to learn more about Quarkus, please visit its website: https://quarkus.io/ .\n\n## Running the application in dev mode\n\nYou can run your application in dev mode that enables live coding using:\n```shell script\n./mvnw compile quarkus:dev\n```\n\n> **_NOTE:_**  Quarkus now ships with a Dev UI, which is available in dev mode only at http://localhost:8080/q/dev/.\n\n## Packaging and running the application\n\nThe application can be packaged using:\n```shell script\n./mvnw package\n```\nIt produces the `quarkus-run.jar` file in the `target/quarkus-app/` directory.\nBe aware that it’s not an _über-jar_ as the dependencies are copied into the `target/quarkus-app/lib/` directory.\n\nThe application is now runnable using `java -jar target/quarkus-app/quarkus-run.jar`.\n\nIf you want to build an _über-jar_, execute the following command:\n```shell script\n./mvnw package -Dquarkus.package.type=uber-jar\n```\n\nThe application, packaged as an _über-jar_, is now runnable using `java -jar target/*-runner.jar`.\n\n## Creating a native executable\n\nYou can create a native executable using: \n```shell script\n./mvnw package -Dnative\n```\n\nOr, if you don't have GraalVM installed, you can run the native executable build in a container using: \n```shell script\n./mvnw package -Dnative -Dquarkus.native.container-build=true\n```\n\nYou can then execute your native executable with: `./target/code-with-quarkus-1.0.0-SNAPSHOT-runner`\n\nIf you want to learn more about building native executables, please consult https://quarkus.io/guides/maven-tooling.\n\n## Provided Code\n\n### RESTEasy Reactive\n\nEasily start your Reactive RESTful Web Services\n\n[Related guide section...](https://quarkus.io/guides/getting-started-reactive#reactive-jax-rs-resources)\n"
		},
		"commits": [
			{
				"committedDate": "2024-02-12T23:10:06Z",
				"message": "fix: use different proxy to submit",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:26:45Z",
				"message": "feat: add response",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T22:55:56Z",
				"message": "fix: add proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T20:47:58Z",
				"message": "fix: proxy auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T16:02:28Z",
				"message": "fix: use our proxy on retry",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T13:35:51Z",
				"message": "fix: proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T02:58:16Z",
				"message": "feat: add proxy timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T01:33:31Z",
				"message": "feat: apns error handler + remove client log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T21:50:43Z",
				"message": "fix: retry recursion",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T16:08:06Z",
				"message": "feat: response success status",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T01:19:27Z",
				"message": "feat: concurrent apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:07:46Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:06:43Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:31:09Z",
				"message": "feat: add logging with redis support",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:30:41Z",
				"message": "feat: add whatsapp response to result",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:40:03Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:38:32Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			}
		],
		"commitSummary": "- **Proxy Management**\n  - Added proxy\n  - Proxy authentication\n  - Ability to switch proxies\n  - Proxy timeout\n  - Proxy URL parameter\n  - Proxy country based on phone number\n\n- **APNS and Error Handling**\n  - APNS error handler\n  - Removed client log\n  - Retry recursion fix\n  - Concurrent APNS\n\n- **Response and Logging**\n  - Added response success status\n  - Added response for APNS and WhatsApp\n  - Added logging with Redis support"
	},
	{
		"id": "R_kgDOKD3itg",
		"description": "Spotify vulnerability report in their DRM system",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/node-spotify-player",
		"name": "node-spotify-player",
		"nameWithOwner": "SamuelScheit/node-spotify-player",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-08-05T23:49:33Z",
		"updatedAt": "2024-08-21T10:10:26Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/34555296?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 1100274,
			"edges": [
				{
					"size": 1046671,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 48448,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 5155,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOKD3itrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 16
				}
			}
		},
		"object": {
			"text": "# SpotifyPlayer\n\nSpotifyPlayer uses the unofficial Spotify API to fetch and decrypt songs from Spotify.\nFeatures:\n\n-   [x] Authentication\n-   [x] Get information about a song or playlist\n-   [x] Download and decrypt songs\n\nTODO:\n\n-   [ ] Search for songs\n-   [ ] Get information about an user, artist and album\n"
		},
		"commits": [
			{
				"committedDate": "2024-08-21T10:10:22Z",
				"message": "Merge pull request #10 from SamuelScheit/dependabot/npm_and_yarn/axios-1.7.4\n\nbuild(deps): bump axios from 1.6.0 to 1.7.4",
				"messageBody": "…s-1.7.4\n\nbuild(deps): bump axios from 1.6.0 to 1.7.4"
			},
			{
				"committedDate": "2024-08-14T21:05:54Z",
				"message": "Merge pull request #9 from SamuelScheit/dependabot/npm_and_yarn/fast-xml-parser-4.4.1\n\nbuild(deps): bump fast-xml-parser from 4.2.7 to 4.4.1",
				"messageBody": "…xml-parser-4.4.1\n\nbuild(deps): bump fast-xml-parser from 4.2.7 to 4.4.1"
			},
			{
				"committedDate": "2024-06-25T23:01:53Z",
				"message": "Merge pull request #8 from SamuelScheit/dependabot/npm_and_yarn/braces-3.0.3",
				"messageBody": "…s-3.0.3"
			},
			{
				"committedDate": "2024-04-11T23:20:30Z",
				"message": "Merge pull request #7 from SamuelScheit/dependabot/npm_and_yarn/bot/tar-6.2.1\n\nbuild(deps): bump tar from 6.2.0 to 6.2.1 in /bot",
				"messageBody": "…ar-6.2.1\n\nbuild(deps): bump tar from 6.2.0 to 6.2.1 in /bot"
			},
			{
				"committedDate": "2024-04-10T22:19:26Z",
				"message": "Merge pull request #4 from SamuelScheit/dependabot/go_modules/bot_go/golang.org/x/crypto-0.17.0\n\nbuild(deps): bump golang.org/x/crypto from 0.0.0-20210421170649-83a5a9bb288b to 0.17.0 in /bot_go",
				"messageBody": "…golang.org/x/crypto-0.17.0\n\nbuild(deps): bump golang.org/x/crypto from 0.0.0-20210421170649-83a5a9bb288b to 0.17.0 in /bot_go"
			},
			{
				"committedDate": "2024-04-10T22:19:14Z",
				"message": "Merge pull request #6 from SamuelScheit/dependabot/npm_and_yarn/protobufjs-7.2.5\n\nbuild(deps): bump protobufjs from 7.2.4 to 7.2.5",
				"messageBody": "…bufjs-7.2.5\n\nbuild(deps): bump protobufjs from 7.2.4 to 7.2.5"
			},
			{
				"committedDate": "2024-03-17T18:25:52Z",
				"message": "Merge pull request #5 from SamuelScheit/dependabot/npm_and_yarn/follow-redirects-1.15.6\n\nbuild(deps): bump follow-redirects from 1.15.4 to 1.15.6",
				"messageBody": "…w-redirects-1.15.6\n\nbuild(deps): bump follow-redirects from 1.15.4 to 1.15.6"
			},
			{
				"committedDate": "2024-01-21T00:34:49Z",
				"message": "feat: add js bot",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-20T22:33:33Z",
				"message": "fix: playback",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-20T22:26:22Z",
				"message": "fix: auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-20T22:09:56Z",
				"message": "wip: fix auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-20T21:34:33Z",
				"message": "reformat",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-10T22:46:52Z",
				"message": "Merge pull request #2 from SamuelScheit/dependabot/npm_and_yarn/follow-redirects-1.15.4\n\nBump follow-redirects from 1.15.2 to 1.15.4",
				"messageBody": "…w-redirects-1.15.4\n\nBump follow-redirects from 1.15.2 to 1.15.4"
			},
			{
				"committedDate": "2023-11-13T13:13:40Z",
				"message": "Merge pull request #1 from SamuelScheit/dependabot/npm_and_yarn/axios-1.6.0\n\nBump axios from 1.4.0 to 1.6.0",
				"messageBody": "…-1.6.0\n\nBump axios from 1.4.0 to 1.6.0"
			},
			{
				"committedDate": "2023-08-05T23:48:42Z",
				"message": "write report",
				"messageBody": ""
			},
			{
				"committedDate": "2023-08-05T12:02:18Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "I found a vulnerability in Spotify's Accesspoint API that allows users to download and decrypt songs without verifying the client's integrity, unlike the web player which uses Widevine DRM. \n\n\n1. Connect to the API and set up encryption\n1. Authenticate with a valid Spotify account\n1. Request an ephemeral access token\n1. Download a song's metadata and files\nRequest the decryption key and decrypt the file"
	},
	{
		"id": "R_kgDOCTDsqw",
		"description": "A JavaScript engine optimized for running React Native.",
		"homepageUrl": "https://hermesengine.dev/",
		"url": "https://github.com/facebook/hermes",
		"name": "hermes",
		"nameWithOwner": "facebook/hermes",
		"owner": {
			"login": "facebook"
		},
		"createdAt": "2018-10-22T19:13:00Z",
		"updatedAt": "2024-10-11T17:55:33Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/882a01fdfa289d5aa3ef5e75d9f5ded7f13d7e213d80c206919e9f0fab81fc54/facebook/hermes",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 31
		},
		"releases": {
			"totalCount": 23,
			"nodes": [
				{
					"createdAt": "2024-08-15T07:17:16Z",
					"releaseAssets": {
						"totalCount": 3,
						"nodes": [
							{
								"downloadCount": 79
							},
							{
								"downloadCount": 91
							},
							{
								"downloadCount": 78
							}
						]
					}
				},
				{
					"createdAt": "2022-08-16T18:18:07Z",
					"releaseAssets": {
						"totalCount": 4,
						"nodes": [
							{
								"downloadCount": 679
							},
							{
								"downloadCount": 681
							},
							{
								"downloadCount": 622
							},
							{
								"downloadCount": 348
							}
						]
					}
				},
				{
					"createdAt": "2022-01-26T23:24:45Z",
					"releaseAssets": {
						"totalCount": 7,
						"nodes": [
							{
								"downloadCount": 335503
							},
							{
								"downloadCount": 171
							},
							{
								"downloadCount": 96
							},
							{
								"downloadCount": 1163
							},
							{
								"downloadCount": 1533
							},
							{
								"downloadCount": 758
							},
							{
								"downloadCount": 215
							}
						]
					}
				},
				{
					"createdAt": "2021-11-13T15:59:27Z",
					"releaseAssets": {
						"totalCount": 7,
						"nodes": [
							{
								"downloadCount": 49
							},
							{
								"downloadCount": 1657
							},
							{
								"downloadCount": 64
							},
							{
								"downloadCount": 85
							},
							{
								"downloadCount": 127
							},
							{
								"downloadCount": 295
							},
							{
								"downloadCount": 119
							}
						]
					}
				},
				{
					"createdAt": "2021-08-31T22:25:11Z",
					"releaseAssets": {
						"totalCount": 8,
						"nodes": [
							{
								"downloadCount": 144
							},
							{
								"downloadCount": 295
							},
							{
								"downloadCount": 147
							},
							{
								"downloadCount": 53
							},
							{
								"downloadCount": 51
							},
							{
								"downloadCount": 86
							},
							{
								"downloadCount": 344
							},
							{
								"downloadCount": 541171
							}
						]
					}
				},
				{
					"createdAt": "2021-07-12T00:11:14Z",
					"releaseAssets": {
						"totalCount": 8,
						"nodes": [
							{
								"downloadCount": 133
							},
							{
								"downloadCount": 157
							},
							{
								"downloadCount": 112
							},
							{
								"downloadCount": 38
							},
							{
								"downloadCount": 40
							},
							{
								"downloadCount": 64
							},
							{
								"downloadCount": 54
							},
							{
								"downloadCount": 123080
							}
						]
					}
				},
				{
					"createdAt": "2021-04-28T20:05:56Z",
					"releaseAssets": {
						"totalCount": 8,
						"nodes": [
							{
								"downloadCount": 136
							},
							{
								"downloadCount": 247
							},
							{
								"downloadCount": 112
							},
							{
								"downloadCount": 54
							},
							{
								"downloadCount": 51
							},
							{
								"downloadCount": 51
							},
							{
								"downloadCount": 69
							},
							{
								"downloadCount": 572
							}
						]
					}
				},
				{
					"createdAt": "2020-12-11T22:39:04Z",
					"releaseAssets": {
						"totalCount": 8,
						"nodes": [
							{
								"downloadCount": 436
							},
							{
								"downloadCount": 452
							},
							{
								"downloadCount": 289
							},
							{
								"downloadCount": 495
							},
							{
								"downloadCount": 95
							},
							{
								"downloadCount": 172
							},
							{
								"downloadCount": 185
							},
							{
								"downloadCount": 345759
							}
						]
					}
				},
				{
					"createdAt": "2020-10-28T18:56:28Z",
					"releaseAssets": {
						"totalCount": 8,
						"nodes": [
							{
								"downloadCount": 26
							},
							{
								"downloadCount": 67
							},
							{
								"downloadCount": 3229
							},
							{
								"downloadCount": 40
							},
							{
								"downloadCount": 52
							},
							{
								"downloadCount": 45
							},
							{
								"downloadCount": 34
							},
							{
								"downloadCount": 92
							}
						]
					}
				},
				{
					"createdAt": "2020-10-09T21:50:22Z",
					"releaseAssets": {
						"totalCount": 8,
						"nodes": [
							{
								"downloadCount": 163
							},
							{
								"downloadCount": 78
							},
							{
								"downloadCount": 37
							},
							{
								"downloadCount": 40
							},
							{
								"downloadCount": 52
							},
							{
								"downloadCount": 94
							},
							{
								"downloadCount": 40
							},
							{
								"downloadCount": 463
							}
						]
					}
				}
			]
		},
		"forkCount": 628,
		"isFork": false,
		"languages": {
			"totalCount": 16,
			"totalSize": 20760496,
			"edges": [
				{
					"size": 10728480,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 7675161,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 1184785,
					"node": {
						"color": "#dea584",
						"name": "Rust"
					}
				}
			]
		},
		"stargazerCount": 9790,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOCTDsq69yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLdJhcw",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/Auties00/whatsapp-api",
		"name": "whatsapp-api",
		"nameWithOwner": "Auties00/whatsapp-api",
		"owner": {
			"login": "Auties00"
		},
		"createdAt": "2024-03-07T17:26:17Z",
		"updatedAt": "2024-09-09T19:20:31Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/28218457?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 2,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 50704,
			"edges": [
				{
					"size": 50704,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOLdJhc7FyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 20
				}
			}
		},
		"object": {
			"text": "# code-with-quarkus\n\nThis project uses Quarkus, the Supersonic Subatomic Java Framework.\n\nIf you want to learn more about Quarkus, please visit its website: https://quarkus.io/ .\n\n## Running the application in dev mode\n\nYou can run your application in dev mode that enables live coding using:\n```shell script\n./mvnw compile quarkus:dev\n```\n\n> **_NOTE:_**  Quarkus now ships with a Dev UI, which is available in dev mode only at http://localhost:8080/q/dev/.\n\n## Packaging and running the application\n\nThe application can be packaged using:\n```shell script\n./mvnw package\n```\nIt produces the `quarkus-run.jar` file in the `target/quarkus-app/` directory.\nBe aware that it’s not an _über-jar_ as the dependencies are copied into the `target/quarkus-app/lib/` directory.\n\nThe application is now runnable using `java -jar target/quarkus-app/quarkus-run.jar`.\n\nIf you want to build an _über-jar_, execute the following command:\n```shell script\n./mvnw package -Dquarkus.package.protocol=uber-jar\n```\n\nThe application, packaged as an _über-jar_, is now runnable using `java -jar target/*-runner.jar`.\n\n## Creating a native executable\n\nYou can create a native executable using: \n```shell script\n./mvnw package -Dnative\n```\n\nOr, if you don't have GraalVM installed, you can run the native executable build in a container using: \n```shell script\n./mvnw package -Dnative -Dquarkus.native.container-build=true\n```\n\nYou can then execute your native executable with: `./target/code-with-quarkus-1.0.0-SNAPSHOT-runner`\n\nIf you want to learn more about building native executables, please consult https://quarkus.io/guides/maven-tooling.\n\n## Provided Code\n\n### RESTEasy Reactive\n\nEasily start your Reactive RESTful Web Services\n\n[Related guide section...](https://quarkus.io/guides/getting-started-reactive#reactive-jax-rs-resources)\n"
		},
		"commits": [
			{
				"committedDate": "2024-04-27T14:14:36Z",
				"message": "fix: cobalt version",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:14:17Z",
				"message": "fix: ProxyAuthenticator",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:14:10Z",
				"message": "fix: CompanionDevice android",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-26T17:49:46Z",
				"message": "fix: authentication keys in wrong order",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:26:45Z",
				"message": "feat: add response",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T22:55:56Z",
				"message": "fix: add proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T20:47:58Z",
				"message": "fix: proxy auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T16:02:28Z",
				"message": "fix: use our proxy on retry",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T13:35:51Z",
				"message": "fix: proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T02:58:16Z",
				"message": "feat: add proxy timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T01:33:31Z",
				"message": "feat: apns error handler + remove client log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T21:50:43Z",
				"message": "fix: retry recursion",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T16:08:06Z",
				"message": "feat: response success status",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T01:19:27Z",
				"message": "feat: concurrent apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:07:46Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:06:43Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:31:09Z",
				"message": "feat: add logging with redis support",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:30:41Z",
				"message": "feat: add whatsapp response to result",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:40:03Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:38:32Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			}
		],
		"commitSummary": "- **Authentication** \n  - fix: CompanionDevice android\n  - fix: authentication keys in wrong order\n  - fix: ProxyAuthenticator\n\n- **Proxy** \n  - fix: add proxy\n  - fix: proxy auth\n  - feat: add proxy timeout\n  - feat: add proxy url parameter\n  - fix: use our proxy on retry\n  - fix: proxy\n  - feat: use proxy country based on phone number\n\n- **Error Handling** \n  - feat: apns error handler + remove client log\n\n- **Performance** \n  - feat: concurrent apns\n\n- **Features** \n  - feat: add response\n  - feat: response success status\n\n- **Logging** \n  - feat: add logging with redis support\n\n- **Fixes** \n  - fix: cobalt version\n  - fix: retry recursion\n  - feat: add whatsapp response to result"
	},
	{
		"id": "R_kgDOI7I8Bw",
		"description": "Discord User API Documentation",
		"homepageUrl": "https://docs.discord.sex",
		"url": "https://github.com/discord-userdoccers/discord-userdoccers",
		"name": "discord-userdoccers",
		"nameWithOwner": "discord-userdoccers/discord-userdoccers",
		"owner": {
			"login": "discord-userdoccers"
		},
		"createdAt": "2023-02-08T01:50:31Z",
		"updatedAt": "2024-10-08T04:28:44Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/598883335/c5dbc259-6036-4429-8ef5-03ed7086179c",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#fcb32c",
			"name": "MDX"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 31,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 1821669,
			"edges": [
				{
					"size": 1716686,
					"node": {
						"color": "#fcb32c",
						"name": "MDX"
					}
				},
				{
					"size": 92888,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 7207,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 131,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOI7I8B7FyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "# Discord Unofficial User API Documentation\n\nThis repo is an attempt at documenting the unsupported user side of the Discord API, used by the [official client](https://discord.com/app) and [developer portal](https://discord.com/developers/applications), amongst others. \n\nThis means this documentation is focused on the API as it is used by non-bot users, namely with user and bearer authentication tokens. **Most bot-only endpoints that are not usable with user/bearer tokens are generally out of scope and will not be documented here.**\n\n> [!IMPORTANT]\n> The success of this project depends on the community's contributions. If you have any knowledge of the Discord API, please consider contributing to this project. See [CONTRIBUTING.md](/CONTRIBUTING.md) for more information.\n\n> [!NOTE]\n> This documentation is not affiliated with or endorsed by Discord in any way. It is a community effort to document the API as it is used by regular user accounts, and is not an official source of information.\n\n**This is a very early work-in-progress. [Contributions](/CONTRIBUTING.md) are welcome!**\n\n## License\nThis repository is a fork of the [Discord API Documentation hackweek rewrite](https://github.com/IanMitchell/hackweek-discord-api-docs), which incorporates elements from the [Discord Official API Documentation](https://github.com/discord/discord-api-docs). The repository  is licensed under the [Creative Commons Attribution-ShareAlike 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/) (see [LICENSE](LICENSE)).\n"
		}
	},
	{
		"id": "R_kgDOK7qlXQ",
		"description": "Reverse engineered the Google Play Integrity API, Safetynet and DroidGuard",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/gpia",
		"name": "gpia",
		"nameWithOwner": "SamuelScheit/gpia",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-12-19T20:17:27Z",
		"updatedAt": "2024-09-20T20:12:27Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/34555296?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 32955,
			"edges": [
				{
					"size": 32955,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOK7qlXbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 4
				}
			}
		},
		"object": {
			"text": "# antiabuse-request\nMaking protobuf request to Android anti-abuse service\n\nMore info in blog https://habr.com/post/446790/\n"
		},
		"commits": [
			{
				"committedDate": "2024-09-20T20:12:23Z",
				"message": "Merge pull request #2 from SamuelScheit/dependabot/maven/com.google.protobuf-protobuf-java-3.25.5\n\nbuild(deps): bump com.google.protobuf:protobuf-java from 3.16.3 to 3.25.5",
				"messageBody": "…rotobuf-protobuf-java-3.25.5\n\nbuild(deps): bump com.google.protobuf:protobuf-java from 3.16.3 to 3.25.5"
			},
			{
				"committedDate": "2023-12-24T19:28:06Z",
				"message": "feat: implement mock classes + partially working initNative call",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-19T20:43:08Z",
				"message": "Merge pull request #1 from SamuelScheit/dependabot/maven/com.google.protobuf-protobuf-java-3.16.3\n\nBump com.google.protobuf:protobuf-java from 3.14.0 to 3.16.3",
				"messageBody": "…rotobuf-protobuf-java-3.16.3\n\nBump com.google.protobuf:protobuf-java from 3.14.0 to 3.16.3"
			},
			{
				"committedDate": "2023-12-19T20:20:04Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOAbrxpw",
		"description": "A framework for building native applications using React",
		"homepageUrl": "https://reactnative.dev",
		"url": "https://github.com/facebook/react-native",
		"name": "react-native",
		"nameWithOwner": "facebook/react-native",
		"owner": {
			"login": "facebook"
		},
		"createdAt": "2015-01-09T18:10:16Z",
		"updatedAt": "2024-10-11T21:50:28Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/ed25beaea45c09a110d03c786459c1cbe9cfa255638bd280af02a6010322e2f2/facebook/react-native",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 345,
			"nodes": [
				{
					"createdAt": "2024-10-08T22:20:58Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-10-08T10:41:31Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-10-02T13:44:06Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-10-02T09:46:45Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-10-01T10:20:51Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-24T08:25:33Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-16T16:25:38Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-11T16:12:13Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-10T13:17:08Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-08-20T09:25:17Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 24291,
		"isFork": false,
		"languages": {
			"totalCount": 14,
			"totalSize": 15159767,
			"edges": [
				{
					"size": 4517013,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 2573969,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 2511970,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 118647,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOAbrxp69yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOGWHiTQ",
		"description": "High-performance React Native Graphics using Skia",
		"homepageUrl": "https://shopify.github.io/react-native-skia",
		"url": "https://github.com/Shopify/react-native-skia",
		"name": "react-native-skia",
		"nameWithOwner": "Shopify/react-native-skia",
		"owner": {
			"login": "Shopify"
		},
		"createdAt": "2021-11-08T13:19:09Z",
		"updatedAt": "2024-10-11T09:28:38Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/8085?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 482
		},
		"releases": {
			"totalCount": 186,
			"nodes": [
				{
					"createdAt": "2024-10-01T13:09:45Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-30T19:46:00Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-30T15:31:54Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-11T05:04:43Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-10T06:48:28Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-08-22T13:39:47Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-08-01T07:43:53Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-07-25T08:32:18Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-07-05T12:45:03Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-06-28T08:36:25Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 443,
		"isFork": false,
		"languages": {
			"totalCount": 11,
			"totalSize": 1985609,
			"edges": [
				{
					"size": 1178575,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 640293,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 54119,
					"node": {
						"color": "#6866fb",
						"name": "Objective-C++"
					}
				}
			]
		},
		"stargazerCount": 6875,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOGWHiTa9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOAQWqrA",
		"description": "A private messenger for Windows, macOS, and Linux.",
		"homepageUrl": "https://signal.org/download",
		"url": "https://github.com/signalapp/Signal-Desktop",
		"name": "Signal-Desktop",
		"nameWithOwner": "signalapp/Signal-Desktop",
		"owner": {
			"login": "signalapp"
		},
		"createdAt": "2014-02-24T19:53:36Z",
		"updatedAt": "2024-10-11T12:43:04Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/da17a87b86f8f5761853127a72580a2b3fd34154ae79c6a41e421956ec4f60a1/signalapp/Signal-Desktop",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 763,
			"nodes": [
				{
					"createdAt": "2024-10-10T17:35:29Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-10-09T16:41:44Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-10-03T00:30:31Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-10-02T23:37:25Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-26T01:15:41Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-26T00:51:29Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-19T22:17:43Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-18T23:23:00Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-12T21:06:20Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2024-09-12T01:30:17Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 2656,
		"isFork": false,
		"languages": {
			"totalCount": 8,
			"totalSize": 14302440,
			"edges": [
				{
					"size": 11775825,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 1848418,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 645059,
					"node": {
						"color": "#c6538c",
						"name": "SCSS"
					}
				}
			]
		},
		"stargazerCount": 14582,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOAQWqrK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOCkrljQ",
		"description": "Allows you to emulate an Android native library, and an experimental  iOS emulation",
		"homepageUrl": "",
		"url": "https://github.com/zhkl0228/unidbg",
		"name": "unidbg",
		"nameWithOwner": "zhkl0228/unidbg",
		"owner": {
			"login": "zhkl0228"
		},
		"createdAt": "2019-02-26T09:32:15Z",
		"updatedAt": "2024-10-11T12:24:23Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/3bd59771c3cb93c3b06bfdd9f0d59654f146b9e2d970ef07bc7fbcaaad123ae3/zhkl0228/unidbg",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 15,
			"nodes": [
				{
					"createdAt": "2024-09-05T06:46:59Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2022-07-30T11:20:26Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2022-01-31T09:37:59Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2021-09-21T11:56:07Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2021-07-29T16:01:44Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2021-02-15T13:23:06Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2021-01-01T03:08:08Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2020-11-28T05:09:30Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2020-11-15T04:27:00Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2020-11-06T15:33:03Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 960,
		"isFork": false,
		"languages": {
			"totalCount": 11,
			"totalSize": 4346152,
			"edges": [
				{
					"size": 3605093,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 361357,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				},
				{
					"size": 171486,
					"node": {
						"color": "#438eff",
						"name": "Objective-C"
					}
				}
			]
		},
		"stargazerCount": 3805,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOCkrljbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "# unidbg\n\nAllows you to emulate an Android native library, and an experimental iOS emulation.<br>\n\nThis is an educational project to learn more about the ELF/MachO file format and ARM assembly.<br>\n\nUse it at your own risk !\n\n## License\n- unidbg uses software libraries from [Apache Software Foundation](http://apache.org). \n\nSimple tests under src/test directory\n- [unidbg-android/src/test/java/com/bytedance/frameworks/core/encrypt/TTEncrypt.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/bytedance/frameworks/core/encrypt/TTEncrypt.java)  \n\n![](assets/TTEncrypt.gif)\n***\n- [unidbg-android/src/test/java/com/sun/jna/JniDispatch32.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/sun/jna/JniDispatch32.java)  \n![](assets/JniDispatch32.gif)\n***\n- [unidbg-android/src/test/java/com/sun/jna/JniDispatch64.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/sun/jna/JniDispatch64.java)  \n![](assets/JniDispatch64.gif)\n***\n- [unidbg-android/src/test/java/org/telegram/messenger/Utilities32.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/org/telegram/messenger/Utilities32.java)  \n![](assets/Utilities32.gif)\n***\n- [unidbg-android/src/test/java/org/telegram/messenger/Utilities64.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/org/telegram/messenger/Utilities64.java)  \n![](assets/Utilities64.gif)\n\n## More tests\n- [unidbg-android/src/test/java/com/github/unidbg/android/QDReaderJni.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/github/unidbg/android/QDReaderJni.java)\n- [unidbg-android/src/test/java/com/anjuke/mobile/sign/SignUtil.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/anjuke/mobile/sign/SignUtil.java)\n\n## Features\n- Emulation of the JNI Invocation API so JNI_OnLoad can be called.\n- Support JavaVM, JNIEnv.\n- Emulation of syscalls instruction.\n- Support ARM32 and ARM64.\n- Inline hook, thanks to [Dobby](https://github.com/jmpews/Dobby).\n- Android import hook, thanks to [xHook](https://github.com/iqiyi/xHook).\n- iOS [fishhook](https://github.com/facebook/fishhook) and substrate and [whale](https://github.com/asLody/whale) hook.\n- [unicorn](https://github.com/zhkl0228/unicorn) backend support simple console debugger, gdb stub, instruction trace, memory read/write trace.\n- Support iOS objc and swift runtime.\n- Support [dynarmic](https://github.com/MerryMage/dynarmic) fast backend.\n- Support Apple M1 hypervisor, the fastest ARM64 backend.\n- Support Linux KVM backend with Raspberry Pi B4.\n\n## Thanks\n- [unicorn](https://github.com/zhkl0228/unicorn)\n- [dynarmic](https://github.com/MerryMage/dynarmic)\n- [HookZz](https://github.com/jmpews/Dobby)\n- [xHook](https://github.com/iqiyi/xHook)\n- [AndroidNativeEmu](https://github.com/AeonLucid/AndroidNativeEmu)\n- [usercorn](https://github.com/lunixbochs/usercorn)\n- [keystone](https://github.com/keystone-engine/keystone)\n- [capstone](https://github.com/aquynh/capstone)\n- [idaemu](https://github.com/36hours/idaemu)\n- [jelf](https://github.com/fornwall/jelf)\n- [whale](https://github.com/asLody/whale)\n- [kaitai_struct](https://github.com/kaitai-io/kaitai_struct)\n- [fishhook](https://github.com/facebook/fishhook)\n- [runtime_class-dump](https://github.com/Tyilo/runtime_class-dump)\n- [mman-win32](https://github.com/mcgarrah/mman-win32)\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/zhkl0228/unidbg.svg)](https://starchart.cc/zhkl0228/unidbg)\n\n"
		}
	},
	{
		"id": "R_kgDOGXTwtw",
		"description": "The fastest List component for React Native. (a prototype)",
		"homepageUrl": "https://margelo.io",
		"url": "https://github.com/margelo/react-native-wishlist",
		"name": "react-native-wishlist",
		"nameWithOwner": "margelo/react-native-wishlist",
		"owner": {
			"login": "margelo"
		},
		"createdAt": "2021-11-11T17:55:41Z",
		"updatedAt": "2024-10-07T13:28:47Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/c75608107aec259d0b2f3cf48c25b7f85825bc957e1adce1652d383014ccd1a8/margelo/react-native-wishlist",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 5,
			"nodes": [
				{
					"createdAt": "2023-01-06T20:23:31Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-01-06T19:54:11Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-01-06T19:32:14Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-01-04T21:57:01Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-01-04T21:12:20Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 7,
		"isFork": false,
		"languages": {
			"totalCount": 10,
			"totalSize": 246914,
			"edges": [
				{
					"size": 101929,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 85806,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 22018,
					"node": {
						"color": "#6866fb",
						"name": "Objective-C++"
					}
				}
			]
		},
		"stargazerCount": 140,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOGXTwt69yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOMCnLrQ",
		"description": "Truly independent web browser",
		"homepageUrl": "https://ladybird.org",
		"url": "https://github.com/LadybirdBrowser/ladybird",
		"name": "ladybird",
		"nameWithOwner": "LadybirdBrowser/ladybird",
		"owner": {
			"login": "LadybirdBrowser"
		},
		"createdAt": "2024-05-30T09:18:10Z",
		"updatedAt": "2024-10-11T21:47:33Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/f9dd3d6fa618e20e7994671c79a800cf933a988dfdd591dd59e7f45a3a210ed7/LadybirdBrowser/ladybird",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 869,
		"isFork": false,
		"languages": {
			"totalCount": 15,
			"totalSize": 28810370,
			"edges": [
				{
					"size": 24625090,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 2347802,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 1120519,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 20853,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOMCnLrbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "# Ladybird\n\n[Ladybird](https://ladybird.org) is a truly independent web browser, using a novel engine based on web standards.\n\n> [!IMPORTANT]\n> Ladybird is in a pre-alpha state, and only suitable for use by developers\n>\n\n## Features\n\nWe aim to build a complete, usable browser for the modern web.\n\nLadybird uses a multi-process architecture with a main UI process, several WebContent renderer processes,\nan ImageDecoder process, and a RequestServer process.\n\nImage decoding and network connections are done out of process to be more robust against malicious content.\nEach tab has its own renderer process, which is sandboxed from the rest of the system.\n\nAt the moment, many core library support components are inherited from SerenityOS:\n\n- LibWeb: Web rendering engine\n- LibJS: JavaScript engine\n- LibWasm: WebAssembly implementation\n- LibCrypto/LibTLS: Cryptography primitives and Transport Layer Security\n- LibHTTP: HTTP/1.1 client\n- LibGfx: 2D Graphics Library, Image Decoding and Rendering\n- LibArchive: Archive file format support\n- LibUnicode: Unicode and locale support\n- LibMedia: Audio and video playback\n- LibCore: Event loop, OS abstraction layer\n- LibIPC: Inter-process communication\n\n## How do I build and run this?\n\nSee [build instructions](Documentation/BuildInstructionsLadybird.md) for information on how to build Ladybird.\n\nLadybird runs on Linux, macOS, Windows (with WSL2), and many other \\*Nixes.\n\n## How do I read the documentation?\n\nCode-related documentation can be found in the [documentation](Documentation/) folder.\n\n## Get in touch and participate!\n\nJoin [our Discord server](https://discord.gg/nvfjVJ4Svh) to participate in development discussion.\n\nPlease read [Getting started contributing](Documentation/GettingStartedContributing.md) if you plan to contribute to Ladybird for the first time.\n\nBefore opening an issue, please see the [issue policy](CONTRIBUTING.md#issue-policy) and the [detailed issue-reporting guidelines](ISSUES.md).\n\nThe full contribution guidelines can be found in [`CONTRIBUTING.md`](CONTRIBUTING.md).\n\n## License\n\nLadybird is licensed under a 2-clause BSD license.\n"
		}
	},
	{
		"id": "R_kgDOE3j6Cg",
		"description": "An express.js route handler",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/Lambert-server",
		"name": "Lambert-server",
		"nameWithOwner": "SamuelScheit/Lambert-server",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-01-04T13:37:36Z",
		"updatedAt": "2024-09-26T15:10:58Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/31f33af42998e5ea8c58fdc7a80413d1faffd9d32ebd10ebb3ab0ef5a5fdf577/SamuelScheit/Lambert-server",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 11566,
			"edges": [
				{
					"size": 11566,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 4,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOE3j6CrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 84
				}
			}
		},
		"object": {
			"text": "# Lambert-server\nAn express.js Route Handler\n\n## Installation\n```\nnpm i lambert-server\n```\n\n## Usage\nES5 Import\n```js\nconst { Server, HTTPError } = require(\"lambert-server\");\n```\n\nor ES6 Import\n```ts\nimport { Server, HTTPError } from \"lambert-server\"\n```\n\n## Server\nServer options:\n```ts\nconst server = new Server({\n\tport        : number  = 8080;       // the port to listen on\n\thost        : string  = \"0.0.0.0\";  // the interface to listen on\n\tproduction  : boolean = false;      // enable in production mode - this will hide internal server errors\n\tserverInitLogging: boolean = true; // allows the server to log informations at startup, errors are excluded from this option\n\terrorHandler: (err: Error, req: Request, res: Response, next: NextFunction) => void // Default error handler displays JSON errors\n})\n```\nTo access the express [app](https://expressjs.com/de/4x/api.html#app) manually use ``server.app``\n\n## Register Routes\n```ts\nserver.registerRoutes(root: string): Promise<any[]>; // root is the root directory of all routes\n```\nThe HTTP API path is generated automatically based on the folder structure, so it is important that you name your files accordingly.\n\n\n\n## Body checking\nJSON body can be checked with a schema, that you pass to the check function.\nA Schema is a Object Structure with key-value objects that checks if the key is an instance of the value (class).\nYou can specify optional parameters if you prefix the key with a $\ne.g.: ``{ $captcha: String }``, this will make the ``captcha`` property in the body optional.\n```js\nimport { check } from \"lambert-server\";\nconst SCHEMA = { username: String, age: Number, $posts: [{ title: String }] }\napp.post(\"/\", check(SCHEMA), (req, res) => {});\n```\n\n## Examples\n### Example Server\nIn /index.js\n```ts\nimport { Server } from \"lambert-server\";\n// const { Server } = require(\"lambert-server\");\n\nasync function main() {\n\tconst server = new Server();\n\tawait server.registerRoutes(__dirname + \"/routes/\");\n\tawait server.start();\n}\n\nmain().catch(console.error)\n```\n\n## Example Route\nIn /routes/index.js\n```js\nimport { Router } from \"express\";\nimport { HTTPError, check } from \"lambert-server\";\n// const { Router } = require(\"express\")\n// const { HTTPError, check } = require(\"lambert-server\")\n\nconst router = Router();\n\nrouter.get(\"/\", (req, res) => {\n\tres.send(\"Hello World\");\n});\n\nrouter.get(\"/test\", (req, res) => {\n\tthrow new HTTPError(\"You don't have access to this ressource\", 401);\n});\n \n// JSON body parser\nrouter.post(\"/\", check({ username: String, age: Number, $posts: [{ title: String }] }), (req, res) => {});\n\nexport default router;\n// module.exports = router\n```\n"
		},
		"commits": [
			{
				"committedDate": "2024-09-26T15:10:54Z",
				"message": "Merge pull request #9 from SamuelScheit/dependabot/npm_and_yarn/express-4.19.2\n\n⬆️ Bump express from 4.17.3 to 4.19.2",
				"messageBody": "…ss-4.19.2\n\n⬆️ Bump express from 4.17.3 to 4.19.2"
			},
			{
				"committedDate": "2022-12-16T22:09:32Z",
				"message": "Merge pull request #8 from SamuelScheit/dependabot/npm_and_yarn/express-4.17.3\n\n⬆️ Bump express from 4.17.1 to 4.17.3",
				"messageBody": "…ss-4.17.3\n\n⬆️ Bump express from 4.17.1 to 4.17.3"
			},
			{
				"committedDate": "2021-10-16T14:35:55Z",
				"message": "Merge pull request #6 from CyberL1/master\n\nAdd a way to make the params optional trough `!`",
				"messageBody": "Add a way to make the params optional trough `!`"
			},
			{
				"committedDate": "2021-10-05T19:21:41Z",
				"message": "1.2.12",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T19:21:27Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/Lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T19:20:52Z",
				"message": "Merge pull request #5 from Intevel/master\n\nchanged option",
				"messageBody": "changed option"
			},
			{
				"committedDate": "2021-10-05T18:44:56Z",
				"message": "1.2.11",
				"messageBody": ""
			},
			{
				"committedDate": "2021-10-05T18:44:01Z",
				"message": "Merge pull request #4 from Intevel/master\n\nUpdate README.md",
				"messageBody": "Update README.md"
			},
			{
				"committedDate": "2021-10-05T18:40:00Z",
				"message": "Merge pull request #3 from Intevel/master\n\nAdded Server Option: routeLogging",
				"messageBody": "Added Server Option: routeLogging"
			},
			{
				"committedDate": "2021-10-03T20:37:43Z",
				"message": "Delete .DS_Store",
				"messageBody": ""
			},
			{
				"committedDate": "2021-09-09T15:05:51Z",
				"message": "Merge pull request #2 from Intevel/master",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-28T00:12:18Z",
				"message": "1.2.10",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-28T00:12:16Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-28T00:11:17Z",
				"message": ":arrow_up: update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-16T15:14:06Z",
				"message": "1.2.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-16T15:13:56Z",
				"message": ":bug: fix logs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T16:45:37Z",
				"message": "1.2.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-10T16:45:30Z",
				"message": ":wheelchair: switch to sync fs for backwards compatibility",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T22:51:35Z",
				"message": "1.2.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T22:51:34Z",
				"message": ":bug: fix route loading order",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T19:31:08Z",
				"message": "1.2.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T19:31:03Z",
				"message": ":sparkles: express app optional option",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:29:57Z",
				"message": "1.2.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-31T18:29:48Z",
				"message": ":sparkles: Server options pass http server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T19:05:55Z",
				"message": "1.2.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-26T19:05:52Z",
				"message": ":bug: fix windows path and replace \\ with /",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T17:17:50Z",
				"message": "1.2.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-07T17:17:44Z",
				"message": ":bug: load #parameter routes last",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-26T19:37:54Z",
				"message": "1.2.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-26T19:37:49Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-26T19:31:02Z",
				"message": "1.2.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-26T19:30:53Z",
				"message": "1.1.10",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-26T19:30:50Z",
				"message": ":bug: fix file loader",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T19:39:18Z",
				"message": "1.1.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T19:39:15Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T18:45:32Z",
				"message": "1.1.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T18:45:23Z",
				"message": ":sparkles: load typescript routes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T18:45:06Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/Lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-22T18:44:59Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T11:37:38Z",
				"message": "1.1.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T11:37:36Z",
				"message": ":bug: fix body parser",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:43:08Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/Lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:43:05Z",
				"message": "1.1.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T01:42:44Z",
				"message": ":bug: fix check Tuple",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T16:05:48Z",
				"message": "1.1.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T16:05:38Z",
				"message": ":bug: fix array schema",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T11:17:04Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:06:54Z",
				"message": "1.1.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:06:50Z",
				"message": ":bug: fix error handler",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T16:00:50Z",
				"message": "1.1.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T16:00:37Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T15:57:04Z",
				"message": "1.1.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T15:56:57Z",
				"message": ":bug: export instanceOf",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T15:41:14Z",
				"message": "1.1.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T15:40:28Z",
				"message": "1.1.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T15:39:37Z",
				"message": ":bug: fix check for any Object type",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T22:13:57Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T22:10:50Z",
				"message": "1.0.10",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T22:10:36Z",
				"message": ":bug: fix errorHandler in sub routers",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T17:54:37Z",
				"message": ":lock: secure express",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:56:13Z",
				"message": "1.0.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:55:59Z",
				"message": ":sparkles: check optional + tuple",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T14:06:31Z",
				"message": "1.0.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T14:06:24Z",
				"message": ":sparkles: optional parameter for check(Schema)",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T12:03:53Z",
				"message": "1.0.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T12:03:48Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/Lambert-server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T12:03:03Z",
				"message": ":arrow_up: update dependencies",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-19T18:21:56Z",
				"message": "1.0.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-19T18:21:09Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-19T18:20:35Z",
				"message": "1.0.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-19T18:20:28Z",
				"message": ":bug: fix multiple url params",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-16T10:59:02Z",
				"message": "1.0.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-16T10:54:51Z",
				"message": ":sparkles: Body Parser",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T15:02:41Z",
				"message": "1.0.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T15:02:40Z",
				"message": ":sparkles: export ServerOptions",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:56:31Z",
				"message": "1.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:56:15Z",
				"message": ":bug: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:54:56Z",
				"message": "1.0.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:54:55Z",
				"message": ":bug: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:48:48Z",
				"message": ":sparkles: add types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:46:00Z",
				"message": ":sparkles: add server to every request",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:35:04Z",
				"message": ":pencil2: Readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T14:22:41Z",
				"message": ":tada: finished Server + Routerloader + HTTPError",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T13:37:38Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Implemented Features:**\n1. Body Parser\n2. Support for TypeScript routes\n3. HTTP Server and Express app options\n4. Body check for optional + tuple parameters\n5. Body check with optional parameters\n6. Server options customization\n7. Support for express.js route handling\n\n**Security Features:**\n1. Securing of express routes\n\n**Notable Updates:**\n1. Backwards compatibility using sync fs\n2. Optional express app enablement\n3. Array schema fixed"
	},
	{
		"id": "R_kgDOD71brA",
		"description": "A patched version of discord, with bot login support",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/discord-bot-client",
		"name": "discord-bot-client",
		"nameWithOwner": "SamuelScheit/discord-bot-client",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2020-05-15T01:41:01Z",
		"updatedAt": "2024-09-29T13:15:42Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/264068012/f07e10fb-6072-41a9-a8c3-51ab379cd6aa",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#e34c26",
			"name": "HTML"
		},
		"archivedAt": "2024-08-10T12:38:44Z",
		"discussions": {
			"totalCount": 9
		},
		"releases": {
			"totalCount": 1,
			"nodes": [
				{
					"createdAt": "2020-08-05T11:42:14Z",
					"releaseAssets": {
						"totalCount": 10,
						"nodes": [
							{
								"downloadCount": 5749
							},
							{
								"downloadCount": 537277
							},
							{
								"downloadCount": 33978
							},
							{
								"downloadCount": 5017
							},
							{
								"downloadCount": 147442
							},
							{
								"downloadCount": 26587
							},
							{
								"downloadCount": 15730
							},
							{
								"downloadCount": 78175
							},
							{
								"downloadCount": 9582
							},
							{
								"downloadCount": 11656
							}
						]
					}
				}
			]
		},
		"forkCount": 417,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 39236,
			"edges": [
				{
					"size": 34030,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				},
				{
					"size": 5206,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 685,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOD71brLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 99
				}
			}
		},
		"object": {
			"text": "![BOT CLIENT](https://s12.directupload.net/images/200907/zcpxtyxp.png)\n\n<div>\n  <p>\n    <a href=\"https://www.patreon.com/samuelscheit\" data-patreon-widget-type=\"become-patron-button\"><img src=\"https://c5.patreon.com/external/logo/become_a_patron_button@2x.png\" width=\"85\"></a>\n  </p>\n    \n\n| [Download](https://github.com/samuelscheit/discord-bot-client/releases/tag/3.1.0) | [FAQ](https://github.com/samuelscheit/discord-bot-client/blob/master/FAQ.md) | [Tutorial](https://www.youtube.com/watch?v=AmKBFzJOMpY) |\n| :---: | :---: | :---: |\n\n</div>\n\n---\n\n**Discord Bot Client** allows you to use your bot, just like any other user account, except Friends and Groups. \n\n### **No longer Maintained**\n\n---\n![Features](https://s12.directupload.net/images/200907/9m8qldwi.png)\n- **View Guilds** *(Lazy load them)*\n- **Manage Guilds** (Name, Image, Audit log, Emoji, Webhooks, Invites, Bans, Widget, Moderation, Roles)\n- **Manage Channels** (Add, Delete, Name, Permissions, Invites, Webhooks, Slowmode, NSFW, Topic)\n- **Messages** (Send, View History, Embeds, View Reactions, Add/Remove Reactions, Delete, Edit, Pin)\n- **Create a Guild** (if the bot has fewer than 10 Servers)\n- **Voice Support**\n- **See Guild members in the side bar** (you can see them in the server dropdown menu under members)\n- **Use Emojis from other servers** (Nitro)\n- **GIF Search**\n- **Send Files**\n- **DM's** (DM's will show up, after a user dms the bot)\n\n---\n\n![Build](https://s12.directupload.net/images/200907/5j3544ai.png)\n\n>  __You need to install [NodeJS](https://nodejs.org/en/download/).__ Install git or just download the repository as a zip file:\n\n```js\ngit clone https://github.com/samuelscheit/discord-bot-client\ncd discord-bot-client/electron\n```\n\n>  Install all dependencies with ```npm i``` start Bot Client with ```electron .```\n>  \n\n\n*Discord Bot Client is **no longer supported** and also no longer updated or maintained.*\n"
		},
		"commits": [
			{
				"committedDate": "2024-08-10T12:38:30Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-17T08:08:11Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-25T11:32:23Z",
				"message": ":bug: fix user agent header",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-25T09:20:58Z",
				"message": ":bug: fix asset loading",
				"messageBody": ""
			},
			{
				"committedDate": "2021-08-03T16:27:54Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T21:05:41Z",
				"message": "Delete Dockerfile",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-27T20:37:02Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-06T23:37:12Z",
				"message": "Merge pull request #264 from Shayshon/master\n\nUpdate (most) api versions.",
				"messageBody": "Update (most) api versions."
			},
			{
				"committedDate": "2021-04-22T21:48:08Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-04T18:45:35Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-11-13T23:24:09Z",
				"message": "Merge pull request #178 from reep1/patch-1\n\nUpdate download.js",
				"messageBody": "Update download.js"
			},
			{
				"committedDate": "2020-11-07T16:21:06Z",
				"message": "Merge pull request #174 from xNaCly/master\n\nreplace 'bot@email' with bot token in settings",
				"messageBody": "replace 'bot@email' with bot token in settings"
			},
			{
				"committedDate": "2020-11-07T12:35:45Z",
				"message": "Merge pull request #172 from xNaCly/master\n\nremoved support button in alert",
				"messageBody": "removed support button in alert"
			},
			{
				"committedDate": "2020-10-06T17:47:29Z",
				"message": "Merge pull request #139 from haydenwalker980/patch-1\n\nupdate w/link to new extension",
				"messageBody": "update w/link to new extension"
			},
			{
				"committedDate": "2020-09-07T15:01:12Z",
				"message": "Merge pull request #114 from Intevel/master\n\nUpdate README.md",
				"messageBody": "Update README.md"
			},
			{
				"committedDate": "2020-08-17T17:23:08Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-17T17:20:16Z",
				"message": "Tutorial",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-11T15:23:38Z",
				"message": "Create FUNDING.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-10T09:10:36Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-08T13:43:19Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/discord-bot-client into master",
				"messageBody": "…ent into master"
			},
			{
				"committedDate": "2020-08-08T13:43:13Z",
				"message": "launch script",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-07T20:17:17Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-05T13:49:40Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-05T13:43:54Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-05T11:42:14Z",
				"message": "fix microphone",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-05T11:39:08Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/discord-bot-client into master",
				"messageBody": "…ent into master"
			},
			{
				"committedDate": "2020-08-05T11:39:04Z",
				"message": "electron build",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-05T11:10:49Z",
				"message": "Merge pull request #21 from bernawastaken/master\n\nPoint to international addon page",
				"messageBody": "Point to international addon page"
			},
			{
				"committedDate": "2020-08-04T15:17:02Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-03T09:38:08Z",
				"message": "github + support server notice, fix server join",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-02T21:27:45Z",
				"message": "don't hide token in localstorage, because of force quit error",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-02T11:10:04Z",
				"message": "fix href",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-02T11:08:26Z",
				"message": "Update index.html",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-02T10:55:44Z",
				"message": "extension notice",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T23:34:41Z",
				"message": "updated extension",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T23:33:29Z",
				"message": "updated icons",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T23:31:40Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/discord-bot-client",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T23:31:34Z",
				"message": "extension",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T21:07:00Z",
				"message": "Update index.html",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T20:58:58Z",
				"message": "Update index.html",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T20:29:51Z",
				"message": "Update index.html",
				"messageBody": ""
			},
			{
				"committedDate": "2020-08-01T09:38:03Z",
				"message": "Update index.js",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-28T11:00:26Z",
				"message": "Update index.html",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-28T10:27:49Z",
				"message": "Update index.html",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-18T01:12:59Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-18T01:12:35Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-18T01:08:45Z",
				"message": "Added Tutorial",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-13T17:50:22Z",
				"message": "third party cookies fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-13T17:42:02Z",
				"message": "Update index.html",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-11T21:53:31Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-10T23:14:36Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/discord-bot-client",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-10T23:14:32Z",
				"message": "fix websocket",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-01T10:21:05Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-26T11:08:18Z",
				"message": "wrong origin",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-26T11:08:01Z",
				"message": "fixUserAffinitiesUserIds",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-26T10:31:38Z",
				"message": "fix cloudflare cookie",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-26T09:33:16Z",
				"message": "fix cors",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-25T13:15:06Z",
				"message": "fix cors",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-25T12:42:56Z",
				"message": "cdn",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-24T09:48:38Z",
				"message": "fix referrer",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-24T07:24:18Z",
				"message": "fix cors",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-24T07:23:53Z",
				"message": "fix cors",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-23T20:57:27Z",
				"message": "fix referrer",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-23T13:48:18Z",
				"message": "unmute all guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-18T10:13:28Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/discord-bot-client",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-18T10:13:15Z",
				"message": "electron app started - not finished",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-18T10:13:07Z",
				"message": "docker file",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-18T10:09:04Z",
				"message": "Docker container",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-14T21:01:32Z",
				"message": "fix connection issue on localhost",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-09T14:34:25Z",
				"message": "blurple background on load",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-09T14:13:38Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-09T14:12:33Z",
				"message": "delete clear cache instructions",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-09T13:58:51Z",
				"message": "fix cache",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-08T08:32:48Z",
				"message": "clear cache instructions",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-07T18:11:20Z",
				"message": "fix no guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-07T13:42:05Z",
				"message": "fix presence",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T19:16:36Z",
				"message": "really quick login fix needs more investigation",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T11:31:22Z",
				"message": "fix login screen on logout",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T10:37:20Z",
				"message": "fix loader GUILD_MEMBERS_CHUNK",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T10:34:01Z",
				"message": "fix guild member crash",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T10:28:28Z",
				"message": "more than 100 guilds",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T10:27:43Z",
				"message": "update functions",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T10:27:05Z",
				"message": "update version",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T10:23:23Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/discord-bot-client",
				"messageBody": ""
			},
			{
				"committedDate": "2020-06-05T10:22:59Z",
				"message": "new improved version, assets fix, nitro, gifs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-30T09:24:04Z",
				"message": "Update index.js",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-30T09:23:07Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-30T09:22:41Z",
				"message": "Voice Support",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-24T09:36:20Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T23:49:21Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T21:30:15Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T11:15:41Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T10:34:21Z",
				"message": "typo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T02:47:35Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T02:19:09Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T02:10:27Z",
				"message": "Create README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T01:41:28Z",
				"message": "Delete LICENSE",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T01:41:18Z",
				"message": "Delete README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-05-15T01:41:03Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "### Important Updates Summary\n\n#### New Features\n- Voice Support\n- Nitro Support\n- GIFs Support\n- Tutorial\n- Electron App\n\n#### Bug Fixes\n- Fixed user agent header\n- Fixed asset loading\n- Fixed microphone\n- Fixed server join\n- Fixed presence\n- Fixed GUILD_MEMBERS_CHUNK loader\n- Fixed guild member crash\n- Fixed no guilds issue\n- Fixed CORS issue\n- Fixed referrer issue\n- Fixed connection issue on localhost\n- Fixed cache issue\n\n#### Improvements\n- Updated version\n- Improved assets\n- Support for more than 100 guilds\n- Update functions\n- Electron build\n- Docker file creations and deletions\n\n#### Changes\n- No longer hiding token in local storage\n- Remove clear cache instructions\n- Unmute all guilds\n\n#### Miscellaneous\n- Fixed typo\n- Added GitHub + support server notice\n- Third-party cookies fix\n- Cloudflare cookie fix"
	},
	{
		"id": "R_kgDOAwziaw",
		"description": "A command line utility to work with Sentry.",
		"homepageUrl": "https://docs.sentry.io/cli/",
		"url": "https://github.com/getsentry/sentry-cli",
		"name": "sentry-cli",
		"nameWithOwner": "getsentry/sentry-cli",
		"owner": {
			"login": "getsentry"
		},
		"createdAt": "2016-02-05T21:44:33Z",
		"updatedAt": "2024-10-11T18:13:01Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/1f4cefd840da3d797a8f2352843825390aa46735f082beb50e679086702ebf1a/getsentry/sentry-cli",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#dea584",
			"name": "Rust"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 309,
			"nodes": [
				{
					"createdAt": "2024-10-07T13:18:47Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 15
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 49
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 183
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 97
							},
							{
								"downloadCount": 71
							},
							{
								"downloadCount": 353
							},
							{
								"downloadCount": 389
							}
						]
					}
				},
				{
					"createdAt": "2024-10-02T13:30:45Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 13
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 15
							},
							{
								"downloadCount": 174
							},
							{
								"downloadCount": 27
							},
							{
								"downloadCount": 47
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 15
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 423
							},
							{
								"downloadCount": 336
							},
							{
								"downloadCount": 82
							},
							{
								"downloadCount": 6
							}
						]
					}
				},
				{
					"createdAt": "2024-10-01T09:16:28Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 26
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 7
							},
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 68
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 123
							},
							{
								"downloadCount": 94
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 40
							},
							{
								"downloadCount": 17
							}
						]
					}
				},
				{
					"createdAt": "2024-09-30T13:22:04Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 7
							},
							{
								"downloadCount": 25
							},
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 41
							},
							{
								"downloadCount": 85
							},
							{
								"downloadCount": 17
							},
							{
								"downloadCount": 140
							},
							{
								"downloadCount": 145
							}
						]
					}
				},
				{
					"createdAt": "2024-09-26T14:40:14Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 39
							},
							{
								"downloadCount": 89
							},
							{
								"downloadCount": 20
							},
							{
								"downloadCount": 7
							},
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 44
							},
							{
								"downloadCount": 152
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 207
							}
						]
					}
				},
				{
					"createdAt": "2024-09-23T09:23:56Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 65
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 35
							},
							{
								"downloadCount": 4
							},
							{
								"downloadCount": 47
							},
							{
								"downloadCount": 101
							},
							{
								"downloadCount": 236
							},
							{
								"downloadCount": 211
							},
							{
								"downloadCount": 234
							},
							{
								"downloadCount": 12768
							}
						]
					}
				},
				{
					"createdAt": "2024-09-10T10:39:27Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 22
							},
							{
								"downloadCount": 19
							},
							{
								"downloadCount": 19
							},
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 29
							},
							{
								"downloadCount": 20
							},
							{
								"downloadCount": 1166
							},
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 165
							},
							{
								"downloadCount": 151
							},
							{
								"downloadCount": 91
							},
							{
								"downloadCount": 233
							},
							{
								"downloadCount": 550
							}
						]
					}
				},
				{
					"createdAt": "2024-09-09T13:06:39Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 46
							},
							{
								"downloadCount": 90
							},
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 141
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 46
							},
							{
								"downloadCount": 137
							},
							{
								"downloadCount": 20
							}
						]
					}
				},
				{
					"createdAt": "2024-09-05T14:01:03Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 11846
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 466
							},
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 465
							},
							{
								"downloadCount": 23
							},
							{
								"downloadCount": 46
							},
							{
								"downloadCount": 108
							},
							{
								"downloadCount": 244
							},
							{
								"downloadCount": 13841
							}
						]
					}
				},
				{
					"createdAt": "2024-08-28T13:42:10Z",
					"releaseAssets": {
						"totalCount": 14,
						"nodes": [
							{
								"downloadCount": 5
							},
							{
								"downloadCount": 14
							},
							{
								"downloadCount": 22
							},
							{
								"downloadCount": 97
							},
							{
								"downloadCount": 26
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 574
							},
							{
								"downloadCount": 12
							},
							{
								"downloadCount": 410
							},
							{
								"downloadCount": 476
							},
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 240
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 179
							}
						]
					}
				}
			]
		},
		"forkCount": 221,
		"isFork": false,
		"languages": {
			"totalCount": 8,
			"totalSize": 847168,
			"edges": [
				{
					"size": 786642,
					"node": {
						"color": "#dea584",
						"name": "Rust"
					}
				},
				{
					"size": 47859,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 6359,
					"node": {
						"color": "#3572A5",
						"name": "Python"
					}
				}
			]
		},
		"stargazerCount": 899,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOAwzia7FyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "<p align=\"center\">\n  <a href=\"https://sentry.io/?utm_source=github&utm_medium=logo\" target=\"_blank\">\n    <picture>\n      <source srcset=\"https://sentry-brand.storage.googleapis.com/sentry-logo-white.png\" media=\"(prefers-color-scheme: dark)\" />\n      <source srcset=\"https://sentry-brand.storage.googleapis.com/sentry-logo-black.png\" media=\"(prefers-color-scheme: light), (prefers-color-scheme: no-preference)\" />\n      <img src=\"https://sentry-brand.storage.googleapis.com/sentry-logo-black.png\" alt=\"Sentry\" width=\"280\">\n    </picture>\n  </a>\n</p>\n\n# Official Sentry Command Line Interface\n\n[![Build Status](https://github.com/getsentry/sentry-cli/workflows/CI/badge.svg?branch=master)](https://github.com/getsentry/sentry-cli/actions?query=workflow%3ACI)\n[![GitHub release](https://img.shields.io/github/release/getsentry/sentry-cli.svg)](https://github.com/getsentry/sentry-cli/releases/latest)\n[![npm version](https://img.shields.io/npm/v/@sentry/cli.svg)](https://www.npmjs.com/package/@sentry/cli)\n[![license](https://img.shields.io/github/license/getsentry/sentry-cli.svg)](https://github.com/getsentry/sentry-cli/blob/master/LICENSE)\n\nThis is a Sentry command line client for some generic tasks. Right now this is\nprimarily used to upload debug symbols to Sentry if you are not using the\nFastlane tools.\n\n* Downloads can be found under\n  [Releases](https://github.com/getsentry/sentry-cli/releases/)\n* Documentation can be found [here](https://docs.sentry.io/hosted/learn/cli/)\n\n## Installation\n\nIf you are on OS X or Linux, you can use the automated downloader which will fetch the latest release version for you and install it:\n\n    curl -sL https://sentry.io/get-cli/ | bash\n\nWe do, however, encourage you to pin the specific version of the CLI, so your builds are always reproducible.\nTo do that, you can use the exact same method, with an additional version specifier:\n\n    curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION=2.33.1 bash\n\nThis will automatically download the correct version of `sentry-cli` for your operating system and install it. If necessary, it will prompt for your admin password for `sudo`. For a different installation location or for systems without `sudo` (like Windows), you can `export INSTALL_DIR=/custom/installation/path` before running this command.\n\nIf you are using `sentry-cli` on Windows environments, [Microsoft Visual C++ Redistributable](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist) is required.\n\nTo verify it’s installed correctly you can bring up the help:\n\n    sentry-cli --help\n\n### pip\n\n_New in 2.14.3_: `sentry-cli` can also be installed using `pip`:\n\n```bash\npip install sentry-cli\n```\n\n### Node\n\nAdditionally, you can also install this binary via npm:\n\n    npm install @sentry/cli\n\nWhen installing globally, make sure to have set\n[correct permissions on the global node_modules directory](https://docs.npmjs.com/getting-started/fixing-npm-permissions).\nIf this is not possible in your environment or still produces an EACCESS error,\ninstall as root:\n\n    sudo npm install -g @sentry/cli --unsafe-perm\n\nBy default, this package will download sentry-cli from the CDN managed by [Fastly](https://www.fastly.com/).\nTo use a custom CDN, set the npm config property `sentrycli_cdnurl`. The downloader will append\n`\"/<version>/sentry-cli-<dist>\"`.\n\n```sh\nnpm install @sentry/cli --sentrycli_cdnurl=https://mymirror.local/path\n```\n\nOr add property into your `.npmrc` file (https://www.npmjs.org/doc/files/npmrc.html)\n\n```rc\nsentrycli_cdnurl=https://mymirror.local/path\n```\n\nThere are a few environment variables that you can provide to control the npm installation:\n\n```\nSENTRYCLI_CDNURL=<url> # Use alternative cdn url for downloading binary\nSENTRYCLI_USE_LOCAL=1 # Use local instance of sentry-cli binary (looked up via $PATH environment)\nSENTRYCLI_SKIP_DOWNLOAD=1 # Skip downloading binary entirely\nSENTRYCLI_NO_PROGRESS_BAR=1 # Do not print the progress bar when downloading binary (default for non-TTY environments like CI)\nSENTRYCLI_LOG_STREAM=<stdout|stderr> # Changes where to redirect install script output\n```\n\nWhen using `sentry-cli` via JavaScript API or any 3rd party plugin that is consuming said API,\nyou can also use `SENTRY_BINARY_PATH=<path>` alongside `SENTRYCLI_SKIP_DOWNLOAD=1` to completely\ncontrol what binaries are downloaded and used throughout the whole process.\n\nIf you're installing the CLI with NPM from behind a proxy, the install script will\nuse either NPM's configured HTTPS proxy server or the value from your `HTTPS_PROXY`\nenvironment variable.\n\n### Homebrew\n\nA homebrew recipe is provided in the `getsentry/tools` tap:\n\n    brew install getsentry/tools/sentry-cli\n\n### Docker\n\nAs of version _1.25.0_, there is an official Docker image that comes with\n`sentry-cli` preinstalled. If you prefer a specific version, specify it as tag.\nThe latest development version is published under the `edge` tag. In production,\nwe recommend you to use the `latest` tag. To use it, run:\n\n```sh\ndocker pull getsentry/sentry-cli\ndocker run --rm -v $(pwd):/work getsentry/sentry-cli --help\n```\n\nStarting version _`2.8.0`_, in case you see `\"error: config value 'safe.directory' was not found;\"` message,\nyou also need to correctly set UID and GID of mounted volumes like so:\n\n```sh\ndocker run --rm -u \"$(id -u):$(id -g)\" -v $(pwd):/work getsentry/sentry-cli --help\n```\n\nThis is required due to security issue in older `git` implementations. See [here](https://github.blog/2022-04-12-git-security-vulnerability-announced/) for more details.\n\n## Update\n\nTo update sentry-cli to the latest version run:\n\n```sh\nsentry-cli update\n```\n\n## Compiling\n\nIn case you want to compile this yourself, you need to install at minimum the\nfollowing dependencies:\n\n* Rust stable and Cargo\n* Make, CMake and a C compiler\n\nUse cargo to compile:\n\n    $ cargo build\n\nAlso, there is a Dockerfile that builds an Alpine-based Docker image with\n`sentry-cli` in the PATH. To build and use it, run:\n\n```sh\ndocker build -t sentry-cli .\ndocker run --rm -v $(pwd):/work sentry-cli --help\n```\n"
		}
	},
	{
		"id": "R_kgDOIX7jbQ",
		"description": "Reverse-engineering Discord's user settings (and other!) protobufs.",
		"homepageUrl": "",
		"url": "https://github.com/dolfies/discord-protos",
		"name": "discord-protos",
		"nameWithOwner": "dolfies/discord-protos",
		"owner": {
			"login": "dolfies"
		},
		"createdAt": "2022-11-04T22:54:50Z",
		"updatedAt": "2024-10-05T11:39:44Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/0ee5d7a2a3c0ab2f90f66b72915db6053ccb9c15368098a0f2662b9e80925d22/dolfies/discord-protos",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 423622,
			"edges": [
				{
					"size": 415009,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 6229,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 2384,
					"node": {
						"color": "#3572A5",
						"name": "Python"
					}
				}
			]
		},
		"stargazerCount": 66,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOIX7jbbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 3
				}
			}
		},
		"object": {
			"text": "# Discord Protocol Buffers\nReverse-engineering Discord's protobufs.\n\nThis repository provides protocol buffer files for all protobufs found in Discord's client source, automatically generated and automatically updated. The protobufs are provided as .proto files in the `out/` directory.\n\nThese protobufs are used by Discord clients for transmitting data like user settings and premium marketing.\n\nProvided for educational purposes only.\n\n### Credits\n\n- [arHSM](https://github.com/arHSM) for originally reverse-engineering the technology behind Discord's protobuf implementation.\n\n## Usage\n\n### Note\nAutomating user accounts is against the Discord ToS. This repository is a proof of concept and I cannot recommend using it. Do so at your own risk.\n\n### Installation\n```\n# with npm\nnpm install discord-protos\n\n# with yarn\nyarn add discord-protos\n\n# with pnpm\npnpm add discord-protos\n\n# with pip\npip install discord-protos\n```\n\n### Example\nJavaScript:\n```js\nconst { PreloadedUserSettings } = require('discord-protos');\n\nconst encoded = PreloadedUserSettings.toBase64({\n    status: {\n        status: {\n            value: \"online\",\n        },\n        customStatus: {\n            text: \"Hello World\",\n            emojiId: 0n,\n            emojiName: \"\",\n            expiresAtMs: 0n,\n        },\n    },\n});\n\nconst decoded = PreloadedUserSettings.fromBase64(encoded);\n\nconsole.log(encoded, decoded);\n```\n\nPython:\n```py\nimport base64\nfrom discord_protos import PreloadedUserSettings\n\nsettings = PreloadedUserSettings()\nencoded = base64.b64encode(settings.ParseDict({\n    'status': {\n        'status': {\n            'value': 'online',\n        },\n        'custom_status': {\n            'text': 'Hello World',\n            'emoji_id': 0,\n            'emoji_name': '',\n            'expires_at_ms': 0,\n        },\n    },\n}).SerializeToString())\n\ndecoded = PreloadedUserSettings.FromString(base64.b64decode(encoded))\n\nprint(encoded, decoded)\n```\n\nThe following table shows which protobuf user settings correspond to which .proto file (the Python package also provides a `UserSettingsType` enum for convenience).\n\n| Type | Value                             | File                        | Use                                                |\n| ---- | --------------------------------- | --------------------------- | -------------------------------------------------- |\n| 1    | `PRELOADED_USER_SETTINGS`         | PreloadedUserSettings.proto | General Discord user settings.                     |\n| 2    | `FRECENCY_AND_FAVORITES_SETTINGS` | FrecencyUserSettings.proto  | Frecency and favorites storage for various things. |\n| 3    | `TEST_SETTINGS`                   | -                           | Unknown.                                           |\n\nBase64-encoded data for these protobufs are provided by the `GET /users/@me/settings-proto/{type}` endpoint. For preloaded user settings, base64-encoded data is provided in the `user_settings_proto` key of the `READY` event received in the Discord Gateway, as well as in `USER_SETTINGS_PROTO_UPDATE` events.\n\n### Protobufs\nThe .proto files can be compiled down to Python or JavaScript files by running `npm run py` or `npm run js`. This requires protoc to be installed.\n\n\n### Development\nRunning `pnpm load` will extract and save the latest protobufs to the `discord_protos/` directory.\n"
		},
		"commits": [
			{
				"committedDate": "2023-08-17T11:06:16Z",
				"message": "Update NPM package (#3)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-11T23:04:16Z",
				"message": "fix: parse.js script (#2)\n\nPreviously parse.js failed with the following error:\r\n```\r\nError: Evaluation failed: TypeError: Illegal invocation\r\n    at Function.values (<anonymous>)\r\n```\r\nbecause Object.values was called on a DomTokenList class which couldn't be iterated.\r\nTo fix this error and any error in the future a try catch was added.",
				"messageBody": "Previously parse.js failed with the following error:\r\n```\r\nError: Evaluation failed: TypeError: Illegal invocation\r\n    at Function.values (<anonymous>)\r\n```\r\nbecause Object.values was called on a DomTokenList class which couldn't be iterated.\r\nTo fix this error and any error in the future a try catch was added."
			},
			{
				"committedDate": "2023-02-15T23:34:29Z",
				"message": "Automatically fetch and generate protobuf definitions (#1)\n\n* fix: implement getModules function\r\n\r\n* fix: implement getModules function\r\n\r\n* feat: fetch and write protobuffer definitions\r\n\r\n* feat: protobuffer implementations with types\r\n\r\n* test: added\r\n\r\n* !feat: update PreloadedUserSettings.proto\r\n\r\n* chore: formatter, gitignore, scripts\r\n\r\n* ci: automatically update definitions with github action\r\n\r\n* ci: workflow_dispatch\r\n\r\n* ci: workflow_dispatch\r\n\r\n* ci: fix\r\n\r\n* docs: update readme\r\n\r\n* feat: add typescript compiler\r\n\r\n* v1.0.1\r\n\r\n* feat: use protobuf-ts\r\n\r\n* v1.0.2\r\n\r\n* fix: types\r\n\r\n* v1.0.3\r\n\r\n* v1.0.4\r\n\r\n* Update README.md\r\n\r\n* Update .github/workflows/update.yml\r\n\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>\r\n\r\n* Update .github/workflows/update.yml\r\n\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>\r\n\r\n* Update .github/workflows/update.yml\r\n\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Samuel <34555296+Flam3rboy@users.noreply.github.com>\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>",
				"messageBody": "* fix: implement getModules function\r\n\r\n* fix: implement getModules function\r\n\r\n* feat: fetch and write protobuffer definitions\r\n\r\n* feat: protobuffer implementations with types\r\n\r\n* test: added\r\n\r\n* !feat: update PreloadedUserSettings.proto\r\n\r\n* chore: formatter, gitignore, scripts\r\n\r\n* ci: automatically update definitions with github action\r\n\r\n* ci: workflow_dispatch\r\n\r\n* ci: workflow_dispatch\r\n\r\n* ci: fix\r\n\r\n* docs: update readme\r\n\r\n* feat: add typescript compiler\r\n\r\n* v1.0.1\r\n\r\n* feat: use protobuf-ts\r\n\r\n* v1.0.2\r\n\r\n* fix: types\r\n\r\n* v1.0.3\r\n\r\n* v1.0.4\r\n\r\n* Update README.md\r\n\r\n* Update .github/workflows/update.yml\r\n\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>\r\n\r\n* Update .github/workflows/update.yml\r\n\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>\r\n\r\n* Update .github/workflows/update.yml\r\n\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>\r\n\r\n---------\r\n\r\nCo-authored-by: Samuel <34555296+Flam3rboy@users.noreply.github.com>\r\nCo-authored-by: dolfies <jeyalfie47@gmail.com>"
			}
		],
		"commitSummary": "**Fixes:**\n1. Updated parse.js script to handle `TypeError: Illegal invocation` error caused by Object.values being called on a DomTokenList class.\n2. Fixed implementing getModules function.\n\n**Features:**\n1. Implemented protobuffer implementations with types.\n2. Automatically fetch and generate protobuf definitions using a GitHub action.\n3. Added typescript compiler.\n4. Updated to use protobuf-ts.\n\n**Tests and CI/CD:**\n1. Added tests.\n2. Implemented workflow_dispatch for GitHub actions.\n3. Set up GitHub action to automatically update definitions.\n4. Fixed GitHub action workflow.\n\n**Documentation:**\n1. Updated README.md.\n\n**Code Maintenance:**\n1. Ran formatter, updated gitignore, and updated scripts."
	},
	{
		"id": "R_kgDOHQwMCg",
		"description": "iOS Gyki App to view the timetable and the substitution plan",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/gyki-app",
		"name": "gyki-app",
		"nameWithOwner": "SamuelScheit/gyki-app",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2022-04-30T16:38:49Z",
		"updatedAt": "2024-01-21T22:40:28Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/34555296?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#438eff",
			"name": "Objective-C"
		},
		"archivedAt": "2024-01-21T22:40:28Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 13,
			"totalSize": 1761552,
			"edges": [
				{
					"size": 806123,
					"node": {
						"color": "#438eff",
						"name": "Objective-C"
					}
				},
				{
					"size": 371334,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 349378,
					"node": {
						"color": "#178600",
						"name": "C#"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOHQwMCrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2024-01-21T22:38:41Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOFKFQfQ",
		"description": "Spoof TLS/JA3 fingerprints in GO and Javascript ",
		"homepageUrl": "",
		"url": "https://github.com/Danny-Dasilva/CycleTLS",
		"name": "CycleTLS",
		"nameWithOwner": "Danny-Dasilva/CycleTLS",
		"owner": {
			"login": "Danny-Dasilva"
		},
		"createdAt": "2021-03-09T19:11:50Z",
		"updatedAt": "2024-10-11T19:31:11Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/346116221/af3530f3-75d5-47b6-a9eb-2c32a4ed65d4",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 172,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 172819,
			"edges": [
				{
					"size": 127638,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				},
				{
					"size": 39778,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 5403,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 901,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFKFQfa9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOClNBlA",
		"description": "Ghidra is a software reverse engineering (SRE) framework",
		"homepageUrl": "https://www.nsa.gov/ghidra",
		"url": "https://github.com/NationalSecurityAgency/ghidra",
		"name": "ghidra",
		"nameWithOwner": "NationalSecurityAgency/ghidra",
		"owner": {
			"login": "NationalSecurityAgency"
		},
		"createdAt": "2019-03-01T03:27:48Z",
		"updatedAt": "2024-10-11T20:43:23Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/c7902f0bac6c627d561f50b61c1c48e0f8c7a5cd7619278d1ffefb9035319d0e/NationalSecurityAgency/ghidra",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 661
		},
		"releases": {
			"totalCount": 39,
			"nodes": [
				{
					"createdAt": "2024-09-26T17:37:37Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 37018
							}
						]
					}
				},
				{
					"createdAt": "2024-07-09T15:05:37Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 171736
							}
						]
					}
				},
				{
					"createdAt": "2024-06-14T14:18:58Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 55191
							}
						]
					}
				},
				{
					"createdAt": "2024-06-07T18:10:51Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 16808
							}
						]
					}
				},
				{
					"createdAt": "2024-04-10T18:33:00Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 107494
							}
						]
					}
				},
				{
					"createdAt": "2024-03-26T16:40:34Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 28739
							}
						]
					}
				},
				{
					"createdAt": "2024-01-30T15:01:47Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 106833
							}
						]
					}
				},
				{
					"createdAt": "2023-12-22T14:34:08Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 72220
							}
						]
					}
				},
				{
					"createdAt": "2023-09-28T16:24:51Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 143440
							}
						]
					}
				},
				{
					"createdAt": "2023-08-29T17:38:53Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 75540
							}
						]
					}
				}
			]
		},
		"forkCount": 5820,
		"isFork": false,
		"languages": {
			"totalCount": 24,
			"totalSize": 115878505,
			"edges": [
				{
					"size": 98439357,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 8007077,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 5263481,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 51088,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOClNBlLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "<img src=\"Ghidra/Features/Base/src/main/resources/images/GHIDRA_3.png\" width=\"400\">\n\n# Ghidra Software Reverse Engineering Framework\n\nGhidra is a software reverse engineering (SRE) framework created and maintained by the \n[National Security Agency][nsa] Research Directorate. This framework includes a suite of \nfull-featured, high-end software analysis tools that enable users to analyze compiled code on a \nvariety of platforms including Windows, macOS, and Linux. Capabilities include disassembly, \nassembly, decompilation, graphing, and scripting, along with hundreds of other features. Ghidra \nsupports a wide variety of processor instruction sets and executable formats and can be run in both \nuser-interactive and automated modes. Users may also develop their own Ghidra extension components \nand/or scripts using Java or Python.\n\nIn support of NSA's Cybersecurity mission, Ghidra was built to solve scaling and teaming problems \non complex SRE efforts, and to provide a customizable and extensible SRE research platform. NSA has \napplied Ghidra SRE capabilities to a variety of problems that involve analyzing malicious code and \ngenerating deep insights for SRE analysts who seek a better understanding of potential \nvulnerabilities in networks and systems.\n\nIf you are a U.S. citizen interested in projects like this, to develop Ghidra and other \ncybersecurity tools for NSA to help protect our nation and its allies, consider applying for a \n[career with us][career].\n\n## Security Warning\n\n**WARNING:** There are known security vulnerabilities within certain versions of Ghidra.  Before \nproceeding, please read through Ghidra's [Security Advisories][security] for a better understanding \nof how you might be impacted.\n\n## Install\nTo install an official pre-built multi-platform Ghidra release:  \n* Install [JDK 21 64-bit][jdk]\n* Download a Ghidra [release file][releases]\n  - **NOTE:** The official multi-platform release file is named \n    `ghidra_<version>_<release>_<date>.zip` which can be found under the \"Assets\" drop-down.\n    Downloading either of the files named \"Source Code\" is not correct for this step.\n* Extract the Ghidra release file\n* Launch Ghidra: `./ghidraRun` (or `ghidraRun.bat` for Windows)\n\nFor additional information and troubleshooting tips about installing and running a Ghidra release, \nplease refer to `docs/InstallationGuide.html` which can be found in your extracted Ghidra release \ndirectory. \n\n## Build\n\nTo create the latest development build for your platform from this source repository:\n\n##### Install build tools:\n* [JDK 21 64-bit][jdk]\n* [Gradle 8.5+][gradle] (or provided Gradle wrapper if Internet connection is available)\n* [Python3][python3] (version 3.9 to 3.12) with bundled pip\n* make, gcc, and g++ (Linux/macOS-only)\n* [Microsoft Visual Studio][vs] 2017+ or [Microsoft C++ Build Tools][vcbuildtools] with the\n  following components installed (Windows-only):\n  - MSVC\n  - Windows SDK\n  - C++ ATL\n\n##### Download and extract the source:\n[Download from GitHub][master]\n```\nunzip ghidra-master\ncd ghidra-master\n```\n**NOTE:** Instead of downloading the compressed source, you may instead want to clone the GitHub \nrepository: `git clone https://github.com/NationalSecurityAgency/ghidra.git`\n\n##### Download additional build dependencies into source repository:\n**NOTE:** If an Internet connection is available and you did not install Gradle, the following \n`gradle` commands may be replaced with `./gradle(.bat)`.\n```\ngradle -I gradle/support/fetchDependencies.gradle\n```\n\n##### Create development build: \n```\ngradle buildGhidra\n```\nThe compressed development build will be located at `build/dist/`.\n\nFor more detailed information on building Ghidra, please read the [Developer Guide][devguide].\n\nFor issues building, please check the [Known Issues][known-issues] section for possible solutions.\n\n## Develop\n\n### User Scripts and Extensions\nGhidra installations support users writing custom scripts and extensions via the *GhidraDev* plugin \nfor Eclipse.  The plugin and its corresponding instructions can be found within a Ghidra release at\n`Extensions/Eclipse/GhidraDev/` or at [this link][ghidradev].\n\n**NOTE:** The *GhidraDev* plugin for Eclipse only supports developing against fully built\nGhidra installations which can be downloaded from the [Releases][releases] page.\n\n### Advanced Development\nTo develop the Ghidra tool itself, it is highly recommended to use Eclipse, which the Ghidra \ndevelopment process has been highly customized for.\n\n##### Install build and development tools:\n* Follow the above [build instructions](#build) so the build completes without errors\n* Install [Eclipse IDE for Java Developers][eclipse]\n\n##### Prepare the development environment:\n``` \ngradle prepdev eclipse buildNatives\n```\n\n##### Import Ghidra projects into Eclipse:\n* *File* -> *Import...*\n* *General* | *Existing Projects into Workspace*\n* Select root directory to be your downloaded or cloned ghidra source repository\n* Check *Search for nested projects*\n* Click *Finish*\n\nWhen Eclipse finishes building the projects, Ghidra can be launched and debugged with the provided\n**Ghidra** Eclipse *run configuration*.\n\nFor more detailed information on developing Ghidra, please read the [Developer Guide][devguide]. \n\n## Contribute\nIf you would like to contribute bug fixes, improvements, and new features back to Ghidra, please \ntake a look at our [Contributor Guide][contrib] to see how you can participate in this open \nsource project.\n\n\n[nsa]: https://www.nsa.gov\n[contrib]: CONTRIBUTING.md\n[devguide]: DevGuide.md\n[known-issues]: DevGuide.md#known-issues\n[career]: https://www.intelligencecareers.gov/nsa\n[releases]: https://github.com/NationalSecurityAgency/ghidra/releases\n[jdk]: https://adoptium.net/temurin/releases\n[gradle]: https://gradle.org/releases/\n[python3]: https://www.python.org/downloads/\n[vs]: https://visualstudio.microsoft.com/vs/community/\n[vcbuildtools]: https://visualstudio.microsoft.com/visual-cpp-build-tools/\n[eclipse]: https://www.eclipse.org/downloads/packages/\n[master]: https://github.com/NationalSecurityAgency/ghidra/archive/refs/heads/master.zip\n[security]: https://github.com/NationalSecurityAgency/ghidra/security/advisories\n[ghidradev]: GhidraBuild/EclipsePlugins/GhidraDev/GhidraDevPlugin/README.md\n"
		}
	},
	{
		"id": "R_kgDOFVKCyQ",
		"description": "Incredibly fast JavaScript runtime, bundler, test runner, and package manager – all in one",
		"homepageUrl": "https://bun.sh",
		"url": "https://github.com/oven-sh/bun",
		"name": "bun",
		"nameWithOwner": "oven-sh/bun",
		"owner": {
			"login": "oven-sh"
		},
		"createdAt": "2021-04-14T00:48:17Z",
		"updatedAt": "2024-10-11T20:22:03Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/e2e81b6b2360bbe5a4bfebef88c3579f77a646a14e6075145c7369d81eee863d/oven-sh/bun",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#ec915c",
			"name": "Zig"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 615
		},
		"releases": {
			"totalCount": 160,
			"nodes": [
				{
					"createdAt": "2024-10-08T09:32:37Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 9855
							},
							{
								"downloadCount": 12
							},
							{
								"downloadCount": 12
							},
							{
								"downloadCount": 342
							},
							{
								"downloadCount": 12
							},
							{
								"downloadCount": 1109
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 2149
							},
							{
								"downloadCount": 16
							},
							{
								"downloadCount": 35712
							},
							{
								"downloadCount": 20
							},
							{
								"downloadCount": 1254
							},
							{
								"downloadCount": 28
							},
							{
								"downloadCount": 5393
							},
							{
								"downloadCount": 57456
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 2628
							},
							{
								"downloadCount": 37
							}
						]
					}
				},
				{
					"createdAt": "2024-09-20T07:07:26Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 49
							},
							{
								"downloadCount": 10947
							},
							{
								"downloadCount": 71
							},
							{
								"downloadCount": 280887
							},
							{
								"downloadCount": 36
							},
							{
								"downloadCount": 168505
							},
							{
								"downloadCount": 164
							},
							{
								"downloadCount": 3309
							},
							{
								"downloadCount": 149
							},
							{
								"downloadCount": 19737
							},
							{
								"downloadCount": 53
							},
							{
								"downloadCount": 1798
							},
							{
								"downloadCount": 33349
							},
							{
								"downloadCount": 54
							},
							{
								"downloadCount": 51
							},
							{
								"downloadCount": 4144
							},
							{
								"downloadCount": 12866
							},
							{
								"downloadCount": 262
							}
						]
					}
				},
				{
					"createdAt": "2024-09-18T04:43:38Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 5290
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 185
							},
							{
								"downloadCount": 706
							},
							{
								"downloadCount": 7
							},
							{
								"downloadCount": 768
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 26436
							},
							{
								"downloadCount": 8
							},
							{
								"downloadCount": 20795
							},
							{
								"downloadCount": 63
							},
							{
								"downloadCount": 798
							},
							{
								"downloadCount": 65
							},
							{
								"downloadCount": 2314
							},
							{
								"downloadCount": 1358
							},
							{
								"downloadCount": 33
							}
						]
					}
				},
				{
					"createdAt": "2024-09-07T10:55:09Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 799
							},
							{
								"downloadCount": 16
							},
							{
								"downloadCount": 16
							},
							{
								"downloadCount": 17
							},
							{
								"downloadCount": 20047
							},
							{
								"downloadCount": 2457
							},
							{
								"downloadCount": 17
							},
							{
								"downloadCount": 5025
							},
							{
								"downloadCount": 33
							},
							{
								"downloadCount": 158397
							},
							{
								"downloadCount": 40
							},
							{
								"downloadCount": 125
							},
							{
								"downloadCount": 96069
							},
							{
								"downloadCount": 2332
							},
							{
								"downloadCount": 126
							},
							{
								"downloadCount": 11294
							},
							{
								"downloadCount": 9111
							},
							{
								"downloadCount": 130
							}
						]
					}
				},
				{
					"createdAt": "2024-08-24T06:12:01Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 995
							},
							{
								"downloadCount": 24089
							},
							{
								"downloadCount": 15
							},
							{
								"downloadCount": 25
							},
							{
								"downloadCount": 17
							},
							{
								"downloadCount": 3030
							},
							{
								"downloadCount": 18
							},
							{
								"downloadCount": 4857
							},
							{
								"downloadCount": 50
							},
							{
								"downloadCount": 203189
							},
							{
								"downloadCount": 179
							},
							{
								"downloadCount": 2740
							},
							{
								"downloadCount": 193
							},
							{
								"downloadCount": 15576
							},
							{
								"downloadCount": 113572
							},
							{
								"downloadCount": 43
							},
							{
								"downloadCount": 15149
							},
							{
								"downloadCount": 181
							}
						]
					}
				},
				{
					"createdAt": "2024-08-21T02:32:44Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 7614
							},
							{
								"downloadCount": 1035
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 12
							},
							{
								"downloadCount": 13
							},
							{
								"downloadCount": 933
							},
							{
								"downloadCount": 45542
							},
							{
								"downloadCount": 15
							},
							{
								"downloadCount": 27451
							},
							{
								"downloadCount": 116
							},
							{
								"downloadCount": 1137
							},
							{
								"downloadCount": 114
							},
							{
								"downloadCount": 3717
							},
							{
								"downloadCount": 3017
							},
							{
								"downloadCount": 46
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 488
							}
						]
					}
				},
				{
					"createdAt": "2024-08-14T09:09:30Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 2794
							},
							{
								"downloadCount": 17
							},
							{
								"downloadCount": 14
							},
							{
								"downloadCount": 17084
							},
							{
								"downloadCount": 18
							},
							{
								"downloadCount": 1792
							},
							{
								"downloadCount": 14
							},
							{
								"downloadCount": 4091
							},
							{
								"downloadCount": 20
							},
							{
								"downloadCount": 140561
							},
							{
								"downloadCount": 22
							},
							{
								"downloadCount": 55804
							},
							{
								"downloadCount": 148
							},
							{
								"downloadCount": 1649
							},
							{
								"downloadCount": 162
							},
							{
								"downloadCount": 7092
							},
							{
								"downloadCount": 4257
							},
							{
								"downloadCount": 76
							}
						]
					}
				},
				{
					"createdAt": "2024-08-13T19:42:10Z",
					"releaseAssets": {
						"totalCount": 16,
						"nodes": [
							{
								"downloadCount": 16
							},
							{
								"downloadCount": 546
							},
							{
								"downloadCount": 11
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 183
							},
							{
								"downloadCount": 142
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 6151
							},
							{
								"downloadCount": 9
							},
							{
								"downloadCount": 3849
							},
							{
								"downloadCount": 105
							},
							{
								"downloadCount": 459
							},
							{
								"downloadCount": 105
							},
							{
								"downloadCount": 1073
							},
							{
								"downloadCount": 232
							},
							{
								"downloadCount": 31
							}
						]
					}
				},
				{
					"createdAt": "2024-08-07T21:03:20Z",
					"releaseAssets": {
						"totalCount": 17,
						"nodes": [
							{
								"downloadCount": 13
							},
							{
								"downloadCount": 1629
							},
							{
								"downloadCount": 10939
							},
							{
								"downloadCount": 14
							},
							{
								"downloadCount": 723
							},
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 2126
							},
							{
								"downloadCount": 26
							},
							{
								"downloadCount": 77022
							},
							{
								"downloadCount": 40
							},
							{
								"downloadCount": 45497
							},
							{
								"downloadCount": 155
							},
							{
								"downloadCount": 1468
							},
							{
								"downloadCount": 160
							},
							{
								"downloadCount": 6373
							},
							{
								"downloadCount": 3361
							},
							{
								"downloadCount": 66
							}
						]
					}
				},
				{
					"createdAt": "2024-07-27T03:00:02Z",
					"releaseAssets": {
						"totalCount": 18,
						"nodes": [
							{
								"downloadCount": 3990
							},
							{
								"downloadCount": 28
							},
							{
								"downloadCount": 38
							},
							{
								"downloadCount": 152535
							},
							{
								"downloadCount": 31
							},
							{
								"downloadCount": 92555
							},
							{
								"downloadCount": 194
							},
							{
								"downloadCount": 2080
							},
							{
								"downloadCount": 190
							},
							{
								"downloadCount": 11029
							},
							{
								"downloadCount": 14
							},
							{
								"downloadCount": 17986
							},
							{
								"downloadCount": 800
							},
							{
								"downloadCount": 16
							},
							{
								"downloadCount": 14
							},
							{
								"downloadCount": 2564
							},
							{
								"downloadCount": 7760
							},
							{
								"downloadCount": 139
							}
						]
					}
				}
			]
		},
		"forkCount": 2722,
		"isFork": false,
		"languages": {
			"totalCount": 16,
			"totalSize": 29792453,
			"edges": [
				{
					"size": 19200040,
					"node": {
						"color": "#ec915c",
						"name": "Zig"
					}
				},
				{
					"size": 6366587,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 2662379,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 73680,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFVKCya9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOKAm3Uw",
		"description": "Collection of missing native JavaScript syntax additions",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/missing-native-js-syntax",
		"name": "missing-native-js-syntax",
		"nameWithOwner": "SamuelScheit/missing-native-js-syntax",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-07-28T02:04:46Z",
		"updatedAt": "2023-08-02T16:26:13Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/05ba4a99fd432784a5ee003114869286411c906f6217a7dfbb738c5a265751b8/SamuelScheit/missing-native-js-syntax",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 9013,
			"edges": [
				{
					"size": 9013,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 2,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOKAm3U7FyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 4
				}
			}
		},
		"object": {
			"text": "[![npm version][npm-version-src]][npm-version-href]\n[![npm downloads][npm-downloads-src]][npm-downloads-href]\n[![Github Actions CI][github-actions-ci-src]][github-actions-ci-href]\n[![License][license-src]][license-href]\n\n<h1 align=\"center\">Missing Native\n\t<img width=\"24\" src=\"https://raw.githubusercontent.com/github/explore/80688e429a7d4ef2fca1e82350fe8e3517d3494d/topics/javascript/javascript.png\" />\n\tSyntax</h1>\n\nThis repository contains a collection of missing native JavaScript syntax additions. The syntax is implemented as a TypeScript transformer and as a Babel plugin.\n\n## Installation\n\n```sh\n\n# Using npm\nnpm install missing-native-js-syntax\n\n# Using yarn\nyarn add missing-native-js-syntax\n```\n\n### TypeScript\n\n#### Add this plugin to your `tsconfig.json` file\n\n\n```json\n{\n  \"compilerOptions\": {\n    \"plugins\": [\n      { \"transform\": \"missing-native-js-syntax\", \"transformProgram\": true },\n      { \"transform\": \"missing-native-js-syntax\" }\n    ]\n  }\n}\n```\n\nTo add syntax highlighting support in your editor, you need to use the TypeScript version of your project. If you are using VSCode, you can open the command palette (<kbd>Ctrl+Shift+P</kbd> or <kbd>F1</kbd>) and choose `TypeScript: Select TypeScript Version`. Then click `Use Workspace Version`.\n\n## Usage\n\n### if-return\n\n#### Example\n\nThe `createUser` function is responsible for the creation of a new user. It accepts a user object as input and verifies the existence of the user (or an admin) in the system. If the user (or an admin) is found, the function returns the existing record; otherwise, it adds the user to the users array and returns the newly created user.\n\n```js\nconst users = [\n\t{ name: \"John\", age: 25, type: \"admin\" },\n\t{ name: \"Jane\", age: 30, type: \"user\" },\n\t{ name: \"Jack\", age: 28, type: \"user\" },\n];\n\nfunction createUser(user) {\n\tconst exists = users.find((u) => u.name === user.name);\n\tif (exists) return exists;\n\n\tconst adminExists = users.find((u) => u.type === \"admin\");\n\tif (adminExists && user.type === \"admin\") return adminExists;\n\n\tusers.push(user);\n\n\treturn user;\n}\n```\n\nTo improve code readability, the early if-return pattern can be employed. By using this pattern, the function will return the value if it is truthy, else it will proceed with the execution.\nThe new `createUsers` function immediately returns the existing (admin) user if it is found, else it adds and returns the new user.\n\n```js\nfunction createUser(user) {\n\tif return users.find((u) => u.name === user.name);\n\tif return user.type == \"admin\" && users.find((u) => u.type === \"admin\");\n\n\tusers.push(user);\n\n\treturn user;\n}\n```\n\n### Defer\n\n#### Example\n\n<!-- database/file closing -->\n\n```js\nfunction getUserRoles(name) {\n\tconst handle = openDatabase();\n\tvar user, roles;\n\t// a database join would be better, but this is just an example to demonstrate why defer is needed\n\n\ttry {\n\t\tuser = db.execute(\"SELECT * FROM users WHERE name = ?\", user.name);\n\t} catch (e) {\n\t\thandle.close();\n\t\tthrow new Error(\"Database connection error\");\n\t}\n\n\tif (!user) {\n\t\thandle.close();\n\n\t\tthrow new Error(\"User not found\");\n\t}\n\n\ttry {\n\t\troles = db.execute(\"SELECT * FROM roles WHERE user_id = ?\", user.id);\n\t} catch (e) {\n\t\thandle.close();\n\t\tthrow new Error(\"Database connection error\");\n\t}\n\n\thandle.close();\n\n\treturn roles;\n}\n```\n\nThe `getUserRoles` function is responsible for retrieving the roles of a user. It accepts a user name as input and gets the user from the database. If the user is found, it gets the roles of the user from the database and returns them. If the user is not found it throws a User not found error and if there is a database connection error it throws a Database connection error.\n\n```js\nfunction getUserRoles(path) {\n\tconst handle = openDatabase(path);\n\n\tdefer {\n\t\thandle.close();\n\t}\n\n\ttry {\n\t\tconst user = db.executeSql(\"SELECT * FROM users WHERE id = ?\", user.id);\n\t} catch (e) {\n\t\tthrow new Error(\"Database connection error\");\n\t}\n\n\tif (!user) throw new Error(\"User not found\");\n\n\ttry {\n\t\treturn db.executeSql(\"SELECT * FROM roles WHERE user_id = ?\", user.id);\n\t} catch (e) {\n\t\tthrow new Error(\"Database connection error\");\n\t}\n}\n```\n\nTo enhance code readability and ensure proper resource management, the defer pattern can be implemented. This approach allows the createUsers function to automatically close the database connection when it returns, regardless of whether it completes successfully or throws an error. By using the defer pattern, you can defer (delay) the execution of a statement until the surrounding function returns.\n\n### Match\n\n_TODO_\n\n<!-- Badges -->\n\n[npm-version-src]: https://img.shields.io/npm/v/missing-native-js-syntax/latest.svg\n[npm-version-href]: https://npmjs.com/package/missing-native-js-syntax\n[npm-downloads-src]: https://img.shields.io/npm/dt/missing-native-js-syntax.svg\n[npm-downloads-href]: https://npmjs.com/package/missing-native-js-syntax\n[github-actions-ci-src]: https://github.com/intevel/missing-native-js-syntax/actions/workflows/ci.yml/badge.svg\n[github-actions-ci-href]: https://github.com/intevel/missing-native-js-syntax/actions?query=workflow%3Aci\n[license-src]: https://img.shields.io/npm/l/missing-native-js-syntax.svg\n[license-href]: https://npmjs.com/package/missing-native-js-syntax"
		},
		"commits": [
			{
				"committedDate": "2023-10-19T13:56:00Z",
				"message": "Merge pull request #2 from SamuelScheit/dependabot/npm_and_yarn/babel/traverse-7.23.2\n\nchore(deps): bump @babel/traverse from 7.22.8 to 7.23.2",
				"messageBody": "…/traverse-7.23.2\n\nchore(deps): bump @babel/traverse from 7.22.8 to 7.23.2"
			},
			{
				"committedDate": "2023-07-28T11:16:11Z",
				"message": "Merge pull request #1 from Intevel/master\n\nfeat: some chore updates",
				"messageBody": "feat: some chore updates"
			},
			{
				"committedDate": "2023-07-28T02:07:22Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-28T02:04:42Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOKaJQ9g",
		"description": "What is it about personal websites that drives web developers to constantly reinvent them?",
		"homepageUrl": "",
		"url": "https://github.com/s-thom/website-2023",
		"name": "website-2023",
		"nameWithOwner": "s-thom/website-2023",
		"owner": {
			"login": "s-thom"
		},
		"createdAt": "2023-09-30T05:32:39Z",
		"updatedAt": "2024-10-04T23:06:23Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/419179816735de0485bc2650f6722b0626d76d1308dfec1cf17424f13e6d8461/s-thom/website-2023",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 369838,
			"edges": [
				{
					"size": 188649,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 148424,
					"node": {
						"color": "#ff5a03",
						"name": "Astro"
					}
				},
				{
					"size": 29867,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOKaJQ9q9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOJMJHDA",
		"description": "⚛️ 🏎 WebAssembly for React Native powered by JSI.",
		"homepageUrl": "https://twitter.com/cawfree",
		"url": "https://github.com/cawfree/react-native-webassembly",
		"name": "react-native-webassembly",
		"nameWithOwner": "cawfree/react-native-webassembly",
		"owner": {
			"login": "cawfree"
		},
		"createdAt": "2023-03-20T23:34:48Z",
		"updatedAt": "2024-10-11T14:21:21Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/616711948/d1ff833b-802b-4cf6-b9c3-7075845c1166",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#555555",
			"name": "C"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 6,
			"nodes": [
				{
					"createdAt": "2023-04-22T22:23:36Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-04-17T19:43:44Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-04-12T22:01:49Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-03-29T00:54:06Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-03-27T01:33:44Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				},
				{
					"createdAt": "2023-03-26T02:41:12Z",
					"releaseAssets": {
						"totalCount": 0,
						"nodes": []
					}
				}
			]
		},
		"forkCount": 6,
		"isFork": false,
		"languages": {
			"totalCount": 11,
			"totalSize": 531326,
			"edges": [
				{
					"size": 457352,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				},
				{
					"size": 33292,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 18243,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 315,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOJMJHDK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOM-UnJg",
		"description": "Write ultra fast React Native modules in Rust",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/jsi-rs",
		"name": "jsi-rs",
		"nameWithOwner": "SamuelScheit/jsi-rs",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-10-10T12:38:21Z",
		"updatedAt": "2024-10-10T12:38:21Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/3ec72e47aa8071760d5966cb4c9945748d246bfccc1a6c9d564717a77b56da07/SamuelScheit/jsi-rs",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#dea584",
			"name": "Rust"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 8,
			"totalSize": 195601,
			"edges": [
				{
					"size": 156571,
					"node": {
						"color": "#dea584",
						"name": "Rust"
					}
				},
				{
					"size": 20033,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 10048,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOM-UnJq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOMwacVQ",
		"description": "Headless TypeScript ORM with a head. Runs on Node, Bun and Deno. Lives on the Edge and yes, it's a JavaScript ORM too 😅",
		"homepageUrl": "https://orm.drizzle.team",
		"url": "https://github.com/SamuelScheit/drizzle-orm",
		"name": "drizzle-orm",
		"nameWithOwner": "SamuelScheit/drizzle-orm",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-09-12T00:03:08Z",
		"updatedAt": "2024-09-13T03:40:17Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/560766fbe8ca01dd5e13e64e0ddd2d6486f99d1a83ba673515fe7fb10b5012c5/SamuelScheit/drizzle-orm",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 4260132,
			"edges": [
				{
					"size": 4240607,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 19525,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOMwacVa9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2024-09-12T00:02:56Z",
				"message": "feat: add .replaceInto sqlite insert",
				"messageBody": ""
			}
		],
		"commitSummary": "**Implementation Summary**\n\n* Features:\n\t+ Added `.replaceInto` SQLite insert functionality\n* Library Updates:\n\t+ Name: Updated library name\n\t+ Description: Updated library description\n* Metadata Updates:\n\t+ Private status\n\t+ Fork status\n\t+ Language\n\t+ Stars\n\t+ Downloads\n\t+ Commits"
	},
	{
		"id": "R_kgDOMhZWGA",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/zomm138/whatsapp-api",
		"name": "whatsapp-api",
		"nameWithOwner": "zomm138/whatsapp-api",
		"owner": {
			"login": "zomm138"
		},
		"createdAt": "2024-08-09T12:59:53Z",
		"updatedAt": "2024-09-10T04:07:02Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/152302259?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 1,
			"totalSize": 50704,
			"edges": [
				{
					"size": 50704,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOMhZWGLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 20
				}
			}
		},
		"object": {
			"text": "# code-with-quarkus\n\nThis project uses Quarkus, the Supersonic Subatomic Java Framework.\n\nIf you want to learn more about Quarkus, please visit its website: https://quarkus.io/ .\n\n## Running the application in dev mode\n\nYou can run your application in dev mode that enables live coding using:\n```shell script\n./mvnw compile quarkus:dev\n```\n\n> **_NOTE:_**  Quarkus now ships with a Dev UI, which is available in dev mode only at http://localhost:8080/q/dev/.\n\n## Packaging and running the application\n\nThe application can be packaged using:\n```shell script\n./mvnw package\n```\nIt produces the `quarkus-run.jar` file in the `target/quarkus-app/` directory.\nBe aware that it’s not an _über-jar_ as the dependencies are copied into the `target/quarkus-app/lib/` directory.\n\nThe application is now runnable using `java -jar target/quarkus-app/quarkus-run.jar`.\n\nIf you want to build an _über-jar_, execute the following command:\n```shell script\n./mvnw package -Dquarkus.package.protocol=uber-jar\n```\n\nThe application, packaged as an _über-jar_, is now runnable using `java -jar target/*-runner.jar`.\n\n## Creating a native executable\n\nYou can create a native executable using: \n```shell script\n./mvnw package -Dnative\n```\n\nOr, if you don't have GraalVM installed, you can run the native executable build in a container using: \n```shell script\n./mvnw package -Dnative -Dquarkus.native.container-build=true\n```\n\nYou can then execute your native executable with: `./target/code-with-quarkus-1.0.0-SNAPSHOT-runner`\n\nIf you want to learn more about building native executables, please consult https://quarkus.io/guides/maven-tooling.\n\n## Provided Code\n\n### RESTEasy Reactive\n\nEasily start your Reactive RESTful Web Services\n\n[Related guide section...](https://quarkus.io/guides/getting-started-reactive#reactive-jax-rs-resources)\n"
		},
		"commits": [
			{
				"committedDate": "2024-04-27T14:14:36Z",
				"message": "fix: cobalt version",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:14:17Z",
				"message": "fix: ProxyAuthenticator",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:14:10Z",
				"message": "fix: CompanionDevice android",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-26T17:49:46Z",
				"message": "fix: authentication keys in wrong order",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:26:45Z",
				"message": "feat: add response",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T22:55:56Z",
				"message": "fix: add proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T20:47:58Z",
				"message": "fix: proxy auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T16:02:28Z",
				"message": "fix: use our proxy on retry",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T13:35:51Z",
				"message": "fix: proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T02:58:16Z",
				"message": "feat: add proxy timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T01:33:31Z",
				"message": "feat: apns error handler + remove client log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T21:50:43Z",
				"message": "fix: retry recursion",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T16:08:06Z",
				"message": "feat: response success status",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T01:19:27Z",
				"message": "feat: concurrent apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:07:46Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:06:43Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:31:09Z",
				"message": "feat: add logging with redis support",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:30:41Z",
				"message": "feat: add whatsapp response to result",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:40:03Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:38:32Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			}
		],
		"commitSummary": "**Implemented Features and Fixes**\n\n1. **Features**\n\t* Added response\n\t* Added proxy timeout\n\t* Added APNS error handler\n\t* Added response success status\n\t* Added concurrent APNS\n\t* Added proxy URL parameter\n\t* Added logging with redis support\n\t* Added WhatsApp response to result\n\t* Added use of proxy country based on phone number\n\n2. **Fixes**\n\t* Cobalt version fix\n\t* Proxy Authenticator fix\n\t* CompanionDevice Android fix\n\t* Authentication keys order fix\n\t* Added proxy fix\n\t* Proxy auth fix\n\t* Use of our proxy on retry fix\n\t* Proxy fix\n\t* Retry recursion fix"
	},
	{
		"id": "R_kgDOMdlkVA",
		"description": "Security dashboard for securing and monitoring processes, network connections, ssh sessions, logins and many more",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/heimdall",
		"name": "heimdall",
		"nameWithOwner": "SamuelScheit/heimdall",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-07-31T16:08:19Z",
		"updatedAt": "2024-07-31T16:16:17Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/34555296?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 6,
			"totalSize": 124585,
			"edges": [
				{
					"size": 70075,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				},
				{
					"size": 43148,
					"node": {
						"color": "#41b883",
						"name": "Vue"
					}
				},
				{
					"size": 9792,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOMdlkVLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 10
				}
			}
		},
		"object": {
			"text": "# heimdall\nSecurity dashboard for securing and monitoring processes, network connections, ssh sessions, logins and many more\n"
		},
		"commits": [
			{
				"committedDate": "2024-07-31T16:16:14Z",
				"message": "Update build.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-31T16:14:18Z",
				"message": "Update build.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2024-07-31T16:10:52Z",
				"message": "Create build.yml",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-25T18:29:14Z",
				"message": "web: fix preview not updating",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-25T18:18:37Z",
				"message": "web: fix aggregators percentage missing",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-25T18:14:57Z",
				"message": "web: update chart.js to 4.4.2",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-25T18:14:38Z",
				"message": "web: aggregators expanded overview",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-25T18:14:20Z",
				"message": "web: generalize chart component",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-25T18:05:55Z",
				"message": "parent: add cors",
				"messageBody": ""
			},
			{
				"committedDate": "2024-03-25T18:05:30Z",
				"message": "parent: add system query parameter to aggregators route",
				"messageBody": ""
			}
		],
		"commitSummary": "**build.yml update**\n\nname: Create build.yml\n\n**Category List Summary**\n\n* **Build System**\n  + Created build.yml\n  + Updated build.yml\n* **Web Updates**\n  + Fixed preview not updating\n  + Fixed aggregators percentage missing\n  + Updated chart.js to 4.4.2\n  + Added aggregators expanded overview\n  + Generalized chart component\n* **Parent Updates**\n  + Added CORS\n  + Added system query parameter to aggregators route"
	},
	{
		"id": "R_kgDOMS3E_A",
		"description": ".",
		"homepageUrl": null,
		"url": "https://github.com/Darker935/CobaltPrivateF",
		"name": "CobaltPrivateF",
		"nameWithOwner": "Darker935/CobaltPrivateF",
		"owner": {
			"login": "Darker935"
		},
		"createdAt": "2024-07-06T18:09:46Z",
		"updatedAt": "2024-07-14T19:42:48Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/70950705?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 1950077,
			"edges": [
				{
					"size": 1902774,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 47303,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOMS3E_LFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 9
				}
			}
		},
		"object": {
			"text": "# Cobalt | Private Repo\n\nCurrent version: 0.0.5\nExamples: src/test/java/it/auties/whatsapp/example\nDo not modify the code of the repository, build your own code on top of it, or it will be very hard to merge updates every time"
		},
		"commits": [
			{
				"committedDate": "2024-04-26T18:21:28Z",
				"message": "feat: add cert to RegistrationResponse",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-26T17:48:37Z",
				"message": "fix: apns timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T21:39:03Z",
				"message": "feat: add client_log for business registration",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T21:13:24Z",
				"message": "Merge remote-tracking branch 'origin/master'",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T21:13:16Z",
				"message": "fix: request code as business",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T17:35:33Z",
				"message": "fix: register",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T15:04:02Z",
				"message": "feat: add log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:27:21Z",
				"message": "feat: add response",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T22:57:17Z",
				"message": "fix: add log",
				"messageBody": ""
			}
		],
		"commitSummary": "**Feature Implementations:**\n\n1. Added cert to RegistrationResponse\n2. Added client_log for business registration\n3. Added log feature\n4. Added response feature\n\n**Bug Fixes:**\n\n1. Fixed APNS timeout\n2. Fixed request code as business\n3. Fixed registration\n4. Added log for fixed issues"
	},
	{
		"id": "R_kgDOMMbfmQ",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/MasksMan/whatsapp-api",
		"name": "whatsapp-api",
		"nameWithOwner": "MasksMan/whatsapp-api",
		"owner": {
			"login": "MasksMan"
		},
		"createdAt": "2024-06-21T16:18:23Z",
		"updatedAt": "2024-08-25T07:57:48Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/128242078?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 1,
			"totalSize": 50771,
			"edges": [
				{
					"size": 50771,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOMMbfmbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 20
				}
			}
		},
		"object": {
			"text": "# code-with-quarkus\n\nThis project uses Quarkus, the Supersonic Subatomic Java Framework.\n\nIf you want to learn more about Quarkus, please visit its website: https://quarkus.io/ .\n\n## Running the application in dev mode\n\nYou can run your application in dev mode that enables live coding using:\n```shell script\n./mvnw compile quarkus:dev\n```\n\n> **_NOTE:_**  Quarkus now ships with a Dev UI, which is available in dev mode only at http://localhost:8080/q/dev/.\n\n## Packaging and running the application\n\nThe application can be packaged using:\n```shell script\n./mvnw package\n```\nIt produces the `quarkus-run.jar` file in the `target/quarkus-app/` directory.\nBe aware that it’s not an _über-jar_ as the dependencies are copied into the `target/quarkus-app/lib/` directory.\n\nThe application is now runnable using `java -jar target/quarkus-app/quarkus-run.jar`.\n\nIf you want to build an _über-jar_, execute the following command:\n```shell script\n./mvnw package -Dquarkus.package.protocol=uber-jar\n```\n\nThe application, packaged as an _über-jar_, is now runnable using `java -jar target/*-runner.jar`.\n\n## Creating a native executable\n\nYou can create a native executable using: \n```shell script\n./mvnw package -Dnative\n```\n\nOr, if you don't have GraalVM installed, you can run the native executable build in a container using: \n```shell script\n./mvnw package -Dnative -Dquarkus.native.container-build=true\n```\n\nYou can then execute your native executable with: `./target/code-with-quarkus-1.0.0-SNAPSHOT-runner`\n\nIf you want to learn more about building native executables, please consult https://quarkus.io/guides/maven-tooling.\n\n## Provided Code\n\n### RESTEasy Reactive\n\nEasily start your Reactive RESTful Web Services\n\n[Related guide section...](https://quarkus.io/guides/getting-started-reactive#reactive-jax-rs-resources)\n"
		},
		"commits": [
			{
				"committedDate": "2024-04-27T14:14:36Z",
				"message": "fix: cobalt version",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:14:17Z",
				"message": "fix: ProxyAuthenticator",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-27T14:14:10Z",
				"message": "fix: CompanionDevice android",
				"messageBody": ""
			},
			{
				"committedDate": "2024-04-26T17:49:46Z",
				"message": "fix: authentication keys in wrong order",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:26:45Z",
				"message": "feat: add response",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T22:55:56Z",
				"message": "fix: add proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T20:47:58Z",
				"message": "fix: proxy auth",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T16:02:28Z",
				"message": "fix: use our proxy on retry",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T13:35:51Z",
				"message": "fix: proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T02:58:16Z",
				"message": "feat: add proxy timeout",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-04T01:33:31Z",
				"message": "feat: apns error handler + remove client log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T21:50:43Z",
				"message": "fix: retry recursion",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T16:08:06Z",
				"message": "feat: response success status",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-30T01:19:27Z",
				"message": "feat: concurrent apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:07:46Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:06:43Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:31:09Z",
				"message": "feat: add logging with redis support",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:30:41Z",
				"message": "feat: add whatsapp response to result",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:40:03Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:38:32Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			}
		],
		"commitSummary": "* **Fix:**\n  - Cobalt version\n  - Proxy authenticator\n  - Companion device android\n  - Authentication keys order\n  - Add proxy\n  - Proxy authentication\n  - Use our proxy on retry\n  - Retry recursion\n\n* **Features:**\n  - Add response\n  - Add proxy timeout\n  - APNS error handler and client log removal\n  - Response success status\n  - Concurrent APNS\n  - Add proxy URL parameter\n  - Add logging with redis support\n  - Add whatsapp response to result\n  - Use proxy country based on phone number"
	},
	{
		"id": "R_kgDOL1EimQ",
		"description": "The documentation for SurrealDB, powered by Docusaurus",
		"homepageUrl": "https://surrealdb.com/docs/",
		"url": "https://github.com/SamuelScheit/docs.surrealdb.com",
		"name": "docs.surrealdb.com",
		"nameWithOwner": "SamuelScheit/docs.surrealdb.com",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-04-30T01:27:46Z",
		"updatedAt": "2024-04-30T01:27:46Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/2cdf1b5e0293e2a8a78bec1f300cb372a5227d5691f89a1ffb86fad778f082d4/SamuelScheit/docs.surrealdb.com",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#fcb32c",
			"name": "MDX"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 6,
			"totalSize": 1362445,
			"edges": [
				{
					"size": 1180305,
					"node": {
						"color": "#fcb32c",
						"name": "MDX"
					}
				},
				{
					"size": 93323,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 46944,
					"node": {
						"color": "#c6538c",
						"name": "SCSS"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOL1Eima9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOL0iA_A",
		"description": "SurrealDB driver for JavaScript",
		"homepageUrl": "https://surrealdb.com",
		"url": "https://github.com/SamuelScheit/surrealdb.js",
		"name": "surrealdb.js",
		"nameWithOwner": "SamuelScheit/surrealdb.js",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-04-28T22:44:44Z",
		"updatedAt": "2024-04-28T22:44:45Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/df6d1b368a00970d47736f2131dc1335a547ac20faca10597582ecc0616c0371/SamuelScheit/surrealdb.js",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 1,
			"totalSize": 63622,
			"edges": [
				{
					"size": 63622,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOL0iA_K9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLxIvhQ",
		"description": "uYouEnhanced is an expanded version of uYou+ (made by @qnblackcat) with additional features and mainly made for non jailbroken users!",
		"homepageUrl": "https://github.com/arichornlover/YouTubeRebornPlus/",
		"url": "https://github.com/SamuelScheit/uYouEnhanced",
		"name": "uYouEnhanced",
		"nameWithOwner": "SamuelScheit/uYouEnhanced",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-04-21T11:24:45Z",
		"updatedAt": "2024-04-22T16:50:55Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/f8c5b9716b4140c21d29110e8aefe2555645f2a51aa13541467868cba622f3b4/SamuelScheit/uYouEnhanced",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": null,
			"name": "Logos"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 2,
			"nodes": [
				{
					"createdAt": "2024-04-22T17:00:36Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 0
							}
						]
					}
				},
				{
					"createdAt": "2024-04-21T11:55:50Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 1
							}
						]
					}
				}
			]
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 4,
			"totalSize": 227567,
			"edges": [
				{
					"size": 192752,
					"node": {
						"color": null,
						"name": "Logos"
					}
				},
				{
					"size": 29388,
					"node": {
						"color": "#438eff",
						"name": "Objective-C"
					}
				},
				{
					"size": 4223,
					"node": {
						"color": "#427819",
						"name": "Makefile"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLxIvha9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLww4qg",
		"description": "Discord User API Documentation",
		"homepageUrl": "https://docs.discord.sex",
		"url": "https://github.com/SamuelScheit/discord-userdoccers",
		"name": "discord-userdoccers",
		"nameWithOwner": "SamuelScheit/discord-userdoccers",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-04-20T08:53:13Z",
		"updatedAt": "2024-04-20T08:53:13Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/814383808d936401cd3be4073a78f3355eaa24b8cfb9e16b1e049cf922244aea/SamuelScheit/discord-userdoccers",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#fcb32c",
			"name": "MDX"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 4,
			"totalSize": 1563000,
			"edges": [
				{
					"size": 1431869,
					"node": {
						"color": "#fcb32c",
						"name": "MDX"
					}
				},
				{
					"size": 121411,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 7207,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "push-notification-payloads",
			"id": "REF_kwDOLww4qtoAJXJlZnMvaGVhZHMvcHVzaC1ub3RpZmljYXRpb24tcGF5bG9hZHM",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": {
			"text": "# Discord Unofficial User API Documentation\n\nThis repo is an attempt at documenting the unsupported user side of the Discord API, used by the [official client](https://discord.com/app) and [developer portal](https://discord.com/developers/applications), amongst others. \n\nThis means this documentation is focused on the API as it is used by non-bot users, namely with user and bearer authentication tokens. **Most bot-only endpoints that are not usable with user/bearer tokens are generally out of scope and will not be documented here.**\n\n> [!IMPORTANT]\n> The success of this project depends on the community's contributions. If you have any knowledge of the Discord API, please consider contributing to this project. See [CONTRIBUTING.md](/CONTRIBUTING.md) for more information.\n\n> [!NOTE]\n> This documentation is not affiliated with or endorsed by Discord in any way. It is a community effort to document the API as it is used by regular user accounts, and is not an official source of information.\n\n**This is a very early work-in-progress. [Contributions](/CONTRIBUTING.md) are welcome!**\n\n## License\nThis repository is a fork of the [Discord API Documentation hackweek rewrite](https://github.com/IanMitchell/hackweek-discord-api-docs), which incorporates elements from the [Discord Official API Documentation](https://github.com/discord/discord-api-docs). The repository  is licensed under the [Creative Commons Attribution-ShareAlike 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/) (see [LICENSE](LICENSE)).\n"
		},
		"commits": [
			{
				"committedDate": "2024-04-20T08:53:06Z",
				"message": "feat: push notifications add example payload",
				"messageBody": ""
			}
		],
		"commitSummary": "Categories of Implemented Features/Information: \n\n1. Feat (New Feature)\n2. Project Information \n   - Name\n   - Description\n   - Private Status\n   - Fork Status\n   - Language \n   - Stars\n   - Downloads\n   - Commits"
	},
	{
		"id": "R_kgDOLiarXQ",
		"description": "VSCode extension that turns your editor into a fully fledged IDE for React Native and Expo.",
		"homepageUrl": "https://ide.swmansion.com",
		"url": "https://github.com/software-mansion/radon-ide",
		"name": "radon-ide",
		"nameWithOwner": "software-mansion/radon-ide",
		"owner": {
			"login": "software-mansion"
		},
		"createdAt": "2024-03-19T09:28:05Z",
		"updatedAt": "2024-10-11T16:31:25Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/4d477f46ace5a030b3daad5613164228f53e1522ddf96ede7e185ef731ada248/software-mansion/radon-ide",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 17,
			"nodes": [
				{
					"createdAt": "2024-10-11T09:18:58Z",
					"releaseAssets": {
						"totalCount": 3,
						"nodes": [
							{
								"downloadCount": 10
							},
							{
								"downloadCount": 2
							},
							{
								"downloadCount": 1
							}
						]
					}
				},
				{
					"createdAt": "2024-09-25T12:41:30Z",
					"releaseAssets": {
						"totalCount": 3,
						"nodes": [
							{
								"downloadCount": 6
							},
							{
								"downloadCount": 75
							},
							{
								"downloadCount": 2
							}
						]
					}
				},
				{
					"createdAt": "2024-09-10T12:56:07Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 18
							},
							{
								"downloadCount": 86
							}
						]
					}
				},
				{
					"createdAt": "2024-08-21T14:58:48Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 71
							},
							{
								"downloadCount": 5
							}
						]
					}
				},
				{
					"createdAt": "2024-07-11T11:13:24Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 24
							},
							{
								"downloadCount": 128
							}
						]
					}
				},
				{
					"createdAt": "2024-06-13T12:42:59Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 178
							},
							{
								"downloadCount": 28
							}
						]
					}
				},
				{
					"createdAt": "2024-05-22T23:25:33Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 531
							},
							{
								"downloadCount": 34
							}
						]
					}
				},
				{
					"createdAt": "2024-05-08T20:58:16Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 1299
							},
							{
								"downloadCount": 38
							}
						]
					}
				},
				{
					"createdAt": "2024-05-01T20:52:38Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 451
							},
							{
								"downloadCount": 22
							}
						]
					}
				},
				{
					"createdAt": "2024-04-25T11:47:27Z",
					"releaseAssets": {
						"totalCount": 2,
						"nodes": [
							{
								"downloadCount": 17
							},
							{
								"downloadCount": 179
							}
						]
					}
				}
			]
		},
		"forkCount": 31,
		"isFork": false,
		"languages": {
			"totalCount": 12,
			"totalSize": 2893401,
			"edges": [
				{
					"size": 2060451,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 568566,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 115127,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 907,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLiarXa9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLhO2Xg",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/chrislegendly/CobaltPrivate",
		"name": "CobaltPrivate",
		"nameWithOwner": "chrislegendly/CobaltPrivate",
		"owner": {
			"login": "chrislegendly"
		},
		"createdAt": "2024-03-16T15:35:20Z",
		"updatedAt": "2024-03-16T15:35:20Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/141506286?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 1866591,
			"edges": [
				{
					"size": 1853334,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 13257,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOLhO2XrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 7
				}
			}
		},
		"object": {
			"text": "# Cobalt | Private Repo\n\nWhatsapp4j has been renamed to Cobalt to comply with an official request coming from Whatsapp.\nThe repository's history was cleared to comply with this request, but keep in mind that the project has been actively developed for over two years.\nTo be clear, this library is not affiliated with Whatsapp LLC in any way.\nThis is a personal project that I maintain in my free time\n\n### What is Cobalt\n\nCobalt is a library built to interact with Whatsapp.\nIt can be used with:\n1. Whatsapp Web (Companion)\n2. Whatsapp Mobile (Personal and Business)\n\n### Donations\n\nIf you like my work, you can become a sponsor here on GitHub or tip me through:\n- [Paypal](https://www.paypal.me/AutiesDevelopment).\n- ERC20 address: 0xA7842cDb100fb91718961153149C86e4F4030a76\n- TRC20 address: THiutwmP7GFEz28tLB3k5ivoyTnxrteKoH\n\nI can also work on sponsored features and/or projects!\n\n### Java version\n\nThis library was built for [Java 21](https://openjdk.java.net/projects/jdk/21/), the latest LTS.\n\n### Breaking changes policy\n\nUntil the library doesn't reach release 1.0, there will be major breaking changes between each release.\nThis is needed to finalize the design of the API.\nAfter this milestone, breaking changes will be present only in major releases.\n\n### Optimizing memory usage\n\nIf the machine you are hosting this library on has memory constraints, please look into how to tune a JVM.\nThe easiest thing you can do is use the -Xmx argument to specify the maximum size, in bytes, of the memory allocation pool.\nI have written this disclaimer because many new devs tend to get confused by Java's opportunistic memory allocation.\n\n### Can this library get my device banned?\n\nWhile there is no risk in using this library with your main account, keep in mind that Whatsapp has anti-spam measures for their web client.\nIf you add a participant from a brand-new number to a group, it will most likely get you banned.\nIf you compile the library yourself, don't run the CI on a brand-new number, or it will get banned for spamming too many requests(the CI has to test that all the library works).\nIn short, if you use this library without a malicious intent, you will never get banned.\n\n### How to install\n\n#### Maven\n\n - Dependency\n    ```xml\n    <dependency>\n        <groupId>com.github.auties00</groupId>\n        <artifactId>cobalt</artifactId>\n        <version>0.0.3</version>\n    </dependency>\n    ```\n   \n - Annotation processor (required for @RegisterListener)\n    ```xml\n    <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <configuration>\n            <annotationProcessorPaths>\n                <annotationProcessorPath>\n                    <groupId>com.github.auties00</groupId>\n                    <artifactId>cobalt</artifactId>\n                    <version>0.0.3</version>\n                <annotationProcessorPath>\n            <annotationProcessorPaths>\n        <configuration>\n    <plugin>\n    ```\n\n#### Gradle\n\n- Groovy DSL\n    - Dependency\n    ```groovy\n    implementation 'com.github.auties00:cobalt:0.0.3'\n    ```\n  \n    - Annotation processor (required for @RegisterListener)\n    ```groovy\n    annotationProcessor 'com.github.auties00:cobalt:0.0.3'\n    ```\n\n- Kotlin DSL\n    - Dependency\n    ```groovy\n    implementation(\"com.github.auties00:cobalt:0.0.3\")\n    ```\n  \n    - Annotation processor (required for @RegisterListener)\n    ```groovy\n    annotationProcessor(\"com.github.auties00:cobalt:0.0.3\")\n    ```\n\n### Javadocs & Documentation\n\nJavadocs for Whatsapp4j are available [here](https://www.javadoc.io/doc/com.github.auties00/whatsappweb4j/latest/whatsapp4j/index.html).\nThe documentation for this project reaches most of the publicly available APIs(i.e. public members in exported packages), but sometimes the Javadoc may be incomplete \nor some methods could be absent from the project's README. If you find any of the latter, know that even small contributions are welcomed!\n\n### How to contribute\n\nAs of today, no additional configuration or artifact building is needed to edit this project.\nI recommend using the latest version of IntelliJ, though any other IDE should work.\nIf you are not familiar with git, follow these short tutorials in order:\n\n1. [Fork this project](https://docs.github.com/en/github/getting-started-with-github/fork-a-repo)\n2. [Clone the new repo](https://docs.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository)\n3. [Create a new branch](https://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/managing-branches#creating-a-branch)\n4. Once you have implemented the new\n   feature, [create a new merge request](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request)\n\nIf you are trying to implement a feature that is present on WhatsappWeb's WebClient, for example audio or video calls,\nconsider using [CobaltAnalyzer](https://github.com/Auties00/CobaltAnalyzer), a tool I built for this exact purpose.\n\n### Disclaimer about async operations \nThis library heavily depends on async operations using the CompletableFuture construct.\nRemember to handle them as your application will terminate without doing anything if the main thread is not executing any task.\nPlease do not open redundant issues on GitHub because of this.\n\n### How to create a connection\n<details>\n  <summary>Detailed Walkthrough</summary>\n\n\nTo create a new connection, start by creating a builder with the api you need:\n- Web\n    ```java\n    Whatsapp.webBuilder()\n    ```\n- Mobile\n  ```java\n    Whatsapp.mobileBuilder()\n  ```\nIf you want to use a custom serializer, specify it:\n  ```java\n  .serializer(new CustomControllerSerializer())\n  ```  \nNow select the type of connection that you need:\n- Create a fresh connection\n  ```java\n  .newConnection(someUuid)\n  ```   \n- Retrieve a connection by id if available, otherwise create a new one\n  ```java\n  .newConnection(someUuid)\n  ```\n- Retrieve a connection by phone number if available, otherwise create a new one\n  ```java\n  .newConnection(phoneNumber)\n  ```\n- Retrieve a connection by an alias if available, otherwise create a new one\n  ```java\n  .newConnection(alias)\n  ```\n- Retrieve a connection by id if available, otherwise returns an empty Optional\n  ```java\n  .newOptionalConnection(someUuid)\n  ```\n- Retrieve the first connection that was serialized if available, otherwise create a new one\n  ```java\n  .firstConnection()\n  ```\n- Retrieve the first connection that was serialized if available, otherwise returns an empty Optional\n  ```java\n  .firstOptionalConnection()\n  ```\n- Retrieve the last connection that was serialized if available, otherwise create a new one\n  ```java\n  .lastConnection()\n  ```\n- Retrieve the last connection that was serialized if available, otherwise returns an empty Optional\n  ```java\n  .lastOptionalConnection()\n  ```\nYou can now customize the API with these options:\n- name - The device's name for Whatsapp Web, the push name for Whatsapp's Mobile\n  ```java\n  .name(\"Some Custom Name :)\")\n  ```\n- version - The version of Whatsapp to use\n  ```java\n  .version(new Version(\"x.xx.xx\"))\n  ```\n- autodetectListeners - Whether listeners annotated with `@RegisterListener` should automatically be registered\n  ```java\n  .autodetectListeners(true)\n  ```\n- textPreviewSetting - Whether a media preview should be generated for text messages containing links\n  ```java\n  .textPreviewSetting(TextPreviewSetting.ENABLED_WITH_INFERENCE)\n  ```\n- checkPatchMacs - Whether patch macs coming from app state pulls should be validated\n  ```java\n  .checkPatchMacs(checkPatchMacs)\n  ```\n- proxy - The proxy to use for the socket connection\n  ```java\n  .proxy(someProxy)\n  ```\n\nThere are also platform specific options:\n1. Web\n    - historyLength: The amount of messages to sync from the companion device\n      ```java\n      .historyLength(WebHistoryLength.THREE_MONTHS)\n      ```\n2. Mobile\n    - device: the device you want to fake:\n      ```java\n      .device(CompanionDevice.android(false)) // Standard Android\n      .device(CompanionDevice.android(true)) //Business android\n      .device(CompanionDevice.ios(false)) // Standard iOS\n      .device(CompanionDevice.ios(true)) // Business iOS\n      .device(CompanionDevice.kaiOs()) // Standard KaiOS\n       ```\n    - businessCategory: the category of your business account\n      ```java\n      .businessCategory(new BusinessCategory(id, name))\n       ```\n    - businessEmail: the email of your business account\n      ```java\n      .businessEmail(\"email@domanin.com\")\n       ```\n    - businessWebsite: the website of your business account\n      ```java\n      .businessWebsite(\"https://google.com\")\n       ```\n    - businessDescription: the description of your business account\n      ```java\n      .businessDescription(\"A nice description\")\n       ```\n    - businessLatitude: the latitude of your business account\n      ```java\n      .businessLatitude(37.386051)\n       ```\n    - businessLongitude: the longitude of your business account\n      ```java\n      .businessLongitude(-122.083855)\n       ```\n    - businessAddress: the address of your business account\n      ```java\n      .businessAddress(\"1600 Amphitheatre Pkwy, Mountain View\")\n       ```\n\n> **_IMPORTANT:_** All options are serialized: there is no need to specify them again when deserializing an existing session\n\nFinally select the registration status of your session:\n- Creates a new registered session: this means that the QR code was already scanned / the OTP was already sent to Whatsapp\n  ```java\n  .registered()\n  ```\n- Creates a new unregistered session: this means that the QR code wasn't scanned / the OTP wasn't sent to the companion's phone via SMS/Call/OTP\n\n  If you are using the Web API, you can either register via QR code:\n  ```java\n  .unregistered(QrHandler.toTerminal())\n  ```  \n  or with a pairing code(new feature):\n  ```java\n  .unregistered(yourPhoneNumberWithCountryCode, PairingCodeHandler.toTerminal())\n  ```  \n  Otherwise, if you are using the mobile API, you can decide if you want to receive an SMS, a call or an OTP:\n  ```java\n  .verificationCodeMethod(VerificationCodeMethod.SMS)\n  ```  \n  Then provide a supplier for that verification method:\n  ```java\n  .verificationCodeSupplier(() -> yourAsyncOrSyncLogic())\n  ```\n  Finally, register:\n  ```java\n  .register(yourPhoneNumberWithCountryCode)\n  ```\n\nNow you can connect to your session:\n  ```java\n  .connect()\n  ```\nto connect to Whatsapp.\nRemember to handle the result using, for example, `join` to await the connection's result.\n</details>\n\n<details>\n  <summary>Web QR Pairing Example</summary>\n\n  ```java\n  Whatsapp.webBuilder() // Use the Web api\n        .lastConnection() // Deserialize the last connection, or create a new one if it doesn't exist\n        .unregistered(QrHandler.toTerminal()) // Print the QR to the terminal\n        .addLoggedInListener(api -> System.out.printf(\"Connected: %s%n\", api.store().privacySettings())) // Print a message when connected\n        .addDisconnectedListener(reason -> System.out.printf(\"Disconnected: %s%n\", reason)) // Print a message when disconnected\n        .addNewChatMessageListener(message -> System.out.printf(\"New message: %s%n\", message.toJson())) // Print a message when a new chat message arrives\n        .connect() // Connect to Whatsapp asynchronously\n        .join(); // Await the result\n  ```\n</details>\n\n<details>\n  <summary>Web Pairing Code Example</summary>\n\n  ```java\n  System.out.println(\"Enter the phone number(include the country code prefix, but no +, spaces or parenthesis):\")\n  var scanner = new Scanner(System.in);\n  var phoneNumber = scanner.nextLong();\n  Whatsapp.webBuilder() // Use the Web api\n        .lastConnection() // Deserialize the last connection, or create a new one if it doesn't exist\n        .unregistered(phoneNumber, PairingCodeHandler.toTerminal()) // Print the pairing code to the terminal\n        .addLoggedInListener(api -> System.out.printf(\"Connected: %s%n\", api.store().privacySettings())) // Print a message when connected\n        .addDisconnectedListener(reason -> System.out.printf(\"Disconnected: %s%n\", reason)) // Print a message when disconnected\n        .addNewChatMessageListener(message -> System.out.printf(\"New message: %s%n\", message.toJson())) // Print a message when a new chat message arrives\n        .connect() // Connect to Whatsapp asynchronously\n        .join(); // Await the result\n  ```\n</details>\n\n<details>\n  <summary>Mobile Example</summary>\n\n  ```java\n  System.out.println(\"Enter the phone number(include the country code prefix, but no +, spaces or parenthesis):\")\n  var scanner = new Scanner(System.in);\n  var phoneNumber = scanner.nextLong();\n  Whatsapp.mobileBuilder() // Use the Mobile api\n        .lastConnection() // Deserialize the last connection, or create a new one if it doesn't exist\n        .device(CompanionDevice.ios(false)) // Use a non-business iOS account\n        .unregistered() // If the connection was just created, it needs to be registered\n        .verificationCodeMethod(VerificationCodeMethod.SMS) // If the connection was just created, send an SMS OTP\n        .verificationCodeSupplier(() -> { // Called when the OTP needs to be sent to Whatsapp\n            System.out.println(\"Enter OTP: \"); \n            var scanner = new Scanner(System.in);\n            return scanner.nextLine();\n        })\n        .register(phoneNumber) // Register the phone number asynchronously, if necessary\n        .join() // Await the result\n        .addLoggedInListener(api -> System.out.printf(\"Connected: %s%n\", api.store().privacySettings())) // Print a message when connected\n        .addDisconnectedListener(reason -> System.out.printf(\"Disconnected: %s%n\", reason)) // Print a message when disconnected\n        .addNewChatMessageListener(message -> System.out.printf(\"New message: %s%n\", message.toJson())) // Print a message when a new chat message arrives\n        .connect() // Connect to Whatsapp asynchronously\n        .join(); // Await the result\n  ```\n</details>\n\n### How to close a connection\n\nThere are three ways to close a connection:\n\n1. Disconnect\n   \n   ```java\n   api.disconnect();\n   ```\n   > **_IMPORTANT:_** The session remains valid for future uses\n\n2. Reconnect\n\n   ```java\n   api.reconnect();\n   ```\n   > **_IMPORTANT:_** The session remains valid for future uses\n\n3. Log out\n\n   ```java\n   api.logout();\n   ```\n   > **_IMPORTANT:_** The session doesn't remain valid for future uses\n\n### What is a listener and how to register it\n\nListeners are crucial to handle events related to Whatsapp and implement logic for your application.\nListeners can be used either as:\n\n1. Standalone concrete implementation\n   \n   If your application is complex enough, \n   it's preferable to divide your listeners' logic across multiple specialized classes.\n   To create a new concrete listener, declare a class or record that implements the Listener interface:\n\n   ```java\n   import it.auties.whatsapp.listener.Listener;\n\n   public class MyListener implements Listener {\n    @Override\n    public void onLoggedIn() {\n        System.out.println(\"Hello :)\");\n    }\n   }\n   ```\n\n   Remember to manually register this listener:\n\n   ```java\n   api.addListener(new MyListener());\n   ```\n\n   Or to register it automatically using the `@RegisterListener` annotation:\n\n   ```java\n   import it.auties.whatsapp.listener.RegisterListener;\n   import it.auties.whatsapp.listener.Listener;\n\n   @RegisterListener // Automatically registers this listener\n   public class MyListener implements Listener {\n    @Override\n    public void onLoggedIn() {\n        System.out.println(\"Hello :)\");\n    }\n   }\n   ```\n   \n   Listeners often need access to the Whatsapp instance that registered them to, for example, send messages. \n   If your listener is marked with @RegisterListener and a single argument constructor that takes a Whatsapp instance as a parameter exists,\n   the latter can be injected automatically, regardless of if your implementation uses a class or a record.\n   Records, though, are usually more elegant:\n\n   ```java\n   import it.auties.whatsapp.listener.RegisterListener;\n   import it.auties.whatsapp.api.Whatsapp;\n   import it.auties.whatsapp.listener.Listener;\n\n   @RegisterListener // Automatically registers this listener\n   public record MyListener(Whatsapp api) implements Listener { // A non-null whatsapp instance is injected\n    @Override\n    public void onLoggedIn() {\n        System.out.println(\"Hello :)\");\n    }\n   }\n   ```\n   \n   > **_IMPORTANT:_** @RegisterListener will only work if you register the annotation processor provided by Cobalt\n\n2. Functional interface\n   \n   If your application is very simple or only requires this library in small operations, \n   it's preferable to add a listener using a lambda instead of using full-fledged classes.\n   To declare a new functional listener, call the method add followed by the name of the listener that you want to implement without the on suffix:\n   ```java\n   api.addDisconnectedListener(reason -> System.out.println(\"Goodbye: \" + reason));\n   ```\n\n   All lambda listeners can access the instance of `Whatsapp` that called them: \n   ```java\n   api.addDisconnectedListener((whatsapp, reason) -> System.out.println(\"Goodbye: \" + reason));\n   ```\n\n   This is extremely useful if you want to implement a functionality for your application in a compact manner:\n   ```java\n    Whatsapp.newConnection()\n                .addLoggedInListener(() -> System.out.println(\"Connected\"))\n                .addNewMessageListener((whatsapp, info) -> whatsapp.sendMessage(info.chatJid(), \"Automatic answer\", info))\n                .connect()\n                .join();\n   ```\n\n### How to handle serialization\n\nIn the original version of WhatsappWeb, chats, contacts and messages could be queried at any from Whatsapp's servers.\nThe multi-device implementation, instead, sends all of this information progressively when the connection is initialized for the first time and doesn't allow any subsequent queries to access the latter.\nIn practice, this means that this data needs to be serialized somewhere.\nThe same is true for the mobile api.\n\nBy default, this library serializes data regarding a session at `$HOME/.whatsapp4j/[web|mobile]/<session_id>`.\nThe data is stored in gzipped .smile files to reduce disk usage. \n\nIf your application needs to serialize data in a different way, for example in a database create a custom implementation of ControllerSerializer.\nThen make sure to specify your implementation in the `Whatsapp` builder.\nThis is explained in the \"How to create a connection\" section.\n\n### How to handle session disconnects\n\nWhen the session is closed, the onDisconnect method in any listener is invoked.\nThese are the three reasons that can cause a disconnect:\n\n1. DISCONNECTED\n\n    A normal disconnection.\n    This doesn't indicate any error being thrown.\n\n2. RECONNECT\n\n    The client is being disconnected but only to reopen the connection.\n    This always happens when the QR is first scanned for example.\n\n3. LOGGED_OUT\n\n    The client was logged out by itself or by its companion.\n    By default, no error is thrown if this happens, though this behaviour can be changed easily:\n    ```java\n    import it.auties.whatsapp.api.DisconnectReason;\n    import it.auties.whatsapp.listener.Listener;\n\n    class ThrowOnLogOut implements Listener {\n        @Override\n        public void onDisconnected(DisconnectReason reason) {\n            if (reason != SocketEvent.LOGGED_OUT) {\n                return;\n            }\n\n            throw new RuntimeException(\"Hey, I was logged off :/\");\n        }\n    }\n    ```\n\n### How to query chats, contacts, messages and status\n\nAccess the store associated with a connection by calling the store method:\n```java\nvar store = api.store();\n```\n\n> **_IMPORTANT:_** When your program first starts up, these fields will be empty. For each type of data, an event is\n> fired and listenable using a WhatsappListener\n\nYou can access all the chats that are in memory:\n\n```java\nvar chats = store.chats();\n```\n\nOr the contacts:\n\n```java\nvar contacts = store.contacts();\n```\n\nOr even the status:\n\n```java\nvar status = store.status();\n```\n\nData can also be easily queried by using these methods:\n\n- Chats\n   - Query a chat by its jid\n     ```java\n     var chat = store.findChatByJid(jid);\n     ```\n  - Query a chat by its name\n    ```java\n    var chat = store.findChatByName(name);\n    ```  \n  - Query a chat by a message inside it\n    ```java\n    var chat = store.findChatByMessage(message);\n    ```   \n  - Query all chats that match a name\n    ```java\n    var chats = store.findChatsByName(name);\n    ```  \n- Contacts\n   - Query a contact by its jid\n     ```java\n     var chat = store.findContactByJid(jid);\n     ```  \n  - Query a contact by its name\n    ```java\n    var contact = store.findContactByName(name);\n    ```\n   - Query all contacts that match a name\n     ```java\n     var contacts = store.findContactsByName(name);\n     ```     \n- Media status\n  - Query status by sender\n    ```java\n    var chat = store.findStatusBySender(contact);\n    ```  \n\n### How to query other data\n\nTo access information about the companion device:\n```java\nvar companion = store.jid();\n```\nThis object is a jid like any other, but it has the device field filled to distinguish it from the main one.\nInstead, if you only need the phone number:\n```java\nvar phoneNumber = store.jid().toPhoneNumber();\n```\nAll the settings and metadata about the companion is available inside the Store class\n```java\nvar store = api.store();\n```\nExplore of the available methods!\n\n### How to query cryptographic data\n\nAccess keys store associated with a connection by calling the keys method:\n```java\nvar keys = api.keys();\n```\nThere are several methods to access and query cryptographic data, but as it's only necessary for advanced users, \nplease check the javadocs if this is what you need.\n\n### How to send messages\n\nTo send a message, start by finding the chat where the message should be sent. Here is an example:\n\n```java\nvar chat = api.store()\n        .findChatByName(\"My Awesome Friend\")\n        .orElseThrow(() -> new NoSuchElementException(\"Hey, you don't exist\"));\n``` \n\nAll types of messages supported by Whatsapp are supported by this library:\n> **_IMPORTANT:_** Buttons are not documented here because they are unstable.\n> If you are interested you can try to use them, but they are not guaranteed to work.\n> There are some examples in the tests directory.\n\n- Text\n\n    ```java\n    api.sendMessage(chat,  \"This is a text message!\");\n    ```\n\n- Complex text\n\n    ```java\n    var message = new TextMessageBuilder() // Create a new text message\n            .text(\"Check this video out: https://www.youtube.com/watch?v=dQw4w9WgXcQ\") // Set the text of the message\n            .canonicalUrl(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\") // Set the url of the message\n            .matchedText(\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\") // Set the matched text for the url in the message\n            .title(\"A nice suprise\") // Set the title of the url\n            .description(\"Check me out\") // Set the description of the url\n            .build(); // Create the message\n    api.sendMessage(chat,  message); \n    ```\n\n- Location\n\n    ```java\n    var location = new LocationMessageBuilder() // Create a new location message\n            .caption(\"Look at this!\") // Set the caption of the message, that is the text below the file\n            .latitude(38.9193) // Set the longitude of the location to share\n            .longitude(1183.1389) // Set the latitude of the location to share\n            .build(); // Create the message\n    api.sendMessage(chat, location);\n    ```\n\n- Live location\n\n    ```java\n    var location = new LiveLocationMessageBuilder() // Create a new live location message\n            .caption(\"Look at this!\") // Set the caption of the message, that is the text below the file. Not available if this message is live\n            .latitude(38.9193) // Set the longitude of the location to share\n            .longitude(1183.1389) // Set the latitude of the location to share\n            .accuracy(10) // Set the accuracy of the location in meters\n            .speed(12) // Set the speed of the device sharing the location in meter per endTimeStamp\n            .build(); // Create the message\n    api.sendMessage(chat, location);\n    ```\n  > **_IMPORTANT:_** Live location updates are not supported by Whatsapp multi-device. No ETA has been given for a fix.\n\n- Group invite\n    ```java\n    var group = api.store()\n            .findChatByName(\"Programmers\")\n            .filter(Chat::isGroup)\n            .orElseThrow(() -> new NoSuchElementException(\"Hey, you don't exist\"));\n    var inviteCode = api.queryGroupInviteCode(group).join();\n    var groupInvite = new GroupInviteMessageBuilder() // Create a new group invite message\n            .caption(\"Come join my group of fellow programmers\") // Set the caption of this message\n            .name(group.name()) // Set the name of the group\n            .groupJid(group.jid())) // Set the jid of the group\n            .inviteExpiration(ZonedDateTime.now().plusDays(3).toEpochSecond()) // Set the expiration of this invite\n            .inviteCode(inviteCode) // Set the code of the group\n            .build(); // Create the message\n    api.sendMessage(chat, groupInvite); \n    ```\n\n- Contact\n    ```java\n     var vcard = new ContactCardBuilder() // Create a new vcard\n            .name(\"A nice friend\") // Set the name of the contact\n            .phoneNumber(contact) // Set the phone number of the contact\n            .build(); // Create the vcard\n    var contactMessage = new ContactMessageBuilder()  // Create a new contact message\n            .name(\"A nice friend\") // Set the display name of the contact\n            .vcard(vcard) // Set the vcard(https://en.wikipedia.org/wiki/VCard) of the contact\n            .build(); // Create the message\n    api.sendMessage(chat, contactMessage);\n    ```\n\n- Contact array\n\n    ```java\n    var contactsMessage = new ContactsArrayMessageBuilder()  // Create a new contacts array message\n            .name(\"A nice friend\") // Set the display name of the first contact that this message contains\n            .contacts(List.of(jack,lucy,jeff)) // Set a list of contact messages that this message wraps\n            .build(); // Create the message\n    api.sendMessage(chat, contactsMessage);\n    ```\n\n- Media\n\n    > **_IMPORTANT:_**\n    > \n    > The thumbnail for videos and gifs is generated automatically only if ffmpeg is installed on the host machine.\n    > \n    > The length of videos, gifs and audios in seconds is computed automatically only if ffprobe is installed on the host machine.\n\n    To send a media, start by reading the content inside a byte array.\n    You might want to read it from a file:\n\n    ```java\n    var media = Files.readAllBytes(Path.of(\"somewhere\"));\n    ```\n\n    Or from a URL:\n\n    ```java\n    var media = new URL(url).openStream().readAllBytes();\n    ```\n   \n   All medias supported by Whatsapp are supported by this library:\n\n   - Image\n  \n     ```java\n     var image = new ImageMessageSimpleBuilder() // Create a new image message builder\n           .media(media) // Set the image of this message\n           .caption(\"A nice image\") // Set the caption of this message\n           .build(); // Create the message\n     api.sendMessage(chat,  image);\n     ```\n\n  - Audio or voice\n\n    ```java\n     var audio = new AudioMessageSimpleBuilder() // Create a new audio message builder\n           .media(urlMedia) // Set the audio of this message\n           .voiceMessage(false) // Set whether this message is a voice message\n           .build(); // Create the message\n     api.sendMessage(chat,  audio);\n    ```\n\n  -  Video\n\n     ```java\n     var video = new VideoMessageSimpleBuilder() // Create a new video message builder\n           .media(urlMedia) // Set the video of this message\n           .caption(\"A nice video\") // Set the caption of this message\n           .width(100) // Set the width of the video\n           .height(100) // Set the height of the video\n           .build(); // Create the message\n     api.sendMessage(chat,  video); \n     ```\n     \n  -  GIF(Video)\n\n     ```java\n     var gif = new GifMessageSimpleBuilder() // Create a new gif message builder\n           .media(urlMedia) // Set the gif of this message\n           .caption(\"A nice gif\") // Set the caption of this message\n           .gifAttribution(VideoMessageAttribution.TENOR) // Set the source of the gif\n           .build(); // Create the message\n     api.sendMessage(chat,  gif);\n     ```\n     > **_IMPORTANT:_** Whatsapp doesn't support conventional gifs. Instead, videos can be played as gifs if particular attributes are set. Sending a conventional gif will result in an exception if detected or in undefined behaviour.\n\n  -  Document\n\n     ```java\n     var document = new DocumentMessageSimpleBuilder() // Create a new document message builder\n           .media(urlMedia) // Set the document of this message\n           .title(\"A nice pdf\") // Set the title of the document\n           .fileName(\"pdf-test.pdf\") // Set the name of the document\n           .pageCount(1) // Set the number of pages of the document\n           .build(); // Create the message\n     api.sendMessage(chat,  document);\n     ```\n- Reaction\n\n    - Send a reaction\n\n    ```java\n    var someMessage = ...; // The message to react to\n    api.sendReaction(someMessage, Emoji.RED_HEART); // Use the Emoji class for a list of all Emojis\n    ```\n\n    - Remove a reaction\n\n    ```java\n    var someMessage = ...; // The message to react to\n    api.removeReaction(someMessage); // Use the Emoji class for a list of all Emojis\n    ```\n\n### How to wait for replies\n\nIf you want to wait for a single reply, use:\n``` java\nvar response = api.awaitReply(info).join(); \n```\n\nYou can also register a listener, but in many cases the async/await paradigm is easier to use then callback based listeners.\n\n### How to delete messages\n\n``` java\nvar result = api.delete(someMessage, everyone); // Deletes a message for yourself or everyone\n```\n\n### How to change your status\n\nTo change the status of the client:\n\n``` java\napi.changePresence(true); // online\napi.changePresence(false); // offline\n```\n\nIf you want to change the status of your companion, start by choosing the right presence:\nThese are the allowed values:\n\n- AVAILABLE\n- UNAVAILABLE\n- COMPOSING\n- RECORDING\n\nThen, execute this method:\n\n``` java\napi.changePresence(chat,  presence);\n```\n\n> **_IMPORTANT:_** The changePresence method returns a CompletableFuture: remember to handle this async construct if\n> needed\n\n### How to query the last known presence for a contact\n\nTo query the last known status of a Contact, use the following snippet:\n\n``` java\nvar lastKnownPresenceOptional = contact.lastKnownPresence();\n```\n\nIf the returned value is an empty Optional, the last status of the contact is unknown.\n\nWhatsapp starts sending updates regarding the presence of a contact only when:\n\n- A message was recently exchanged between you and said contact\n- A new message arrives from said contact\n- You send a message to said contact\n\nTo force Whatsapp to send these updates use:\n\n``` java\napi.subscribeToPresence(contact);\n```\n\nThen, after the subscribeToUserPresence's future is completed, query again the presence of that contact.\n\n### Query data about a group, or a contact\n\n##### About\n\n``` java\nvar status = api.queryAbout(contact) // A completable future\n      .join() // Wait for the future to complete\n      .flatMap(ContactAboutResponse::about) // Map the response to its status\n      .orElse(null); // If no status is available yield null\n```\n\n##### Profile picture or chat picture\n\n``` java\nvar picture = api.queryPicture(contact) // A completable future\n      .join() // Wait for the future to complete\n      .orElse(null); // If no picture is available yield null\n```\n\n##### Group's Metadata\n\n``` java\nvar metadata = api.queryGroupMetadata(group); // A completable future\n      .join(); // Wait for the future to complete\n```\n\n### Search messages\n\n``` java\nvar messages = chat.messages(); // All the messages in a chat\nvar firstMessage = chat.firstMessage(); // First message in a chat chronologically\nvar lastMessage = chat.lastMessage(); // Last message in a chat chronologically \nvar starredMessages = chat.starredMessages(); // All the starred messages in a chat\n```\n\n### Change the state of a chat\n\n##### Mute a chat\n\n``` java\nvar future = api.muteChat(chat);\n```\n\n##### Unmute a chat\n\n``` java\nvar future = api.unmuteChat(chat);\n```\n\n##### Archive a chat\n\n``` java\nvar future = api.archiveChat(chat);\n```\n\n##### Unarchive a chat\n\n``` java\nvar future = api.unarchiveChat(chat);\n```\n\n##### Change ephemeral message status in a chat\n\n``` java\nvar future = api.changeEphemeralTimer(chat,  ChatEphemeralTimer.ONE_WEEK);\n```   \n\n##### Mark a chat as read\n\n``` java\nvar future = api.markChatRead(chat);\n```   \n\n##### Mark a chat as unread\n\n``` java\nvar future = api.markChatUnread(chat);\n```   \n\n##### Pin a chat\n\n``` java\nvar future = api.pinChat(chat);\n``` \n\n##### Unpin a chat\n\n``` java\nvar future = api.unpinChat(chat);\n```\n\n##### Clear a chat\n\n``` java\nvar future = api.clearChat(chat, false);\n```\n\n##### Delete a chat\n\n``` java\nvar future = api.deleteChat(chat);\n```\n\n### Change the state of a participant of a group\n\n##### Add a contact to a group\n\n``` java\nvar future = api.addGroupParticipant(group, contact);\n```\n\n##### Remove a contact from a group\n\n``` java\nvar future = api.removeGroupParticipant(group, contact);\n```\n\n##### Promote a contact to admin in a group\n\n``` java\nvar future = api.promoteGroupParticipant(group, contact);\n```\n\n##### Demote a contact to user in a group\n\n``` java\nvar future = api.demoteGroupParticipant(group, contact);\n```\n\n### Change the metadata or settings of a group\n\n##### Change group's name/subject\n\n``` java\nvar future = api.changeGroupSubject(group, newName);\n```\n\n##### Change or remove group's description\n\n``` java\nvar future = api.changeGroupDescription(group, newDescription);\n```\n\n##### Change a setting in a group\n\n``` java\nvar future = api.changeGroupSetting(group, GroupSetting.EDIT_GROUP_INFO, GroupPolicy.ANYONE);\n```\n\n##### Change or remove the picture of a group\n\n``` java\nvar future = api.changeGroupPicture(group, img);\n```\n\n### Other group related methods\n\n##### Create a group\n\n``` java\nvar future = api.createGroup(\"A nice name :)\", friend, friend2);\n```\n\n##### Leave a group\n\n``` java\nvar future = api.leaveGroup(group);\n```\n\n##### Query a group's invite code\n\n``` java\nvar future = api.queryGroupInviteCode(group);\n```\n\n##### Revoke a group's invite code\n\n``` java\nvar future = api.revokeGroupInvite(group);\n```\n\n##### Accept a group invite\n\n``` java\nvar future = api.acceptGroupInvite(inviteCode);\n```\n\n### Companions (Mobile api only)\n\n##### Link a companion\n\n``` java\nvar future = api.linkCompanion(qrCode);\n```\n\n##### Unlink a companion\n\n``` java\nvar future = api.unlinkCompanion(companionJid);\n```\n\n##### Unlink all companions\n\n``` java\nvar future = api.unlinkCompanions();\n```\n\n### 2FA (Mobile api only)\n\n##### Enable 2FA\n\n``` java\nvar future = api.enable2fa(\"000000\", \"mail@domain.com\");\n```\n\n##### Disable 2FA\n\n``` java\nvar future = api.disable2fa();\n```\n\n### Calls (Mobile api only)\n\n##### Start a call\n\n``` java\nvar future = api.startCall(contact);\n```\n\n> **_IMPORTANT:_** Currently there is no audio/video support\n\n##### Stop or reject a call\n\n``` java\nvar future = api.stopCall(contact);\n```\n\n### Communities\n\n> **_IMPORTANT:_** Fully supported, but not documented here. Check the Javadocs.\n\n### Newsletters\n\n> **_IMPORTANT:_** Fully supported, but not documented here. Check the Javadocs.\n\nSome methods may not be listed here, all contributions are welcomed to this documentation!\nSome methods may not be supported on the mobile api, please report them, so I can fix them.\nIdeally I'd like all of them to work.\n"
		},
		"commits": [
			{
				"committedDate": "2024-02-11T21:39:03Z",
				"message": "feat: add client_log for business registration",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T21:13:24Z",
				"message": "Merge remote-tracking branch 'origin/master'",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T21:13:16Z",
				"message": "fix: request code as business",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T17:35:33Z",
				"message": "fix: register",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-11T15:04:02Z",
				"message": "feat: add log",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T23:27:21Z",
				"message": "feat: add response",
				"messageBody": ""
			},
			{
				"committedDate": "2024-02-08T22:57:17Z",
				"message": "fix: add log",
				"messageBody": ""
			}
		],
		"commitSummary": "**Categories and Implemented Features:**\n1. Feature Additions:\n   - client_log for business registration\n   - log\n   - response \n\n2. Fixes:\n   - request code as business\n   - register\n   - add log"
	},
	{
		"id": "R_kgDOLeS1fw",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/Intevel/taktische-zeichen-app",
		"name": "taktische-zeichen-app",
		"nameWithOwner": "Intevel/taktische-zeichen-app",
		"owner": {
			"login": "Intevel"
		},
		"createdAt": "2024-03-10T14:54:49Z",
		"updatedAt": "2024-07-02T08:09:09Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/59223342?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 8,
			"totalSize": 46533,
			"edges": [
				{
					"size": 35211,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 4693,
					"node": {
						"color": "#A97BFF",
						"name": "Kotlin"
					}
				},
				{
					"size": 3250,
					"node": {
						"color": "#701516",
						"name": "Ruby"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLeS1f69yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOLJx_Ag",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/chrislegendly/whatsapprestapi",
		"name": "whatsapprestapi",
		"nameWithOwner": "chrislegendly/whatsapprestapi",
		"owner": {
			"login": "chrislegendly"
		},
		"createdAt": "2024-01-26T02:00:35Z",
		"updatedAt": "2024-01-28T14:50:24Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/141506286?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 98754,
			"edges": [
				{
					"size": 98668,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 86,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOLJx_ArFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 7
				}
			}
		},
		"object": {
			"text": "# code-with-quarkus\n\nThis project uses Quarkus, the Supersonic Subatomic Java Framework.\n\nIf you want to learn more about Quarkus, please visit its website: https://quarkus.io/ .\n\n## Running the application in dev mode\n\nYou can run your application in dev mode that enables live coding using:\n```shell script\n./mvnw compile quarkus:dev\n```\n\n> **_NOTE:_**  Quarkus now ships with a Dev UI, which is available in dev mode only at http://localhost:8080/q/dev/.\n\n## Packaging and running the application\n\nThe application can be packaged using:\n```shell script\n./mvnw package\n```\nIt produces the `quarkus-run.jar` file in the `target/quarkus-app/` directory.\nBe aware that it’s not an _über-jar_ as the dependencies are copied into the `target/quarkus-app/lib/` directory.\n\nThe application is now runnable using `java -jar target/quarkus-app/quarkus-run.jar`.\n\nIf you want to build an _über-jar_, execute the following command:\n```shell script\n./mvnw package -Dquarkus.package.type=uber-jar\n```\n\nThe application, packaged as an _über-jar_, is now runnable using `java -jar target/*-runner.jar`.\n\n## Creating a native executable\n\nYou can create a native executable using: \n```shell script\n./mvnw package -Dnative\n```\n\nOr, if you don't have GraalVM installed, you can run the native executable build in a container using: \n```shell script\n./mvnw package -Dnative -Dquarkus.native.container-build=true\n```\n\nYou can then execute your native executable with: `./target/code-with-quarkus-1.0.0-SNAPSHOT-runner`\n\nIf you want to learn more about building native executables, please consult https://quarkus.io/guides/maven-tooling.\n\n## Provided Code\n\n### RESTEasy Reactive\n\nEasily start your Reactive RESTful Web Services\n\n[Related guide section...](https://quarkus.io/guides/getting-started-reactive#reactive-jax-rs-resources)\n"
		},
		"commits": [
			{
				"committedDate": "2024-01-30T01:19:27Z",
				"message": "feat: concurrent apns",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:07:46Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T21:06:43Z",
				"message": "feat: add proxy url parameter",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:31:09Z",
				"message": "feat: add logging with redis support",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T17:30:41Z",
				"message": "feat: add whatsapp response to result",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:40:03Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-29T01:38:32Z",
				"message": "feat: use proxy country based on phone number",
				"messageBody": ""
			}
		],
		"commitSummary": "* **Concurrency** \n  - Concurrent APNs \n\n* **Configuration** \n  - Add proxy URL parameter \n  - Use proxy country based on phone number \n\n* **Logging and Monitoring** \n  - Add logging with Redis support \n\n* **Features and Functionality** \n  - Add WhatsApp response to result"
	},
	{
		"id": "R_kgDOLJPQdA",
		"description": "🎯 Queue background jobs inspector ",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/bull-board",
		"name": "bull-board",
		"nameWithOwner": "SamuelScheit/bull-board",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-01-24T20:41:18Z",
		"updatedAt": "2024-01-24T20:41:57Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/aa25994ed11d99e61aff394789819074cb0a8fd0f4c1aa29a6f5f7a709859dcd/SamuelScheit/bull-board",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": true,
		"languages": {
			"totalCount": 5,
			"totalSize": 200994,
			"edges": [
				{
					"size": 166365,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 27748,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				},
				{
					"size": 6031,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOLJPQdLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": {
			"text": "# <img alt=\"@bull-board\" src=\"https://raw.githubusercontent.com/felixmosh/bull-board/master/packages/ui/src/static/images/logo.svg\" width=\"35px\" /> @bull-board\n\nBull Dashboard is a UI built on top of [Bull](https://github.com/OptimalBits/bull) or [BullMQ](https://github.com/taskforcesh/bullmq) to help you visualize your queues and their jobs.\nWith this library you get a beautiful UI for visualizing what's happening with each job in your queues, their status and some actions that will enable you to get the job done.\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/org/bull-board\">\n    <img alt=\"npm downloads\" src=\"https://img.shields.io/npm/dw/@bull-board/api\">\n  </a>\n  <a href=\"https://github.com/felixmosh/bull-board/blob/master/LICENSE\">\n    <img alt=\"licence\" src=\"https://img.shields.io/github/license/felixmosh/bull-board\">\n  </a>\n  <img alt=\"open issues\" src=\"https://img.shields.io/github/issues/felixmosh/bull-board\"/>\n<p>\n\n![Overview](https://raw.githubusercontent.com/felixmosh/bull-board/master/screenshots/overview.png)\n![UI](https://raw.githubusercontent.com/felixmosh/bull-board/master/screenshots/dashboard.png)\n\n## Packages\n\n| Name                                                                     | Version                                                           |\n|--------------------------------------------------------------------------|-------------------------------------------------------------------|\n| [@bull-board/api](https://www.npmjs.com/package/@bull-board/api)         | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/api)     |\n| [@bull-board/ui](https://www.npmjs.com/package/@bull-board/ui)           | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/ui)      |\n| [@bull-board/express](https://www.npmjs.com/package/@bull-board/express) | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/express) |\n| [@bull-board/fastify](https://www.npmjs.com/package/@bull-board/fastify) | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/fastify) |\n| [@bull-board/koa](https://www.npmjs.com/package/@bull-board/koa)         | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/koa)     |\n| [@bull-board/hapi](https://www.npmjs.com/package/@bull-board/hapi)       | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/hapi)    |\n| [@bull-board/nestjs](https://www.npmjs.com/package/@bull-board/nestjs)   | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/nestjs)  |\n| [@bull-board/hono](https://www.npmjs.com/package/@bull-board/hono)       | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/hono)    |\n| [@bull-board/h3](https://www.npmjs.com/package/@bull-board/h3)           | ![npm (scoped)](https://img.shields.io/npm/v/@bull-board/h3)      |\n\n## Notes\n\nAs this library provides only the visualization for your queues, keep in mind that:\n\n- You must have either [Bull](https://github.com/OptimalBits/bull) or [BullMQ](https://github.com/taskforcesh/bullmq) installed in your projects;\n- Aside the options to retry and clean jobs, this library is not responsible for processing the jobs, reporting progress or any other thing. This must be done in your application with your own logic;\n- If you want to understand the possibilities you have with the queues please refer to [Bull's docs](https://optimalbits.github.io/bull/) or [BullMQ's docs](https://docs.bullmq.io/);\n- This library doesn't hijack Bull's way of working.\n\nIf you want to learn more about queues ([Bull](https://github.com/OptimalBits/bull) or [BullMQ](https://github.com/taskforcesh/bullmq)) and [Redis](https://redis.io/).\n\n## Starting\n\nTo add it to your project start by installing a server framework specific adapter to your dependencies list:\n\n```sh\nyarn add @bull-board/express\n# or\nyarn add @bull-board/fastify\n# or\nyarn add @bull-board/hapi\n# or\nyarn add @bull-board/koa\n# or\nyarn add @bull-board/nestjs\n# or\nyarn add @bull-board/hono\n# or\nyarn add @bull-board/h3\n```\n\n### NestJS specific setup\n@bull-board provides a module for easy integration with NestJS, for reference on how to use the module refer to the [NestJS Module](https://github.com/felixmosh/bull-board/tree/master/packages/nestjs) package\n\n## Hello World\n\n```js\nconst express = require('express');\nconst Queue = require('bull');\nconst QueueMQ = require('bullmq');\nconst { createBullBoard } = require('@bull-board/api');\nconst { BullAdapter } = require('@bull-board/api/bullAdapter');\nconst { BullMQAdapter } = require('@bull-board/api/bullMQAdapter');\nconst { ExpressAdapter } = require('@bull-board/express');\n\nconst someQueue = new Queue('someQueueName', {\n  redis: { port: 6379, host: '127.0.0.1', password: 'foobared' },\n}); // if you have a special connection to redis.\nconst someOtherQueue = new Queue('someOtherQueueName');\nconst queueMQ = new QueueMQ('queueMQName');\n\nconst serverAdapter = new ExpressAdapter();\nserverAdapter.setBasePath('/admin/queues');\n\nconst { addQueue, removeQueue, setQueues, replaceQueues } = createBullBoard({\n  queues: [new BullAdapter(someQueue), new BullAdapter(someOtherQueue), new BullMQAdapter(queueMQ)],\n  serverAdapter: serverAdapter,\n});\n\nconst app = express();\n\napp.use('/admin/queues', serverAdapter.getRouter());\n\n// other configurations of your server\n\napp.listen(3000, () => {\n  console.log('Running on 3000...');\n  console.log('For the UI, open http://localhost:3000/admin/queues');\n  console.log('Make sure Redis is running on port 6379 by default');\n});\n```\n\nThat's it! Now you can access the `/admin/queues` route, and you will be able to monitor everything that is happening in your queues 😁\n\n\nFor more advanced usages check the `examples` folder, currently it contains:\n1. [Basic authentication example](https://github.com/felixmosh/bull-board/tree/master/examples/with-express-auth)\n2. [Multiple instance of the board](https://github.com/felixmosh/bull-board/tree/master/examples/with-multiple-instances)\n3. [With Fastify server](https://github.com/felixmosh/bull-board/tree/master/examples/with-fastify)\n4. [With Hapi.js server](https://github.com/felixmosh/bull-board/tree/master/examples/with-hapi)\n5. [With Koa.js server](https://github.com/felixmosh/bull-board/tree/master/examples/with-koa)\n6. [With Nest.js server using the built-in module](https://github.com/felixmosh/bull-board/tree/master/examples/with-nestjs-module) (Thanx to @dennissnijder)\n7. [With Nest.js server using the express adapter](https://github.com/felixmosh/bull-board/tree/master/examples/with-nestjs) (Thanx to @lodi-g)\n8. [With Hono server](https://github.com/felixmosh/bull-board/tree/master/examples/with-hono) (Thanks to @nihalgonsalves)\n8. [With H3 server using the h3 adapter](https://github.com/felixmosh/bull-board/tree/master/examples/with-h3) (Thanx to @genu)\n\n\n### Board options\n1. `uiConfig.boardTitle` (default: `Bull Dashboard`)\nThe Board and page titles\n2. `uiConfig.boardLogo` (default: `empty`) `{ path: string; width?: number | string; height?: number | string }`\nAn object that allows you to specify a different logo\n3. `uiConfig.miscLinks` (default: `empty`) `Array< { text: string; url: string }>`\nAn array of misc link that you can add to the dashboard, such as logout link.\n4. uiConfig.favIcon (default: `{ default: 'static/images/logo.svg', alternative: 'static/favicon-32x32.png', }`) `{ default: string; alternative: 'string' }`\nAn object that allows you to specify the default and alternative favicons.\n\n```js\nconst QueueMQ = require('bullmq');\nconst {createBullBoard} = require('@bull-board/api');\nconst {BullMQAdapter} = require('@bull-board/api/bullMQAdapter');\n\nconst queueMQ = new QueueMQ();\n\ncreateBullBoard({\n  queues: [new BullMQAdapter(queueMQ)],\n  serverAdapter,\n  options: {\n    uiConfig: {\n      boardTitle: 'My BOARD',\n      boardLogo: {\n        path: 'https://cdn.my-domain.com/logo.png',\n        width: '100px',\n        height: 200,\n      },\n      miscLinks: [{text: 'Logout', url: '/logout'}],\n      favIcon: {\n        default: 'static/images/logo.svg',\n        alternative: 'static/favicon-32x32.png',\n      },\n    },\n  },\n});\n```\n\n### Queue options\n1. `readOnlyMode` (default: `false`)\nMakes the UI as read only, hides all queue & job related actions\n\n```js\nconst Queue = require('bull')\nconst QueueMQ = require('bullmq')\nconst { createBullBoard } = require('@bull-board/api')\nconst { BullMQAdapter } = require('@bull-board/api/bullMQAdapter')\nconst { BullAdapter } = require('@bull-board/api/bullAdapter')\n\nconst someQueue = new Queue()\nconst queueMQ = new QueueMQ()\n\ncreateBullBoard({\n  queues: [\n    new BullAdapter(someQueue, { readOnlyMode: true }), // only this queue will be in read only mode\n    new BullMQAdapter(queueMQ, { readOnlyMode: true }),\n  ]\n})\n```\n\n2. `allowRetries` (default: `true`)\nWhen set to `false` the UI removes the job retry buttons for a queue. This option will be ignored if `readOnlyMode` is `true`.\n\n```js\nconst QueueMQ = require('bullmq')\nconst { createBullBoard } = require('@bull-board/api')\nconst { BullMQAdapter } = require('@bull-board/api/bullMQAdapter')\nconst { BullAdapter } = require('@bull-board/api/bullAdapter')\n\nconst someQueue = new Queue()\nconst queueMQ = new QueueMQ()\n\ncreateBullBoard({\n  queues: [\n    new BullAdapter(someQueue, { allowRetries: false }), // No retry buttons\n    new BullMQAdapter(queueMQ, { allowRetries: true, readOnlyMode: true }), // allowRetries will be ignored in this case in lieu of readOnlyMode\n  ]\n})\n```\n\n3. `description` (default: `empty`)\n   Queue description text.\n\n4. `prefix` (default: `empty`)\n   Job name prefix.\n5. `queueAdapter.setFormatter(field: 'data' | 'returnValue' | 'name', formatter: (fieldData) => any)`\n   You can specify a formatter for `'data' | 'returnValue' | 'name'` job's fields.\n\n```js\nconst QueueMQ = require('bullmq');\nconst fastRedact = require('fast-redact');\nconst { createBullBoard } = require('@bull-board/api');\nconst { BullMQAdapter } = require('@bull-board/api/bullMQAdapter');\n\nconst redact = fastRedact({\n  paths: ['headers.cookie', 'password', 'access_token']\n})\n\nconst queueMQ = new QueueMQ()\nconst queueAdapter = new BullMQAdapter(queueMQ);\nqueueAdapter.setFormatter('name', (job) => `#Queue1 - ${job.name}`);\nqueueAdapter.setFormatter('data', (data) => redact(data));\nqueueAdapter.setFormatter('returnValue', (returnValue) => redact(returnValue));\n\ncreateBullBoard({\n  queues: [queueAdapter]\n})\n```\n\n### Hosting router on a sub path\n\nIf you host your express service on a different path than root (/) ie. https://<server_name>/<sub_path>/, then you can add the following code to provide the configuration to the bull-board router. In this example the sub path will be `my-base-path`.\n\n```js\nconst Queue = require('bull')\nconst { createBullBoard } = require('@bull-board/api')\nconst { BullAdapter } = require('@bull-board/api/bullAdapter')\nconst { ExpressAdapter } = require('@bull-board/express')\n\nconst basePath = '/my-base-path';\n\nconst someQueue = new Queue('someQueueName')\nconst serverAdapter = new ExpressAdapter();\nserverAdapter.setBasePath(basePath)\n\ncreateBullBoard({\n  queues: [\n    new BullAdapter(someQueue),\n  ],\n  serverAdapter\n})\n\n// ... express server configuration\n\napp.use(basePath, serverAdapter.getRouter());\n```\n\nYou will then find the bull-board UI at the following address `https://<server_name>/my-base-path/queues`.\n\n## Contributing\n\nFirst, thank you for being interested in helping out, your time is always appreciated in every way. 💯\n\nRemember to read the [Code of Conduct](https://github.com/felixmosh/bull-board/blob/master/CODE_OF_CONDUCT.md) so you also help maintaining a good Open source community around this project!\n\nHere are some tips:\n\n- Check the [issues page](https://github.com/felixmosh/bull-board/issues) for already opened issues (or maybe even closed ones) that might already address your question/bug/feature request.\n- When opening a bug report provide as much information as you can, some things might be useful for helping debugging and understading the problem\n  - Node, Redis, Bull, BullMQ, bull-board versions\n  - Sample code that reproduces the problem\n  - Some of your environment details\n  - Framework you're using (Express, Koa, Hapi, etc).\n- Feature requests are welcomed! Provide some details on why it would be helpful for you and others, explain how you're using bull-board and if possible even some screenshots if you are willing to mock something!\n\n## Developing\n\nIf you want to help us to solve the issues, be it a bug, a feature or a question, you might need to fork and clone this project.\n\nTo fork a project means you're going to have your own version of it under your own GitHub profile, you do it by clicking the \"Fork\" button on the top of any project's page on GitHub.\n\nCloning a project means downloading it to your local machine, you do it in the command line:\n\n```sh\ngit clone git@github.com:YOUR_GITHUB_USERNAME/bull-board.git\n```\n\nThat will create a `bull-board` folder inside the directory you executed the command, so you need to navigate inside it:\n\n```sh\ncd bull-board\n```\n\n_This project requires that you have [yarn](https://yarnpkg.com/lang/en/) installed_\n\nAlso make sure you are running **Redis** for this project (bull-board's example connects to Redis' default port `6379`).\n\nNow, to try it out locally you can run:\n\n```sh\nyarn && yarn build && yarn start:dev\n```\n\nThe ui open automaticlly in the browser at `http://localhost:3000/ui`\n\n### Acknowledgements ❤️\n\n- [Juan](https://github.com/joaomilho) for building the first version of this library\n\n# License\n\nThis project is licensed under the [MIT License](https://github.com/felixmosh/bull-board/blob/master/LICENSE), so it means it's completely free to use and copy, but if you do fork this project with nice additions that we could have here, remember to send a PR 👍\n"
		},
		"commits": [
			{
				"committedDate": "2024-01-24T20:41:44Z",
				"message": "feat: add progress object",
				"messageBody": ""
			}
		],
		"commitSummary": "- **Features**\n  - Added progress object\n\n- **General Information**\n  - Repository: SamuelScheit/bull-board\n  - Description: Queue background jobs inspector\n  - Private: No\n  - Fork: Yes\n  - Language: TypeScript\n  - Stars: 0\n  - Downloads: 0\n  - Commits: 1"
	},
	{
		"id": "R_kgDOLGgVng",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/sg957/baileys-fix",
		"name": "baileys-fix",
		"nameWithOwner": "sg957/baileys-fix",
		"owner": {
			"login": "sg957"
		},
		"createdAt": "2024-01-18T13:33:33Z",
		"updatedAt": "2024-01-18T13:33:33Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/107548675?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": null,
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 3,
			"totalSize": 5051960,
			"edges": [
				{
					"size": 4622481,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 429076,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 403,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOLGgVnrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 24
				}
			}
		},
		"object": {
			"text": "# Baileys - Typescript/Javascript WhatsApp Web API\n\n### Important Note\n\nThis library was originally a project for **CS-2362 at Ashoka University** and is in no way affiliated with or endorsed by WhatsApp. Use at your own discretion. Do not spam people with this. We discourage any stalkerware, bulk or automated messaging usage. \n\n#### Liability and License Notice\nBaileys and its maintainers cannot be held liable for misuse of this application, as stated in the [MIT license](https://github.com/WhiskeySockets/Baileys/blob/master/LICENSE).\nThe maintainers of Baileys do not in any way condone the use of this application in practices that violate the Terms of Service of WhatsApp. The maintainers of this application call upon the personal responsibility of its users to use this application in a fair way, as it is intended to be used.\n##\n\nBaileys does not require Selenium or any other browser to be interface with WhatsApp Web, it does so directly using a **WebSocket**. \nNot running Selenium or Chromimum saves you like **half a gig** of ram :/ \nBaileys supports interacting with the multi-device & web versions of WhatsApp.\nThank you to [@pokearaujo](https://github.com/pokearaujo/multidevice) for writing his observations on the workings of WhatsApp Multi-Device. Also, thank you to [@Sigalor](https://github.com/sigalor/whatsapp-web-reveng) for writing his observations on the workings of WhatsApp Web and thanks to [@Rhymen](https://github.com/Rhymen/go-whatsapp/) for the __go__ implementation.\n \n## Please Read\n\nThe original repository had to be removed by the original author - we now continue development in this repository here.\nThis is the only official repository and is maintained by the community.\n **Join the Discord [here](https://discord.gg/WeJM5FP9GG)**\n \n## Example\n\nDo check out & run [example.ts](Example/example.ts) to see an example usage of the library.\nThe script covers most common use cases.\nTo run the example script, download or clone the repo and then type the following in a terminal:\n1. ``` cd path/to/Baileys ```\n2. ``` yarn ```\n3. ``` yarn example ```\n\n## Install\n\nUse the stable version:\n```\nyarn add @whiskeysockets/baileys\n```\n\nUse the edge version (no guarantee of stability, but latest fixes + features)\n```\nyarn add github:WhiskeySockets/Baileys\n```\n\nThen import your code using:\n``` ts \nimport makeWASocket from '@whiskeysockets/baileys'\n```\n\n## Unit Tests\n\nTODO\n\n## Connecting multi device (recommended)\n\nWhatsApp provides a multi-device API that allows Baileys to be authenticated as a second WhatsApp client by scanning a QR code with WhatsApp on your phone.\n\n``` ts\nimport makeWASocket, { DisconnectReason } from '@whiskeysockets/baileys'\nimport { Boom } from '@hapi/boom'\n\nasync function connectToWhatsApp () {\n    const sock = makeWASocket({\n        // can provide additional config here\n        printQRInTerminal: true\n    })\n    sock.ev.on('connection.update', (update) => {\n        const { connection, lastDisconnect } = update\n        if(connection === 'close') {\n            const shouldReconnect = (lastDisconnect.error as Boom)?.output?.statusCode !== DisconnectReason.loggedOut\n            console.log('connection closed due to ', lastDisconnect.error, ', reconnecting ', shouldReconnect)\n            // reconnect if not logged out\n            if(shouldReconnect) {\n                connectToWhatsApp()\n            }\n        } else if(connection === 'open') {\n            console.log('opened connection')\n        }\n    })\n    sock.ev.on('messages.upsert', m => {\n        console.log(JSON.stringify(m, undefined, 2))\n\n        console.log('replying to', m.messages[0].key.remoteJid)\n        await sock.sendMessage(m.messages[0].key.remoteJid!, { text: 'Hello there!' })\n    })\n}\n// run in main file\nconnectToWhatsApp()\n``` \n\nIf the connection is successful, you will see a QR code printed on your terminal screen, scan it with WhatsApp on your phone and you'll be logged in!\n\n**Note:** install `qrcode-terminal` using `yarn add qrcode-terminal` to auto-print the QR to the terminal.\n\n**Note:** the code to support the legacy version of WA Web (pre multi-device) has been removed in v5. Only the standard multi-device connection is now supported. This is done as WA seems to have completely dropped support for the legacy version.\n\n## Connecting native mobile api\n\nBaileys also supports the native mobile API, which allows users to authenticate as a standalone WhatsApp client using their phone number.\n\nRun the [example](Example/example.ts) file with ``--mobile`` cli flag to use the native mobile API.\n\n## Configuring the Connection\n\nYou can configure the connection by passing a `SocketConfig` object.\n\nThe entire `SocketConfig` structure is mentioned here with default values:\n``` ts\ntype SocketConfig = {\n    /** the WS url to connect to WA */\n    waWebSocketUrl: string | URL\n    /** Fails the connection if the socket times out in this interval */\n\tconnectTimeoutMs: number\n    /** Default timeout for queries, undefined for no timeout */\n    defaultQueryTimeoutMs: number | undefined\n    /** ping-pong interval for WS connection */\n    keepAliveIntervalMs: number\n    /** proxy agent */\n\tagent?: Agent\n    /** pino logger */\n\tlogger: Logger\n    /** version to connect with */\n    version: WAVersion\n    /** override browser config */\n\tbrowser: WABrowserDescription\n\t/** agent used for fetch requests -- uploading/downloading media */\n\tfetchAgent?: Agent\n    /** should the QR be printed in the terminal */\n    printQRInTerminal: boolean\n    /** should events be emitted for actions done by this socket connection */\n    emitOwnEvents: boolean\n    /** provide a cache to store media, so does not have to be re-uploaded */\n    mediaCache?: NodeCache\n    /** custom upload hosts to upload media to */\n    customUploadHosts: MediaConnInfo['hosts']\n    /** time to wait between sending new retry requests */\n    retryRequestDelayMs: number\n    /** time to wait for the generation of the next QR in ms */\n    qrTimeout?: number;\n    /** provide an auth state object to maintain the auth state */\n    auth: AuthenticationState\n    /** manage history processing with this control; by default will sync up everything */\n    shouldSyncHistoryMessage: (msg: proto.Message.IHistorySyncNotification) => boolean\n    /** transaction capability options for SignalKeyStore */\n    transactionOpts: TransactionCapabilityOptions\n    /** provide a cache to store a user's device list */\n    userDevicesCache?: NodeCache\n    /** marks the client as online whenever the socket successfully connects */\n    markOnlineOnConnect: boolean\n    /**\n     * map to store the retry counts for failed messages;\n     * used to determine whether to retry a message or not */\n    msgRetryCounterMap?: MessageRetryMap\n    /** width for link preview images */\n    linkPreviewImageThumbnailWidth: number\n    /** Should Baileys ask the phone for full history, will be received async */\n    syncFullHistory: boolean\n    /** Should baileys fire init queries automatically, default true */\n    fireInitQueries: boolean\n    /**\n     * generate a high quality link preview,\n     * entails uploading the jpegThumbnail to WA\n     * */\n    generateHighQualityLinkPreview: boolean\n\n    /** options for axios */\n    options: AxiosRequestConfig<any>\n    /**\n     * fetch a message from your store\n     * implement this so that messages failed to send (solves the \"this message can take a while\" issue) can be retried\n     * */\n    getMessage: (key: proto.IMessageKey) => Promise<proto.IMessage | undefined>\n}\n```\n\n### Emulating the Desktop app instead of the web\n\n1. Baileys, by default, emulates a chrome web session\n2. If you'd like to emulate a desktop connection (and receive more message history), add this to your Socket config:\n    ``` ts\n    const conn = makeWASocket({\n        ...otherOpts,\n        // can use Windows, Ubuntu here too\n        browser: Browsers.macOS('Desktop'),\n        syncFullHistory: true\n    })\n    ```\n\n## Saving & Restoring Sessions\n\nYou obviously don't want to keep scanning the QR code every time you want to connect. \n\nSo, you can load the credentials to log back in:\n``` ts\nimport makeWASocket, { BufferJSON, useMultiFileAuthState } from '@whiskeysockets/baileys'\nimport * as fs from 'fs'\n\n// utility function to help save the auth state in a single folder\n// this function serves as a good guide to help write auth & key states for SQL/no-SQL databases, which I would recommend in any production grade system\nconst { state, saveCreds } = await useMultiFileAuthState('auth_info_baileys')\n// will use the given state to connect\n// so if valid credentials are available -- it'll connect without QR\nconst conn = makeWASocket({ auth: state }) \n// this will be called as soon as the credentials are updated\nconn.ev.on ('creds.update', saveCreds)\n```\n\n**Note:** When a message is received/sent, due to signal sessions needing updating, the auth keys (`authState.keys`) will update. Whenever that happens, you must save the updated keys (`authState.keys.set()` is called). Not doing so will prevent your messages from reaching the recipient & cause other unexpected consequences. The `useMultiFileAuthState` function automatically takes care of that, but for any other serious implementation -- you will need to be very careful with the key state management.\n\n## Listening to Connection Updates\n\nBaileys now fires the `connection.update` event to let you know something has updated in the connection. This data has the following structure:\n``` ts\ntype ConnectionState = {\n\t/** connection is now open, connecting or closed */\n\tconnection: WAConnectionState\n\t/** the error that caused the connection to close */\n\tlastDisconnect?: {\n\t\terror: Error\n\t\tdate: Date\n\t}\n\t/** is this a new login */\n\tisNewLogin?: boolean\n\t/** the current QR code */\n\tqr?: string\n\t/** has the device received all pending notifications while it was offline */\n\treceivedPendingNotifications?: boolean \n}\n```\n\n**Note:** this also offers any updates to the QR\n\n## Handling Events\n\nBaileys uses the EventEmitter syntax for events. \nThey're all nicely typed up, so you shouldn't have any issues with an Intellisense editor like VS Code.\n\nThe events are typed as mentioned here:\n\n``` ts\n\nexport type BaileysEventMap = {\n    /** connection state has been updated -- WS closed, opened, connecting etc. */\n\t'connection.update': Partial<ConnectionState>\n    /** credentials updated -- some metadata, keys or something */\n    'creds.update': Partial<AuthenticationCreds>\n    /** history sync, everything is reverse chronologically sorted */\n    'messaging-history.set': {\n        chats: Chat[]\n        contacts: Contact[]\n        messages: WAMessage[]\n        isLatest: boolean\n    }\n    /** upsert chats */\n    'chats.upsert': Chat[]\n    /** update the given chats */\n    'chats.update': Partial<Chat>[]\n    /** delete chats with given ID */\n    'chats.delete': string[]\n    'labels.association': LabelAssociation\n    'labels.edit': Label\n    /** presence of contact in a chat updated */\n    'presence.update': { id: string, presences: { [participant: string]: PresenceData } }\n\n    'contacts.upsert': Contact[]\n    'contacts.update': Partial<Contact>[]\n\n    'messages.delete': { keys: WAMessageKey[] } | { jid: string, all: true }\n    'messages.update': WAMessageUpdate[]\n    'messages.media-update': { key: WAMessageKey, media?: { ciphertext: Uint8Array, iv: Uint8Array }, error?: Boom }[]\n    /**\n     * add/update the given messages. If they were received while the connection was online,\n     * the update will have type: \"notify\"\n     *  */\n    'messages.upsert': { messages: WAMessage[], type: MessageUpsertType }\n    /** message was reacted to. If reaction was removed -- then \"reaction.text\" will be falsey */\n    'messages.reaction': { key: WAMessageKey, reaction: proto.IReaction }[]\n\n    'message-receipt.update': MessageUserReceiptUpdate[]\n\n    'groups.upsert': GroupMetadata[]\n    'groups.update': Partial<GroupMetadata>[]\n    /** apply an action to participants in a group */\n    'group-participants.update': { id: string, participants: string[], action: ParticipantAction }\n\n    'blocklist.set': { blocklist: string[] }\n    'blocklist.update': { blocklist: string[], type: 'add' | 'remove' }\n    /** Receive an update on a call, including when the call was received, rejected, accepted */\n    'call': WACallEvent[]\n}\n```\n\nYou can listen to these events like this:\n``` ts\n\nconst sock = makeWASocket()\nsock.ev.on('messages.upsert', ({ messages }) => {\n    console.log('got messages', messages)\n})\n\n```\n\n## Implementing a Data Store\n\nBaileys does not come with a defacto storage for chats, contacts, or messages. However, a simple in-memory implementation has been provided. The store listens for chat updates, new messages, message updates, etc., to always have an up-to-date version of the data.\n\nIt can be used as follows:\n\n``` ts\nimport makeWASocket, { makeInMemoryStore } from '@whiskeysockets/baileys'\n// the store maintains the data of the WA connection in memory\n// can be written out to a file & read from it\nconst store = makeInMemoryStore({ })\n// can be read from a file\nstore.readFromFile('./baileys_store.json')\n// saves the state to a file every 10s\nsetInterval(() => {\n    store.writeToFile('./baileys_store.json')\n}, 10_000)\n\nconst sock = makeWASocket({ })\n// will listen from this socket\n// the store can listen from a new socket once the current socket outlives its lifetime\nstore.bind(sock.ev)\n\nsock.ev.on('chats.set', () => {\n    // can use \"store.chats\" however you want, even after the socket dies out\n    // \"chats\" => a KeyedDB instance\n    console.log('got chats', store.chats.all())\n})\n\nsock.ev.on('contacts.set', () => {\n    console.log('got contacts', Object.values(store.contacts))\n})\n\n```\n\nThe store also provides some simple functions such as `loadMessages` that utilize the store to speed up data retrieval.\n\n**Note:** I highly recommend building your own data store especially for MD connections, as storing someone's entire chat history in memory is a terrible waste of RAM.\n\n## Sending Messages\n\n**Send all types of messages with a single function:**\n\n### Non-Media Messages\n\n``` ts\nimport { MessageType, MessageOptions, Mimetype } from '@whiskeysockets/baileys'\n\nconst id = 'abcd@s.whatsapp.net' // the WhatsApp ID \n// send a simple text!\nconst sentMsg  = await sock.sendMessage(id, { text: 'oh hello there' })\n// send a reply messagge\nconst sentMsg  = await sock.sendMessage(id, { text: 'oh hello there' }, { quoted: message })\n// send a mentions message\nconst sentMsg  = await sock.sendMessage(id, { text: '@12345678901', mentions: ['12345678901@s.whatsapp.net'] })\n// send a location!\nconst sentMsg  = await sock.sendMessage(\n    id, \n    { location: { degreesLatitude: 24.121231, degreesLongitude: 55.1121221 } }\n)\n// send a contact!\nconst vcard = 'BEGIN:VCARD\\n' // metadata of the contact card\n            + 'VERSION:3.0\\n' \n            + 'FN:Jeff Singh\\n' // full name\n            + 'ORG:Ashoka Uni;\\n' // the organization of the contact\n            + 'TEL;type=CELL;type=VOICE;waid=911234567890:+91 12345 67890\\n' // WhatsApp ID + phone number\n            + 'END:VCARD'\nconst sentMsg  = await sock.sendMessage(\n    id,\n    { \n        contacts: { \n            displayName: 'Jeff', \n            contacts: [{ vcard }] \n        }\n    }\n)\n\nconst reactionMessage = {\n    react: {\n        text: \"💖\", // use an empty string to remove the reaction\n        key: message.key\n    }\n}\n\nconst sendMsg = await sock.sendMessage(id, reactionMessage)\n```\n\n### Sending messages with link previews\n\n1. By default, WA MD does not have link generation when sent from the web\n2. Baileys has a function to generate the content for these link previews\n3. To enable this function's usage, add `link-preview-js` as a dependency to your project with `yarn add link-preview-js`\n4. Send a link:\n``` ts\n// send a link\nconst sentMsg  = await sock.sendMessage(id, { text: 'Hi, this was sent using https://github.com/adiwajshing/baileys' })\n```\n\n### Media Messages\n\nSending media (video, stickers, images) is easier & more efficient than ever. \n- You can specify a buffer, a local url or even a remote url.\n- When specifying a media url, Baileys never loads the entire buffer into memory; it even encrypts the media as a readable stream.\n\n``` ts\nimport { MessageType, MessageOptions, Mimetype } from '@whiskeysockets/baileys'\n// Sending gifs\nawait sock.sendMessage(\n    id, \n    { \n        video: fs.readFileSync(\"Media/ma_gif.mp4\"), \n        caption: \"hello!\",\n        gifPlayback: true\n    }\n)\n\nawait sock.sendMessage(\n    id, \n    { \n        video: \"./Media/ma_gif.mp4\", \n        caption: \"hello!\",\n        gifPlayback: true\n    }\n)\n\n// send an audio file\nawait sock.sendMessage(\n    id, \n    { audio: { url: \"./Media/audio.mp3\" }, mimetype: 'audio/mp4' }\n    { url: \"Media/audio.mp3\" }, // can send mp3, mp4, & ogg\n)\n```\n\n### Notes\n\n- `id` is the WhatsApp ID of the person or group you're sending the message to. \n    - It must be in the format ```[country code][phone number]@s.whatsapp.net```\n\t    - Example for people: ```+19999999999@s.whatsapp.net```. \n\t    - For groups, it must be in the format ``` 123456789-123345@g.us ```. \n    - For broadcast lists, it's `[timestamp of creation]@broadcast`.\n    - For stories, the ID is `status@broadcast`.\n- For media messages, the thumbnail can be generated automatically for images & stickers provided you add `jimp` or `sharp` as a dependency in your project using `yarn add jimp` or `yarn add sharp`. Thumbnails for videos can also be generated automatically, though, you need to have `ffmpeg` installed on your system.\n- **MiscGenerationOptions**: some extra info about the message. It can have the following __optional__ values:\n    ``` ts\n    const info: MessageOptions = {\n        quoted: quotedMessage, // the message you want to quote\n        contextInfo: { forwardingScore: 2, isForwarded: true }, // some random context info (can show a forwarded message with this too)\n        timestamp: Date(), // optional, if you want to manually set the timestamp of the message\n        caption: \"hello there!\", // (for media messages) the caption to send with the media (cannot be sent with stickers though)\n        jpegThumbnail: \"23GD#4/==\", /*  (for location & media messages) has to be a base 64 encoded JPEG if you want to send a custom thumb, \n                                    or set to null if you don't want to send a thumbnail.\n                                    Do not enter this field if you want to automatically generate a thumb\n                                */\n        mimetype: Mimetype.pdf, /* (for media messages) specify the type of media (optional for all media types except documents),\n                                    import {Mimetype} from '@whiskeysockets/baileys'\n                                */\n        fileName: 'somefile.pdf', // (for media messages) file name for the media\n        /* will send audio messages as voice notes, if set to true */\n        ptt: true,\n        /** Should it send as a disappearing messages. \n         * By default 'chat' -- which follows the setting of the chat */\n        ephemeralExpiration: WA_DEFAULT_EPHEMERAL\n    }\n    ```\n## Forwarding Messages\n\n``` ts\nconst msg = getMessageFromStore('455@s.whatsapp.net', 'HSJHJWH7323HSJSJ') // implement this on your end\nawait sock.sendMessage('1234@s.whatsapp.net', { forward: msg }) // WA forward the message!\n```\n\n## Reading Messages\n\nA set of message keys must be explicitly marked read now. \nIn multi-device, you cannot mark an entire \"chat\" read as it were with Baileys Web.\nThis means you have to keep track of unread messages.\n\n``` ts\nconst key = {\n    remoteJid: '1234-123@g.us',\n    id: 'AHASHH123123AHGA', // id of the message you want to read\n    participant: '912121232@s.whatsapp.net' // the ID of the user that sent the  message (undefined for individual chats)\n}\n// pass to readMessages function\n// can pass multiple keys to read multiple messages as well\nawait sock.readMessages([key])\n```\n\nThe message ID is the unique identifier of the message that you are marking as read. \nOn a `WAMessage`, the `messageID` can be accessed using ```messageID = message.key.id```.\n\n## Update Presence\n\n``` ts\nawait sock.sendPresenceUpdate('available', id) \n\n```\nThis lets the person/group with ``` id ``` know whether you're online, offline, typing etc. \n\n``` presence ``` can be one of the following:\n``` ts\ntype WAPresence = 'unavailable' | 'available' | 'composing' | 'recording' | 'paused'\n```\n\nThe presence expires after about 10 seconds.\n\n**Note:** In the multi-device version of WhatsApp -- if a desktop client is active, WA doesn't send push notifications to the device. If you would like to receive said notifications -- mark your Baileys client offline using `sock.sendPresenceUpdate('unavailable')`\n\n## Downloading Media Messages\n\nIf you want to save the media you received\n``` ts\nimport { writeFile } from 'fs/promises'\nimport { downloadMediaMessage } from '@whiskeysockets/baileys'\n\nsock.ev.on('messages.upsert', async ({ messages }) => {\n    const m = messages[0]\n\n    if (!m.message) return // if there is no text or media message\n    const messageType = Object.keys (m.message)[0]// get what type of message it is -- text, image, video\n    // if the message is an image\n    if (messageType === 'imageMessage') {\n        // download the message\n        const buffer = await downloadMediaMessage(\n            m,\n            'buffer',\n            { },\n            { \n                logger,\n                // pass this so that baileys can request a reupload of media\n                // that has been deleted\n                reuploadRequest: sock.updateMediaMessage\n            }\n        )\n        // save to file\n        await writeFile('./my-download.jpeg', buffer)\n    }\n}\n```\n\n**Note:** WhatsApp automatically removes old media from their servers. For the device to access said media -- a re-upload is required by another device that has it. This can be accomplished using: \n``` ts\nconst updatedMediaMsg = await sock.updateMediaMessage(msg)\n```\n\n## Deleting Messages\n\n``` ts\nconst jid = '1234@s.whatsapp.net' // can also be a group\nconst response = await sock.sendMessage(jid, { text: 'hello!' }) // send a message\n// sends a message to delete the given message\n// this deletes the message for everyone\nawait sock.sendMessage(jid, { delete: response.key })\n```\n\n**Note:** deleting for oneself is supported via `chatModify` (next section)\n\n## Updating Messages\n\n``` ts\nconst jid = '1234@s.whatsapp.net'\n\nawait sock.sendMessage(jid, {\n      text: 'updated text goes here',\n      edit: response.key,\n    });\n```\n\n## Modifying Chats\n\nWA uses an encrypted form of communication to send chat/app updates. This has been implemented mostly and you can send the following updates:\n\n- Archive a chat\n  ``` ts\n  const lastMsgInChat = await getLastMessageInChat('123456@s.whatsapp.net') // implement this on your end\n  await sock.chatModify({ archive: true, lastMessages: [lastMsgInChat] }, '123456@s.whatsapp.net')\n  ```\n- Mute/unmute a chat\n  ``` ts\n  // mute for 8 hours\n  await sock.chatModify({ mute: 8*60*60*1000 }, '123456@s.whatsapp.net', [])\n  // unmute\n  await sock.chatModify({ mute: null }, '123456@s.whatsapp.net', [])\n  ```\n- Mark a chat read/unread\n  ``` ts\n  const lastMsgInChat = await getLastMessageInChat('123456@s.whatsapp.net') // implement this on your end\n  // mark it unread\n  await sock.chatModify({ markRead: false, lastMessages: [lastMsgInChat] }, '123456@s.whatsapp.net')\n  ```\n\n- Delete a message for me\n  ``` ts\n  await sock.chatModify(\n    { clear: { messages: [{ id: 'ATWYHDNNWU81732J', fromMe: true, timestamp: \"1654823909\" }] } }, \n    '123456@s.whatsapp.net', \n    []\n    )\n\n  ```\n\n- Delete a chat\n  ``` ts\n  const lastMsgInChat = await getLastMessageInChat('123456@s.whatsapp.net') // implement this on your end\n  await sock.chatModify({\n    delete: true,\n    lastMessages: [{ key: lastMsgInChat.key, messageTimestamp: lastMsgInChat.messageTimestamp }]\n  },\n  '123456@s.whatsapp.net')\n  ```\n\n- Pin/unpin a chat\n  ``` ts\n  await sock.chatModify({\n    pin: true // or `false` to unpin\n  },\n  '123456@s.whatsapp.net')\n  ```\n  \n- Star/unstar a message\n  ``` ts\n  await sock.chatModify({\n  star: {\n  \tmessages: [{ id: 'messageID', fromMe: true // or `false` }],\n      \tstar: true // - true: Star Message; false: Unstar Message\n  }},'123456@s.whatsapp.net');\n  ```\n\n**Note:** if you mess up one of your updates, WA can log you out of all your devices and you'll have to log in again.\n\n## Disappearing Messages\n\n``` ts\nconst jid = '1234@s.whatsapp.net' // can also be a group\n// turn on disappearing messages\nawait sock.sendMessage(\n    jid, \n    // this is 1 week in seconds -- how long you want messages to appear for\n    { disappearingMessagesInChat: WA_DEFAULT_EPHEMERAL }\n)\n// will send as a disappearing message\nawait sock.sendMessage(jid, { text: 'hello' }, { ephemeralExpiration: WA_DEFAULT_EPHEMERAL })\n// turn off disappearing messages\nawait sock.sendMessage(\n    jid, \n    { disappearingMessagesInChat: false }\n)\n\n```\n\n## Misc\n\n- To check if a given ID is on WhatsApp\n    ``` ts\n    const id = '123456'\n    const [result] = await sock.onWhatsApp(id)\n    if (result.exists) console.log (`${id} exists on WhatsApp, as jid: ${result.jid}`)\n    ```\n- To query chat history on a group or with someone\n    TODO, if possible\n- To get the status of some person\n    ``` ts\n    const status = await sock.fetchStatus(\"xyz@s.whatsapp.net\")\n    console.log(\"status: \" + status)\n    ```\n- To change your profile status\n    ``` ts\n    const status = 'Hello World!'\n    await sock.updateProfileStatus(status)\n    ```\n- To change your profile name\n    ``` ts\n    const name = 'My name'\n    await sock.updateProfileName(name)\n    ```\n- To get the display picture of some person/group\n    ``` ts\n    // for low res picture\n    const ppUrl = await sock.profilePictureUrl(\"xyz@g.us\")\n    console.log(\"download profile picture from: \" + ppUrl)\n    // for high res picture\n    const ppUrl = await sock.profilePictureUrl(\"xyz@g.us\", 'image')\n    ```\n- To change your display picture or a group's\n    ``` ts\n    const jid = '111234567890-1594482450@g.us' // can be your own too\n    await sock.updateProfilePicture(jid, { url: './new-profile-picture.jpeg' })\n    ```\n- To remove your display picture or a group's\n    ``` ts\n    const jid = '111234567890-1594482450@g.us' // can be your own too\n    await sock.removeProfilePicture(jid)\n    ```\n- To get someone's presence (if they're typing or online)\n    ``` ts\n    // the presence update is fetched and called here\n    sock.ev.on('presence.update', json => console.log(json))\n    // request updates for a chat\n    await sock.presenceSubscribe(\"xyz@s.whatsapp.net\") \n    ```\n- To block or unblock user\n    ``` ts\n    await sock.updateBlockStatus(\"xyz@s.whatsapp.net\", \"block\") // Block user\n    await sock.updateBlockStatus(\"xyz@s.whatsapp.net\", \"unblock\") // Unblock user\n    ```\n- To get a business profile, such as description or category\n    ```ts\n    const profile = await sock.getBusinessProfile(\"xyz@s.whatsapp.net\")\n    console.log(\"business description: \" + profile.description + \", category: \" + profile.category)\n    ```\nOf course, replace ``` xyz ``` with an actual ID. \n\n## Groups\n- To create a group\n    ``` ts\n    // title & participants\n    const group = await sock.groupCreate(\"My Fab Group\", [\"1234@s.whatsapp.net\", \"4564@s.whatsapp.net\"])\n    console.log (\"created group with id: \" + group.gid)\n    sock.sendMessage(group.id, { text: 'hello there' }) // say hello to everyone on the group\n    ```\n- To add/remove people to a group or demote/promote people\n    ``` ts\n    // id & people to add to the group (will throw error if it fails)\n    const response = await sock.groupParticipantsUpdate(\n        \"abcd-xyz@g.us\", \n        [\"abcd@s.whatsapp.net\", \"efgh@s.whatsapp.net\"],\n        \"add\" // replace this parameter with \"remove\", \"demote\" or \"promote\"\n    )\n    ```\n- To change the group's subject\n    ``` ts\n    await sock.groupUpdateSubject(\"abcd-xyz@g.us\", \"New Subject!\")\n    ```\n- To change the group's description\n    ``` ts\n    await sock.groupUpdateDescription(\"abcd-xyz@g.us\", \"New Description!\")\n    ```\n- To change group settings\n    ``` ts\n    // only allow admins to send messages\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'announcement')\n    // allow everyone to send messages\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'not_announcement')\n    // allow everyone to modify the group's settings -- like display picture etc.\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'unlocked')\n    // only allow admins to modify the group's settings\n    await sock.groupSettingUpdate(\"abcd-xyz@g.us\", 'locked')\n    ```\n- To leave a group\n    ``` ts\n    await sock.groupLeave(\"abcd-xyz@g.us\") // (will throw error if it fails)\n    ```\n- To get the invite code for a group\n    ``` ts\n    const code = await sock.groupInviteCode(\"abcd-xyz@g.us\")\n    console.log(\"group code: \" + code)\n    ```\n- To revoke the invite code in a group\n    ```ts\n    const code = await sock.groupRevokeInvite(\"abcd-xyz@g.us\")\n    console.log(\"New group code: \" + code)\n    ```\n- To query the metadata of a group\n    ``` ts\n    const metadata = await sock.groupMetadata(\"abcd-xyz@g.us\") \n    console.log(metadata.id + \", title: \" + metadata.subject + \", description: \" + metadata.desc)\n    ```\n- To join the group using the invitation code\n    ``` ts\n    const response = await sock.groupAcceptInvite(\"xxx\")\n    console.log(\"joined to: \" + response)\n    ```\n    Of course, replace ``` xxx ``` with invitation code.\n- To get group info by invite code\n    ```ts\n    const response = await sock.groupGetInviteInfo(\"xxx\")\n    console.log(\"group information: \" + response)\n    ```\n- To join the group using groupInviteMessage\n    ``` ts\n    const response = await sock.groupAcceptInviteV4(\"abcd@s.whatsapp.net\", groupInviteMessage)\n    console.log(\"joined to: \" + response)\n    ```\n  Of course, replace ``` xxx ``` with invitation code.\n\n- To get list request join\n    ``` ts\n    const response = await sock.groupRequestParticipantsList(\"abcd-xyz@g.us\")\n    console.log(response)\n    ```\n- To approve/reject request join\n    ``` ts\n    const response = await sock.groupRequestParticipantsUpdate(\n        \"abcd-xyz@g.us\", // id group,\n        [\"abcd@s.whatsapp.net\", \"efgh@s.whatsapp.net\"],\n        \"approve\" // replace this parameter with \"reject\" \n    )\n    console.log(response)\n    ```\n\n## Privacy\n- To get the privacy settings\n    ``` ts\n    const privacySettings = await sock.fetchPrivacySettings(true)\n    console.log(\"privacy settings: \" + privacySettings)\n    ```\n- To update the LastSeen privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateLastSeenPrivacy(value)\n    ```\n- To update the Online privacy\n    ``` ts\n    const value = 'all' // 'match_last_seen'\n    await sock.updateOnlinePrivacy(value)\n    ```\n- To update the Profile Picture privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateProfilePicturePrivacy(value)\n    ```\n- To update the Status privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateStatusPrivacy(value)\n    ```\n- To update the Read Receipts privacy\n    ``` ts\n    const value = 'all' // 'none'\n    await sock.updateReadReceiptsPrivacy(value)\n    ```\n- To update the Groups Add privacy\n    ``` ts\n    const value = 'all' // 'contacts' | 'contact_blacklist' | 'none'\n    await sock.updateGroupsAddPrivacy(value)\n    ```\n- To update the Default Disappearing Mode\n    ``` ts\n    const duration = 86400 // 604800 | 7776000 | 0 \n    await sock.updateDefaultDisappearingMode(duration)\n    ```\n## Broadcast Lists & Stories\n\n**Note:** messages currently cannot be sent to broadcast lists from the MD version.\n\n- You can send messages to broadcast lists the same way you send messages to groups & individual chats.\n- Right now, WA Web does not support creating broadcast lists, but you can still delete them.\n- Broadcast IDs are in the format `12345678@broadcast`\n- To query a broadcast list's recipients & name:\n    ``` ts\n    const bList = await sock.getBroadcastListInfo(\"1234@broadcast\")\n    console.log (`list name: ${bList.name}, recps: ${bList.recipients}`)\n    ```\n\n## Writing Custom Functionality\nBaileys is written with custom functionality in mind. Instead of forking the project & re-writing the internals, you can simply write your own extensions.\n\nFirst, enable the logging of unhandled messages from WhatsApp by setting:\n``` ts\nconst sock = makeWASocket({\n    logger: P({ level: 'debug' }),\n})\n```\nThis will enable you to see all sorts of messages WhatsApp sends in the console. \n\nSome examples:\n\n1. Functionality to track the battery percentage of your phone.\n    You enable logging and you'll see a message about your battery pop up in the console: \n    ```{\"level\":10,\"fromMe\":false,\"frame\":{\"tag\":\"ib\",\"attrs\":{\"from\":\"@s.whatsapp.net\"},\"content\":[{\"tag\":\"edge_routing\",\"attrs\":{},\"content\":[{\"tag\":\"routing_info\",\"attrs\":{},\"content\":{\"type\":\"Buffer\",\"data\":[8,2,8,5]}}]}]},\"msg\":\"communication\"} ``` \n    \n   The \"frame\" is what the message received is, it has three components:\n   - `tag` -- what this frame is about (eg. message will have \"message\")\n   - `attrs` -- a string key-value pair with some metadata (contains ID of the message usually)\n   - `content` -- the actual data (eg. a message node will have the actual message content in it)\n   - read more about this format [here](/src/WABinary/readme.md)\n\n    You can register a callback for an event using the following:\n    ``` ts\n    // for any message with tag 'edge_routing'\n    sock.ws.on(`CB:edge_routing`, (node: BinaryNode) => { })\n    // for any message with tag 'edge_routing' and id attribute = abcd\n    sock.ws.on(`CB:edge_routing,id:abcd`, (node: BinaryNode) => { })\n    // for any message with tag 'edge_routing', id attribute = abcd & first content node routing_info\n    sock.ws.on(`CB:edge_routing,id:abcd,routing_info`, (node: BinaryNode) => { })\n    ```\n Also, this repo is now licenced under GPL 3 since it uses [libsignal-node](https://git.questbook.io/backend/service-coderunner/-/merge_requests/1)\n"
		},
		"commits": [
			{
				"committedDate": "2023-08-10T09:15:12Z",
				"message": "fix: registration + add captcha support (#227)\n\n* fix: registration + update mobile version\r\n\r\n* feat: add captcha support for registration\r\n\r\n* fix: jid protocol address missing device\r\n\r\n* fix: linting errors",
				"messageBody": "* fix: registration + update mobile version\r\n\r\n* feat: add captcha support for registration\r\n\r\n* fix: jid protocol address missing device\r\n\r\n* fix: linting errors"
			},
			{
				"committedDate": "2023-07-19T15:28:50Z",
				"message": "fix: do not send message to self if the device is 0 (mobile)",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-31T16:12:43Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-26T12:13:39Z",
				"message": "feat: add md-msg-hist to MEDIA_PATH_MAP",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-26T12:13:39Z",
				"message": "feat: add native mobile api docs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-23T15:51:28Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-22T16:04:24Z",
				"message": "feat: use axios and config.options for registration",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:24:55Z",
				"message": "remove wip two factor",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:20:55Z",
				"message": "revert: example logger",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:15:40Z",
				"message": "chore: remove console.logs",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:15:40Z",
				"message": "wip: two factor auth",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-19T08:13:54Z",
				"message": "Merge branch 'master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-17T14:55:24Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-14T17:21:44Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-14T15:45:20Z",
				"message": "fix: mobile app state key + message events",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-14T15:45:20Z",
				"message": "feat: fetch groups if ib:dirty",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-12T21:20:18Z",
				"message": "Merge branch 'WhiskeySockets:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-12T16:06:19Z",
				"message": "Merge branch 'master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-05-12T16:02:41Z",
				"message": "fix: socket options",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:33:20Z",
				"message": "add .prettierignore",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:33:20Z",
				"message": "auto connect socket",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:31:21Z",
				"message": "Merge branch 'master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-30T10:30:30Z",
				"message": "unify web + mobile and use tcp socket",
				"messageBody": ""
			},
			{
				"committedDate": "2023-04-20T11:01:11Z",
				"message": "feat: native-mobile-api",
				"messageBody": ""
			}
		],
		"commitSummary": "**Implemented Features and Fixes**\n### Fixes\n- Registration\n- Mobile version\n- Jid protocol address missing device\n- Linting errors\n- Mobile app state key + message events\n- Socket options\n- Do not send message to self if the device is 0 (mobile)\n- Fetch groups\n\n### Features\n- Captcha support for registration\n- md-msg-hist added to MEDIA_PATH_MAP\n- Native mobile API docs\n- Use axios and config.options for registration\n- Auto connect socket\n- Unify web + mobile and use tcp socket\n- Native-mobile-api"
	},
	{
		"id": "R_kgDOLE5M2w",
		"description": "Spoof TLS/JA3 fingerprints in GO and Javascript ",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/CycleTLS",
		"name": "CycleTLS",
		"nameWithOwner": "SamuelScheit/CycleTLS",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2024-01-15T01:37:36Z",
		"updatedAt": "2024-01-15T01:37:43Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/d7ec6a889d238181f8781de6c4cc0b5c69cdfdea94109877d7ba330b4d6e8913/SamuelScheit/CycleTLS",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 3,
			"totalSize": 181024,
			"edges": [
				{
					"size": 134005,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				},
				{
					"size": 41616,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 5403,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOLE5M269yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 2
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2024-01-15T04:24:07Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-15T01:37:33Z",
				"message": "fix",
				"messageBody": ""
			}
		],
		"commitSummary": "**Summary**\n\n• **Project Details**: \n  - Project name: CycleTLS\n  - Creator: SamuelScheit\n\n• **Project Status**:\n  - Public: True\n  - Forked: True\n  - Language: Go\n  - Language extension: Javascript\n\n• **Project Statistics**:\n  - Stars: 0\n  - Downloads: 0\n  - Commits: 2"
	},
	{
		"id": "R_kgDOK9HnlA",
		"description": "Allows you to emulate an Android native library, and an experimental  iOS emulation",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/unidbg",
		"name": "unidbg",
		"nameWithOwner": "SamuelScheit/unidbg",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-12-23T23:57:03Z",
		"updatedAt": "2023-12-24T00:04:43Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/a5239f1d28c519644c2932efa9aed30cd751f5b086a5e6c138a543a15a972d66/SamuelScheit/unidbg",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 10,
			"totalSize": 4291196,
			"edges": [
				{
					"size": 3571288,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 351913,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				},
				{
					"size": 170046,
					"node": {
						"color": "#438eff",
						"name": "Objective-C"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOK9HnlLFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 11
				}
			}
		},
		"object": {
			"text": "# unidbg\n\nAllows you to emulate an Android native library, and an experimental iOS emulation.<br>\n\nThis is an educational project to learn more about the ELF/MachO file format and ARM assembly.<br>\n\nUse it at your own risk !\n\n## License\n- unidbg uses software libraries from [Apache Software Foundation](http://apache.org). \n- unidbg developer Idea enterprise licenses are supported by [Jetbrains](https://www.jetbrains.com?from=unidbg).\n- [IntelliJ IDEA](https://www.jetbrains.com/idea?from=unidbg) can be used to edit unidbg sources.\n- ![](assets/idea_logo.svg)\n\nSimple tests under src/test directory\n- [unidbg-android/src/test/java/com/bytedance/frameworks/core/encrypt/TTEncrypt.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/bytedance/frameworks/core/encrypt/TTEncrypt.java)  \n\n![](assets/TTEncrypt.gif)\n***\n- [unidbg-android/src/test/java/com/sun/jna/JniDispatch32.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/sun/jna/JniDispatch32.java)  \n![](assets/JniDispatch32.gif)\n***\n- [unidbg-android/src/test/java/com/sun/jna/JniDispatch64.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/sun/jna/JniDispatch64.java)  \n![](assets/JniDispatch64.gif)\n***\n- [unidbg-android/src/test/java/org/telegram/messenger/Utilities32.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/org/telegram/messenger/Utilities32.java)  \n![](assets/Utilities32.gif)\n***\n- [unidbg-android/src/test/java/org/telegram/messenger/Utilities64.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/org/telegram/messenger/Utilities64.java)  \n![](assets/Utilities64.gif)\n\n## More tests\n- [unidbg-android/src/test/java/com/github/unidbg/android/QDReaderJni.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/github/unidbg/android/QDReaderJni.java)\n- [unidbg-android/src/test/java/com/anjuke/mobile/sign/SignUtil.java](https://github.com/zhkl0228/unidbg/blob/master/unidbg-android/src/test/java/com/anjuke/mobile/sign/SignUtil.java)\n\n## Features\n- Emulation of the JNI Invocation API so JNI_OnLoad can be called.\n- Support JavaVM, JNIEnv.\n- Emulation of syscalls instruction.\n- Support ARM32 and ARM64.\n- Inline hook, thanks to [Dobby](https://github.com/jmpews/Dobby).\n- Android import hook, thanks to [xHook](https://github.com/iqiyi/xHook).\n- iOS [fishhook](https://github.com/facebook/fishhook) and substrate and [whale](https://github.com/asLody/whale) hook.\n- [unicorn](https://github.com/zhkl0228/unicorn) backend support simple console debugger, gdb stub, instruction trace, memory read/write trace.\n- Support iOS objc and swift runtime.\n- Support [dynarmic](https://github.com/MerryMage/dynarmic) fast backend.\n- Support Apple M1 hypervisor, the fastest ARM64 backend.\n- Support Linux KVM backend with Raspberry Pi B4.\n\n## Thanks\n- [unicorn](https://github.com/zhkl0228/unicorn)\n- [dynarmic](https://github.com/MerryMage/dynarmic)\n- [HookZz](https://github.com/jmpews/Dobby)\n- [xHook](https://github.com/iqiyi/xHook)\n- [AndroidNativeEmu](https://github.com/AeonLucid/AndroidNativeEmu)\n- [usercorn](https://github.com/lunixbochs/usercorn)\n- [keystone](https://github.com/keystone-engine/keystone)\n- [capstone](https://github.com/aquynh/capstone)\n- [idaemu](https://github.com/36hours/idaemu)\n- [jelf](https://github.com/fornwall/jelf)\n- [whale](https://github.com/asLody/whale)\n- [kaitai_struct](https://github.com/kaitai-io/kaitai_struct)\n- [fishhook](https://github.com/facebook/fishhook)\n- [runtime_class-dump](https://github.com/Tyilo/runtime_class-dump)\n- [mman-win32](https://github.com/mcgarrah/mman-win32)\n\n### One-time Donation\nWe accept donations via WeChatPay:\n\n![WeChat Pay](assets/wx.png)\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/zhkl0228/unidbg.svg)](https://starchart.cc/zhkl0228/unidbg)\n\n"
		},
		"commits": [
			{
				"committedDate": "2024-01-10T23:44:17Z",
				"message": "wip",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-02T16:37:26Z",
				"message": "wip",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-01T16:47:46Z",
				"message": "Merge remote-tracking branch 'github/master'",
				"messageBody": ""
			},
			{
				"committedDate": "2024-01-01T16:47:39Z",
				"message": "wip",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-31T19:56:25Z",
				"message": "Merge branch 'zhkl0228:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-31T16:19:56Z",
				"message": "wip: safety net ssNative",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-31T12:32:06Z",
				"message": "feat: finish init without any more errors",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-31T04:43:23Z",
				"message": "wip: droidguard + callback",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-29T03:21:12Z",
				"message": "feat: working roboelectric",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-24T00:06:51Z",
				"message": "refert formatting changes",
				"messageBody": ""
			},
			{
				"committedDate": "2023-12-24T00:04:09Z",
				"message": "feat: implement _CallStaticLongMethodA, _CallLongMethodA, _NewObjectA",
				"messageBody": ""
			}
		],
		"commitSummary": "Emulation\n- Experimental iOS emulation \n- Android native library emulation \n\nMethod Implementations\n- CallStaticLongMethodA \n- CallLongMethodA \n- NewObjectA \n\nSafety and Security\n- Safety net ssNative\n\nDroidGuard \n\nPlatform Support\n- Robolectric \n\nOther\n- Formatting changes"
	},
	{
		"id": "R_kgDOK8gxcQ",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/react-native-wishlist",
		"name": "react-native-wishlist",
		"nameWithOwner": "SamuelScheit/react-native-wishlist",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-12-22T00:28:43Z",
		"updatedAt": "2023-12-22T00:28:43Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/ba4dd6039ed05f442653a131796f2f1d06f2b3d4b1ec757b11b123d4581af3e6/SamuelScheit/react-native-wishlist",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": true,
		"languages": {
			"totalCount": 10,
			"totalSize": 246914,
			"edges": [
				{
					"size": 101929,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 85806,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 22018,
					"node": {
						"color": "#6866fb",
						"name": "Objective-C++"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOK8gxca9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOKli8XA",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/beeper/voip-experiments",
		"name": "voip-experiments",
		"nameWithOwner": "beeper/voip-experiments",
		"owner": {
			"login": "beeper"
		},
		"createdAt": "2023-10-26T18:25:52Z",
		"updatedAt": "2023-11-12T12:00:51Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/74791520?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 28041,
			"edges": [
				{
					"size": 19529,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 8512,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOKli8XK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOKDj_Tw",
		"description": "🗳 Zod inspired schema library for validating structural data in Go",
		"homepageUrl": "https://goschema.dev/",
		"url": "https://github.com/Intevel/goschema",
		"name": "goschema",
		"nameWithOwner": "Intevel/goschema",
		"owner": {
			"login": "Intevel"
		},
		"createdAt": "2023-08-04T22:06:16Z",
		"updatedAt": "2023-08-05T17:20:02Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/59223342?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 11353,
			"edges": [
				{
					"size": 11353,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOKDj_T69yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOKCsSHQ",
		"description": null,
		"homepageUrl": "https://clara-for-elderly.simonfarshid.com",
		"url": "https://github.com/eliasschwalme/chatbot",
		"name": "chatbot",
		"nameWithOwner": "eliasschwalme/chatbot",
		"owner": {
			"login": "eliasschwalme"
		},
		"createdAt": "2023-08-02T17:49:33Z",
		"updatedAt": "2024-07-08T17:36:48Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/1502787f252101f48a45429ddea1d82b4ddc04e130228a6d1ce8e0ae54dcfba9/eliasschwalme/chatbot",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 37096,
			"edges": [
				{
					"size": 37029,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 67,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOKCsSHa9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOKAltJQ",
		"description": "Augment the TypeScript compiler to support extended functionality",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/ts-patch",
		"name": "ts-patch",
		"nameWithOwner": "SamuelScheit/ts-patch",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-07-28T00:36:47Z",
		"updatedAt": "2023-07-28T00:36:55Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/8b47b233f2d95583a14f2740170f727ed23bad5546ffce28d5ab4d0b9d1a2551/SamuelScheit/ts-patch",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 173862,
			"edges": [
				{
					"size": 162838,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 11024,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOKAltJbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": {
			"text": "[![npm version](https://badge.fury.io/js/ts-patch.svg)](https://badge.fury.io/js/ts-patch)\n[![NPM Downloads](https://img.shields.io/npm/dm/ts-patch.svg?style=flat)](https://npmjs.org/package/ts-patch)\n![Build Status](https://github.com/nonara/ts-patch/workflows/Build/badge.svg)\n\n# ts-patch\n\nPatch typescript to allow custom transformers (plugins) during build.\n\nPlugins are specified in `tsconfig.json`, or provided programmatically in `CompilerOptions`.\n\n_Migrating from ttypescript is easy! See: [Method 1: Live Compiler](#method-1-live-compiler)_\n\n## Features\n\n* Patch typescript installation via on-the-fly, in-memory patching _or_ as a persistent patch\n* Can patch individual libraries (see `ts-patch /?`)\n* Hook build process by transforming the `Program` (see: [Transforming Program](#transforming-program))\n* Add, remove, or modify diagnostics (see: [Altering Diagnostics](#altering-diagnostics))\n* Fully compatible with legacy [ttypescript](https://github.com/cevek/ttypescript) projects\n* **(new)** Experimental support for ES Module based transformers\n\n# Table of Contents\n\n<!-- TOC -->\n* [ts-patch](#ts-patch)\n  * [Features](#features)\n* [Table of Contents](#table-of-contents)\n* [Installation](#installation)\n* [Usage](#usage)\n  * [Method 1: Live Compiler](#method-1-live-compiler)\n  * [Method 2: Persistent Patch](#method-2-persistent-patch)\n* [Configuration](#configuration)\n  * [Plugin Options](#plugin-options)\n* [Writing Transformers](#writing-transformers)\n  * [Source Transformers](#source-transformers)\n    * [Source Transformer Entry Point](#source-transformer-entry-point)\n    * [Source Transformer Example](#source-transformer-example)\n    * [Altering Diagnostics](#altering-diagnostics)\n    * [Note](#note)\n  * [Program Transformers](#program-transformers)\n    * [Program Transformer Entry Point](#program-transformer-entry-point)\n    * [Configuring Program Transformers](#configuring-program-transformers)\n    * [Program Transformer Example](#program-transformer-example)\n  * [Resources](#resources)\n    * [Recommended Reading](#recommended-reading)\n    * [Recommended Tools](#recommended-tools)\n    * [Discussion](#discussion)\n* [Advanced Options](#advanced-options)\n* [Maintainers](#maintainers)\n  * [Help Wanted](#help-wanted)\n* [License](#license)\n<!-- TOC -->\n\n# Installation\n\n1. Install package\n```sh\n<yarn|npm|pnpm> add -D ts-patch\n```\n\n# Usage\n\n## Method 1: Live Compiler\n\nThe live compiler patches on-the-fly, each time it is run.\n\n**Via commandline:** Simply use `tspc` (instead of `tsc`)\n\n**With tools such as ts-node, webpack, ts-jest, etc:** specify the compiler as  `ts-patch/compiler`\n\n## Method 2: Persistent Patch\n\nPersistent patch modifies the typescript installation within the node_modules path. It requires additional configuration\nto remain persisted, but it carries less load time and complexity compared to the live compiler.\n\n1. Install the patch\n\n```shell\n# For advanced options, see: ts-patch /?\nts-patch install\n```\n\n2. Add `prepare` script (keeps patch persisted after npm install)\n\n`package.json`\n ```jsonc\n{\n  /* ... */\n  \"scripts\": {\n    \"prepare\": \"ts-patch install -s\"\n  }\n}\n ```\n\n# Configuration\n\n**tsconfig.json**: Add transformers to `compilerOptions` in `plugins` array.\n\n**Examples**\n```jsonc\n{\n    \"compilerOptions\": {\n        \"plugins\": [\n            // Source Transformers\n            { \"transform\": \"transformer-module\" },\n            { \"transform\": \"transformer2\", \"extraOption\": 123 },\n            { \"transform\": \"trans-with-mapping\", \"resolvePathAliases\": true },\n            { \"transform\": \"esm-transformer, \"isEsm\": true },\n\n            // Program Transformer\n            { \"transform\": \"transformer-module5\", \"transformProgram\": true }\n        ]\n    }\n}\n```\n\n## Plugin Options\n\n| Option             | Type    | Description                                                                                                   |\n|--------------------|---------|:--------------------------------------------------------------------------------------------------------------|\n| **transform**      | string  | Module name or path to transformer _(*.ts or *.js)_                                                           |\n| after              | boolean | Apply transformer after stock TS transformers                                                                 |\n| afterDeclarations  | boolean | Apply transformer to declaration (*.d.ts) files                                                               |\n| transformProgram   | boolean | Transform `Program` during `ts.createProgram()` _(see: [Program Transformers](#program-transformers))_        |\n| isEsm              | boolean | Transformer is ES Module (_note: experimental_ — requires [esm](https://www.npmjs.com/package/esm))           |\n| resolvePathAliases | boolean | Resolve path aliases in transformer (requires [tsconfig-paths](https://www.npmjs.com/package/tsconfig-paths)) |\n| type               | string  | See: [Source Transformer Entry Point](#source-transformer-entry-point) (default: 'program')                   |\n| import             | string  | Name of exported transformer function _(defaults to `default` export)_                                        |\n| tsConfig           | string  | tsconfig.json file _for transformer_ (allows specifying compileOptions, path mapping support, etc)            |\n| _..._              |         | Provide your own custom options, which will be passed to the transformer                                      |\n\n_Note: Required options are bold_\n\n# Writing Transformers\n\n## Source Transformers\n\nSource Transformers will transform the AST of SourceFiles during compilation, allowing you to alter the output of the JS or declarations files.\n\n### Source Transformer Entry Point\n\n```ts\n(program: ts.Program, config: PluginConfig, extras: TransformerExtras) => ts.TransformerFactory\n```\n\n**PluginConfig**: [Type Declaration](https://github.com/nonara/ts-patch/blob/master/projects/core/shared/plugin-types.ts)  \n**TransformerExtras**: [Type Declaration](https://github.com/nonara/ts-patch/blob/master/projects/core/shared/plugin-types.ts)  \n**ts.TransformerFactory**: `(context: ts.TransformationContext) => (sourceFile: ts.SourceFile) => ts.SourceFile`\n\n_Note: Additional [legacy signatures](https://github.com/cevek/ttypescript#pluginconfigtype) are supported, but it is not recommended to develop a new transformer using them._\n\n### Source Transformer Example\n\nTransformers can be written in JS or TS.\n\n```ts\nimport type * as ts from 'typescript';\nimport type { TransformerExtras, PluginConfig } from 'ts-patch';\n\n/** Changes string literal 'before' to 'after' */\nexport default function (program: ts.Program, pluginConfig: PluginConfig, { ts: tsInstance }: TransformerExtras) {\n  return (ctx: ts.TransformationContext) => {\n    const { factory } = ctx;\n    \n    return (sourceFile: ts.SourceFile) => {\n      function visit(node: ts.Node): ts.Node {\n        if (tsInstance.isStringLiteral(node) && node.text === 'before') {\n          return factory.createStringLiteral('after');\n        }\n        return tsInstance.visitEachChild(node, visit, ctx);\n      }\n      return tsInstance.visitNode(sourceFile, visit);\n    };\n  };\n}\n\n```\n\n**Live Examples**:\n\n[`{ transform: \"typescript-transform-paths\" }`](https://github.com/LeDDGroup/typescript-transform-paths)\n\n[`{ transform: \"typescript-is/lib/transform-inline/transformer\" }`](https://github.com/woutervh-/typescript-is)\n\n[`{ transform: \"typia/lib/transform\" }`](https://github.com/samchon/typia) ([💻playground](https://typia.io/playground))\n\n[`{ transform: \"@nestia/core/lib/transform\" }`](https://github.com/samchon/nestia)\n\n### Altering Diagnostics\n\nDiagnostics can be altered in a Source Transformer.\n\nTo alter diagnostics you can use the following, provided from the `TransformerExtras` parameter:\n\n| property           | description                                         |\n|--------------------|-----------------------------------------------------|\n| diagnostics        | Reference to `Diagnostic` array                     |   \n| addDiagnostic()    | Safely add `Diagnostic` to `diagnostics` array      |\n| removeDiagnostic() | Safely remove `Diagnostic` from `diagnostics` array | \n\n### Note\n\n_This alters diagnostics during _emit only_. If you want to alter diagnostics in your IDE as well, you'll need to create a LanguageService plugin to accompany your source transformer_\n\n## Program Transformers\n\nSometimes you want to do more than just transform source code. For example you may want to:\n\n- TypeCheck code after it's been transformed\n- Generate code and add it to the program\n- Add or remove emit files during transformation\n\nFor this, we've introduced what we call a Program Transformer. The transform action takes place during `ts.createProgram`, and allows\nre-creating the `Program` instance that typescript uses.\n\n### Program Transformer Entry Point\n\n```ts\n(program: ts.Program, host: ts.CompilerHost | undefined, options: PluginConfig, extras: ProgramTransformerExtras) => ts.Program\n```\n\n**ProgramTransformerExtras** >>> [Type Declaration](https://github.com/nonara/ts-patch/blob/master/projects/core/shared/plugin-types.ts)\n\n### Configuring Program Transformers\n\nTo configure a Program Transformer, supply `\"transformProgram\": true` in the config transformer entry.\n\n_Note: The `before`, `after`, and `afterDeclarations` options do not apply to a Program Transformer and will be ignored_\n\n[See Config Example](#configuration)\n\n### Program Transformer Example\n```TypeScript\n/** \n * Add a file to Program\n */\nimport * as path from 'path';\nimport type * as ts from 'typescript';\nimport type { ProgramTransformerExtras, PluginConfig } from 'ts-patch';\n\nexport const newFile = path.resolve(__dirname, 'added-file.ts');\n\nexport default function (\n  program: ts.Program, \n  host: ts.CompilerHost | undefined, \n  options: PluginConfig, \n  { ts: tsInstance }: ProgramTransformerExtras\n) {\n  return tsInstance.createProgram(\n    /* rootNames */ program.getRootFileNames().concat([ newFile ]),\n    program.getCompilerOptions(),\n    host,\n    /* oldProgram */ program\n  );\n}\n```\n\n**Note:** For a more complete example, see [Transforming Program with additional AST transformations](https://github.com/nonara/ts-patch/discussions/29#discussioncomment-325979)\n\n**Live Examples**:\n\n[`{ transform: \"@typescript-virtual-barrel/compiler-plugin\", transformProgram: true }`](https://github.com/zaguiini/typescript-virtual-barrel)\n\n## Resources\n\n### Recommended Reading\n\n- How-To: [Advice for working with the TS Compiler API](https://github.com/nonara/ts-patch/discussions/31)\n- How-To: [TypeScript Transformer Handbook](https://github.com/madou/typescript-transformer-handbook)\n- Article: [How to Write a TypeScript Transform (Plugin)](https://dev.doctorevidence.com/how-to-write-a-typescript-transform-plugin-fc5308fdd943)\n- Article: [Creating a TypeScript Transformer](https://43081j.com/2018/08/creating-a-typescript-transform?source=post_page-----731e2b0b66e6----------------------)\n\n### Recommended Tools\n\n| Tool                                                                 | Type        | Description                                                                                 |\n|----------------------------------------------------------------------|-------------|---------------------------------------------------------------------------------------------|\n| [TS AST Viewer](https://ts-ast-viewer.com/)                          | Web App     | Allows you to see the `Node` structure and other TS properties of your source code.         |\n| [ts-expose-internals](https://github.com/nonara/ts-expose-internals) | NPM Package | Exposes internal types and methods of the TS compiler API                                   |\n\n### Discussion\n\n- `#compiler-internals-and-api` on [TypeScript Discord Server](https://discord.com/invite/typescript)\n- TSP [Discussions](https://github.com/nonara/ts-patch/discussions) Board\n\n# Advanced Options\n\n**(env) `TSP_SKIP_CACHE`**\n\nSkips patch cache when patching via cli or live compiler.\n\n**(env) `TSP_COMPILER_TS_PATH`**\n\nSpecify typescript library path to use for `ts-patch/compiler` (defaults to `require.resolve('typescript')`)\n\n**(env) `TSP_CACHE_DIR`**\n\nOverride patch cache directory\n\n**(cli) `ts-patch clear-cache`**\n\nCleans patch cache & lockfiles\n\n# Maintainers\n\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/nonara\"><img src=\"https://avatars0.githubusercontent.com/u/1427565?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ron S.</b></sub></a></td>\n  </tr>\n</table>\n\n## Help Wanted\n\nIf you're interested in helping and have a _high level_ of skill with the TS compiler API, please reach out!\n\n# License\n\nThis project is licensed under the MIT License, as described in `LICENSE.md`\n"
		},
		"commits": [
			{
				"committedDate": "2023-07-28T00:36:43Z",
				"message": "feat: add typescript language service support and dynamic source file parsing",
				"messageBody": "… parsing"
			}
		],
		"commitSummary": "**Implemented Features:**\n\n* TypeScript Language Service Support\n* Dynamic Source File Parsing"
	},
	{
		"id": "R_kgDOJ65R6A",
		"description": "The WebRTC module for React Native",
		"homepageUrl": "https://react-native-webrtc.discourse.group",
		"url": "https://github.com/SamuelScheit/react-native-webrtc",
		"name": "react-native-webrtc",
		"nameWithOwner": "SamuelScheit/react-native-webrtc",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-07-12T22:09:29Z",
		"updatedAt": "2023-07-15T08:34:58Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/730c2db7cb06158afa0eb4f745704793deec4954c7f66421cd8f4d0afc32640a/SamuelScheit/react-native-webrtc",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": true,
		"languages": {
			"totalCount": 7,
			"totalSize": 458827,
			"edges": [
				{
					"size": 195786,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				},
				{
					"size": 151651,
					"node": {
						"color": "#438eff",
						"name": "Objective-C"
					}
				},
				{
					"size": 93173,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOJ65R6LFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 2
				}
			}
		},
		"object": {
			"text": "[<img src=\"https://avatars.githubusercontent.com/u/42463376\" alt=\"React Native WebRTC\" style=\"height: 6em;\" />](https://github.com/react-native-webrtc/react-native-webrtc)\n\n# React-Native-WebRTC\n\n[![npm version](https://img.shields.io/npm/v/react-native-webrtc)](https://www.npmjs.com/package/react-native-webrtc)\n[![npm downloads](https://img.shields.io/npm/dm/react-native-webrtc)](https://www.npmjs.com/package/react-native-webrtc)\n[![Discourse topics](https://img.shields.io/discourse/topics?server=https%3A%2F%2Freact-native-webrtc.discourse.group%2F)](https://react-native-webrtc.discourse.group/)\n\nA WebRTC module for React Native.\n\n## Feature Overview\n\n|  | Android | iOS | tvOS | macOS* | Windows* | Web* | Expo* |\n| :- | :-: | :-: | :-: | :-: | :-: | :-: | :-: |\n| Audio/Video | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | - | - | :heavy_check_mark: | :heavy_check_mark: |\n| Data Channels | :heavy_check_mark: | :heavy_check_mark: | - | - | - | :heavy_check_mark: | :heavy_check_mark: |\n| Screen Capture | :heavy_check_mark: | :heavy_check_mark: | - | - | - | :heavy_check_mark: | :heavy_check_mark: |\n| Plan B | - | - | - | - | - | - | - |\n| Unified Plan* | :heavy_check_mark: | :heavy_check_mark: | - | - | - | :heavy_check_mark: | :heavy_check_mark: |\n| Simulcast* | :heavy_check_mark: | :heavy_check_mark: | - | - | - | :heavy_check_mark: | :heavy_check_mark: |\n\n> **macOS** - We don't currently actively support macOS at this time.  \nSupport might return in the future.\n\n> **Windows** - We don't currently support the [react-native-windows](https://github.com/microsoft/react-native-windows) platform at this time.  \nAnyone interested in getting the ball rolling? We're open to contributions.\n\n> **Web** - The [react-native-webrtc-web-shim](https://github.com/react-native-webrtc/react-native-webrtc-web-shim) project provides a shim for [react-native-web](https://github.com/necolas/react-native-web) support.  \nWhich will allow you to use [(almost)](https://github.com/react-native-webrtc/react-native-webrtc-web-shim/tree/main#setup) the exact same code in your [react-native-web](https://github.com/necolas/react-native-web) project as you would with [react-native](https://reactnative.dev/) directly.  \n\n> **Expo** - As this module includes native code it is not available in the [Expo Go](https://expo.dev/client) app by default.  \nHowever you can get things working via the [expo-dev-client](https://docs.expo.dev/development/getting-started/) library and out-of-tree [config-plugins/react-native-webrtc](https://github.com/expo/config-plugins/tree/master/packages/react-native-webrtc) package.  \n\n> **Unified Plan** - As of version 106.0.0 Unified Plan is the only supported mode.  \nThose still in need of Plan B will need to use an older release.\n\n> **Simulcast** - As of version 111.0.0 Simulcast is now possible with ease.  \nSoftware encode/decode factories have been enabled by default.\n\n## WebRTC Revision\n\n* Currently used revision: [M118](https://github.com/jitsi/webrtc/tree/M118)\n* Supported architectures\n  * Android: armeabi-v7a, arm64-v8a, x86, x86_64\n  * iOS: arm64, x86_64\n  * tvOS: arm64\n  * macOS: (temporarily disabled)\n\n## Getting Started\n\nUse one of the following preferred package install methods to immediately get going.  \nDon't forget to follow platform guides below to cover any extra required steps.  \n\n**npm:** `npm install react-native-webrtc --save`  \n**yarn:** `yarn add react-native-webrtc`  \n**pnpm:** `pnpm install react-native-webrtc`  \n\n## Guides\n\n- [Android Install](./Documentation/AndroidInstallation.md)\n- [iOS Install](./Documentation/iOSInstallation.md)\n- [tvOS Install](./Documentation/tvOSInstallation.md)\n- [Basic Usage](./Documentation/BasicUsage.md)\n- [Step by Step Call Guide](./Documentation/CallGuide.md)\n- [Improving Call Reliability](./Documentation/ImprovingCallReliability.md)\n- [Migrating to Unified Plan](https://docs.google.com/document/d/1-ZfikoUtoJa9k-GZG1daN0BU3IjIanQ_JSscHxQesvU/edit#heading=h.wuu7dx8tnifl)\n\n## Example Projects\n\nWe have some very basic example projects included in the [examples](./examples) directory.  \nDon't worry, there are plans to include a much more broader example with backend included.  \n\n## Community\n\nCome join our [Discourse Community](https://react-native-webrtc.discourse.group/) if you want to discuss any React Native and WebRTC related topics.  \nEveryone is welcome and every little helps.  \n\n## Related Projects\n\nLooking for extra functionality coverage?  \nThe [react-native-webrtc](https://github.com/react-native-webrtc) organization provides a number of packages which are more than useful when developing Real Time Communication applications.  \n"
		},
		"commits": [
			{
				"committedDate": "2024-01-09T16:01:29Z",
				"message": "Merge branch 'react-native-webrtc:master' into master",
				"messageBody": ""
			},
			{
				"committedDate": "2023-07-12T22:09:23Z",
				"message": "add catalyst support to build script",
				"messageBody": ""
			}
		],
		"commitSummary": "Here's the modified build script with Catalyst support:\n\n```java\nandroid {\n    // ...\n    defaultConfig {\n        // ...\n        namespace 'com.reactnativeweb'\n    }\n    packagingOptions {\n        // ...\n    }\n    signingConfigs {\n        // ...\n    }\n    buildTypes {\n        debug {\n            // ...\n        }\n        release {\n            // ...\n        }\n    }\n    // New addition for Catalyst support\n    initWithCatalyst(project) {\n        initWithCatalyst project\n        useNewArchitecture true\n        java.srcDirs = [\"android/app/src/main/java\"]\n        // Add Catalyst support files\n        include \"**/*.java\"\n        // Catalyst support configuration\n        targets 'catalystApp'\n        cocoapodsWithCatalyst {\n            defaultName \"WebRTC\"\n            buildType \"Release\"\n        }\n    }\n}\n```\n\n**Category List Summary of Implemented Things:**\n*   Build\n    *   Updated configuration with Catalyst support\n*   Development\n    *   Added useNewArchitecture\n    *   Set java source directory\n*   Technology\n    *   Catalyst\n*   Implementation\n    *   Cocoapod configuration"
	},
	{
		"id": "R_kgDOJ1vRZQ",
		"description": "A program written in Python which automatically generates and uploads YouTube Short videos from selected Reddit content.",
		"homepageUrl": null,
		"url": "https://github.com/shroo3ey/YouTubeShortsGenerator",
		"name": "YouTubeShortsGenerator",
		"nameWithOwner": "shroo3ey/YouTubeShortsGenerator",
		"owner": {
			"login": "shroo3ey"
		},
		"createdAt": "2023-06-29T19:02:38Z",
		"updatedAt": "2023-12-17T23:19:51Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/78040383?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3572A5",
			"name": "Python"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 138836,
			"edges": [
				{
					"size": 138836,
					"node": {
						"color": "#3572A5",
						"name": "Python"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOJ1vRZbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "# YouTube Shorts Generator\nA program written in Python which automatically generates and uploads YouTube Short videos from selected Reddit content.\n\n## Class Diagram:\n![Class_Diagram](/readme_assets/class_diagram.jpg?raw=true \"\")\n\n## Features:\n#### Content features:\n- extensive search options (eg. subreddit, submission-sorting, submission-amount) for submissions\n- dynamically select comments of interest\n\n#### Video features:\n- multiple TTS voices\n- different music themes\n- various backround videos\n- option to overlay custom watermark\n\n#### Upload features:\n- option for AI generated video title, description and hashtags\n- auto upload functionality for YouTube, TikTok and Instagram\n- scheduled YouTube uploads\n\n#### Miscellaneous features:\n- dark/light mode\n- console output\n- progress bar\n\n\n## Mockup GUI of the program:\n![Screenshot_1](/readme_assets/mockup_1.jpg?raw=true \"Dashboard\")\n\n![Screenshot_2](/readme_assets/mockup_2.jpg?raw=true \"Library\")\n\n![Screenshot_3](/readme_assets/mockup_3.jpg?raw=true \"Settings\")\n\n\n## Auto-generated example output video:\nhttps://github.com/shroo3ey/YouTubeShortsGenerator/assets/78040383/0191c245-884d-4b11-960a-baa2230418fd\n\n\n"
		}
	},
	{
		"id": "R_kgDOJftZ8g",
		"description": "Signal protocol implementation for Node.js",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/libsignal-node",
		"name": "libsignal-node",
		"nameWithOwner": "SamuelScheit/libsignal-node",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-05-06T22:52:30Z",
		"updatedAt": "2023-05-06T22:52:30Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/d4596b9d333e04d7a9c7f32163a55db9734f66a61be80ef96670862fbcd2deef/SamuelScheit/libsignal-node",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 90891,
			"edges": [
				{
					"size": 90786,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 105,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOJftZ8rFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": {
			"text": "libsignal-node\n========\nSignal protocol implementation for Node.js based on\n[libsignal-protocol-javascript](https://github.com/WhisperSystems/libsignal-protocol-javascript).\n\n[![npm](https://img.shields.io/npm/v/libsignal.svg)](https://www.npmjs.com/package/libsignal)\n[![npm](https://img.shields.io/npm/l/libsignal.svg)](https://github.com/ForstaLabs/libsignal-node)\n\n\nOverview\n--------\nA ratcheting forward secrecy protocol that works in synchronous and\nasynchronous messaging environments.\n\n\nPreKeys\n--------\nThis protocol uses a concept called 'PreKeys'. A PreKey is an ECPublicKey and\nan associated unique ID which are stored together by a server. PreKeys can also\nbe signed.\n\nAt install time, clients generate a single signed PreKey, as well as a large\nlist of unsigned PreKeys, and transmit all of them to the server.\n\n\nSessions\n--------\nSignal Protocol is session-oriented. Clients establish a \"session,\" which is\nthen used for all subsequent encrypt/decrypt operations. There is no need to\never tear down a session once one has been established.\n\nSessions are established in one of two ways:\n\n1. PreKeyBundles. A client that wishes to send a message to a recipient can\n   establish a session by retrieving a PreKeyBundle for that recipient from the\n   server.\n2. PreKeySignalMessages. A client can receive a PreKeySignalMessage from a\n   recipient and use it to establish a session.\n\n\nState\n--------\nAn established session encapsulates a lot of state between two clients. That\nstate is maintained in durable records which need to be kept for the life of\nthe session.\n\nState is kept in the following places:\n\n* Identity State. Clients will need to maintain the state of their own identity\n  key pair, as well as identity keys received from other clients.\n* PreKey State. Clients will need to maintain the state of their generated\n  PreKeys.\n* Signed PreKey States. Clients will need to maintain the state of their signed\n  PreKeys.\n* Session State. Clients will need to maintain the state of the sessions they\n  have established.\n\n\nLicense\n--------\nLicensed under the GPLv3: http://www.gnu.org/licenses/gpl-3.0.html\n\n* Copyright 2015-2016 Open Whisper Systems\n* Copyright 2017-2018 Forsta Inc\n"
		}
	},
	{
		"id": "R_kgDOJfXrng",
		"description": "⚡️ A fast implementation of Node's `crypto` module written in C/C++ JSI",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/react-native-quick-crypto",
		"name": "react-native-quick-crypto",
		"nameWithOwner": "SamuelScheit/react-native-quick-crypto",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2023-05-05T21:18:26Z",
		"updatedAt": "2023-05-05T21:19:02Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/835d197fa5c32fb2fed4ae42dcf4993f36e5d567cedb09d0e9f7d348a64a72c3/SamuelScheit/react-native-quick-crypto",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": true,
		"languages": {
			"totalCount": 9,
			"totalSize": 453566,
			"edges": [
				{
					"size": 223800,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 184967,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 20467,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOJfXrnq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 1
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2023-05-05T21:18:20Z",
				"message": "feat: generateKeyPairSync for x25519",
				"messageBody": ""
			}
		],
		"commitSummary": "Implementation Summary:\n\n* **Library**: \n  - Written in C/C++ JSI\n  - Implementation of Node's `crypto` module\n* **Key Pair Generation**:\n  - `generateKeyPairSync` function implemented\n  - X25519 key pair generation supported"
	},
	{
		"id": "R_kgDOIKiM2A",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/js-decompiler",
		"name": "js-decompiler",
		"nameWithOwner": "SamuelScheit/js-decompiler",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2022-10-08T15:00:59Z",
		"updatedAt": "2023-02-28T19:32:30Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/f456e6c19e6958d7d9f18ae6beb55e4138684f9f89b3cfdfd4dd04107bdbd052/SamuelScheit/js-decompiler",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 118839,
			"edges": [
				{
					"size": 80591,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 37823,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 425,
					"node": {
						"color": "#89e051",
						"name": "Shell"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOIKiM2K9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 11
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2023-03-03T02:28:40Z",
				"message": "feat: generator if/else try catch",
				"messageBody": ""
			},
			{
				"committedDate": "2023-03-03T02:28:29Z",
				"message": "feat: module import/export",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-28T14:29:56Z",
				"message": "delete files",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-28T14:25:58Z",
				"message": "Merge pull request #4 from SamuelScheit/dependabot/npm_and_yarn/json5-2.2.3\n\nbuild(deps): bump json5 from 2.2.1 to 2.2.3",
				"messageBody": "…-2.2.3\n\nbuild(deps): bump json5 from 2.2.1 to 2.2.3"
			},
			{
				"committedDate": "2023-02-28T14:23:35Z",
				"message": "wip: revert generators back to async functions",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-28T14:23:21Z",
				"message": "feat: extract names/identifiers from file",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-28T14:23:21Z",
				"message": "feat: add jsx decompiler",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-28T14:23:21Z",
				"message": "feat: add test bundler",
				"messageBody": ""
			},
			{
				"committedDate": "2023-02-28T14:23:21Z",
				"message": "feat: node module dowloader + seperator",
				"messageBody": ""
			},
			{
				"committedDate": "2022-11-18T09:28:09Z",
				"message": "Merge pull request #2 from Flam3rboy/dependabot/npm_and_yarn/loader-utils-1.4.2\n\nBump loader-utils from 1.4.0 to 1.4.2",
				"messageBody": "…tils-1.4.2\n\nBump loader-utils from 1.4.0 to 1.4.2"
			},
			{
				"committedDate": "2022-10-08T15:00:52Z",
				"message": "init",
				"messageBody": ""
			}
		],
		"commitSummary": "- Control Structures: \n  - Generator if/else try catch\n- Modularization:\n  - Module import/export\n- File Operations:\n  - File deletion\n- Functionality Changes:\n  - Reverting generators back to async functions\n- Analysis and Parsing:\n  - Extracting names/identifiers from files\n  -(JSX) Decompiler\n- Testing:\n  - Test bundler\n  - Node module downloader and seperator"
	},
	{
		"id": "R_kgDOH5kCdQ",
		"description": "Leetcode solutions grouped by language",
		"homepageUrl": "",
		"url": "https://github.com/xNaCly/leet",
		"name": "leet",
		"nameWithOwner": "xNaCly/leet",
		"owner": {
			"login": "xNaCly"
		},
		"createdAt": "2022-08-29T07:58:27Z",
		"updatedAt": "2023-11-09T21:11:51Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/4a4cb966e7f190ac95b6702385474a82f6b82f0d315fe85d68a615d472d21324/xNaCly/leet",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#00ADD8",
			"name": "Go"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 8,
			"totalSize": 47510,
			"edges": [
				{
					"size": 20332,
					"node": {
						"color": "#00ADD8",
						"name": "Go"
					}
				},
				{
					"size": 9178,
					"node": {
						"color": "#dea584",
						"name": "Rust"
					}
				},
				{
					"size": 8142,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOH5kCdbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOF42CYA",
		"description": "Use the Discord app for PC to connect to any \"Spacebar\" instance.",
		"homepageUrl": "",
		"url": "https://github.com/mugman174/discord-app-location-changer",
		"name": "discord-app-location-changer",
		"nameWithOwner": "mugman174/discord-app-location-changer",
		"owner": {
			"login": "mugman174"
		},
		"createdAt": "2021-08-12T00:28:59Z",
		"updatedAt": "2024-04-27T07:08:30Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/96d91985ffa5b31fd63968e6932482a49923c1dab890204b7da99aaa9610770c/mugman174/discord-app-location-changer",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3572A5",
			"name": "Python"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 4292,
			"edges": [
				{
					"size": 4292,
					"node": {
						"color": "#3572A5",
						"name": "Python"
					}
				}
			]
		},
		"stargazerCount": 14,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOF42CYK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOFob56Q",
		"description": "p5.js port for nodejs canvas",
		"homepageUrl": "http://p5js.org/",
		"url": "https://github.com/SamuelScheit/p5js-node",
		"name": "p5js-node",
		"nameWithOwner": "SamuelScheit/p5js-node",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-06-17T19:46:42Z",
		"updatedAt": "2023-02-05T14:49:44Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/b86f922b8207d6a3ceef4bb0a0af1909e8aed355b4230fe11f401d242d3f656f/SamuelScheit/p5js-node",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": "2022-09-19T19:51:46Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 7,
		"isFork": true,
		"languages": {
			"totalCount": 2,
			"totalSize": 1284794,
			"edges": [
				{
					"size": 1264105,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 20689,
					"node": {
						"color": "#5686a5",
						"name": "GLSL"
					}
				}
			]
		},
		"stargazerCount": 13,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFob56a9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 12
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2022-09-19T12:51:39Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-15T07:37:58Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/p5.js into main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-07-15T07:37:56Z",
				"message": ":construction: rewrite with node-webgl support",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-28T17:26:53Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T20:46:39Z",
				"message": ":bug: fix package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T20:27:14Z",
				"message": ":pencil: update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T19:56:53Z",
				"message": "1.3.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T19:56:44Z",
				"message": ":pencil: update examples",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T19:51:37Z",
				"message": ":pencil: update README",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T19:47:27Z",
				"message": ":sparkles: update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T19:44:39Z",
				"message": ":tada: v1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-17T19:41:42Z",
				"message": ":heavy_minus_sign: delete unused files",
				"messageBody": ""
			}
		],
		"commitSummary": "**Update Summary**\n\n- **Breaking Changes**: \n  * :construction: Rewrite with node-webgl support\n\n- **Bug Fixes**: \n  * :bug: Fix package.json\n\n- **Documentation**:\n  * :pencil: Update README \n  * :pencil: Update README\n  * :pencil: Update examples\n\n- **Features**:\n  * :sparkles: Update package.json\n  * v1\n\n- **Miscellaneous**:\n  * :heavy_minus_sign: Delete unused files"
	},
	{
		"id": "R_kgDOFkfRUA",
		"description": "A dashboard to create and manage minecraft servers (2017)",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/minecraft-server-admin-panel",
		"name": "minecraft-server-admin-panel",
		"nameWithOwner": "SamuelScheit/minecraft-server-admin-panel",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-06-04T10:27:26Z",
		"updatedAt": "2023-08-14T23:46:28Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/e0e35ecd7ce7954ea20c2b2036bd30f31bd72891cc52624d2fcd54577a980d05/SamuelScheit/minecraft-server-admin-panel",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#4F5D95",
			"name": "PHP"
		},
		"archivedAt": "2021-10-28T22:22:33Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 3,
		"isFork": false,
		"languages": {
			"totalCount": 4,
			"totalSize": 1410702,
			"edges": [
				{
					"size": 1357997,
					"node": {
						"color": "#4F5D95",
						"name": "PHP"
					}
				},
				{
					"size": 41560,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 6294,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 9,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFkfRUK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 2
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2021-06-04T10:33:53Z",
				"message": ":tada: init",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-04T10:27:26Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOFke6nA",
		"description": "Snake game with local network multiplayer support",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/snake",
		"name": "snake",
		"nameWithOwner": "SamuelScheit/snake",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-06-04T10:04:30Z",
		"updatedAt": "2023-01-28T08:29:31Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/a8e54a7e3f47a78de2d0c1fb2b7908d1a3a34d76e4105368fb2bdd25bee125f1/SamuelScheit/snake",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": "2021-06-04T17:09:52Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 36866,
			"edges": [
				{
					"size": 25779,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 11087,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				}
			]
		},
		"stargazerCount": 3,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFke6nK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 2
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2021-06-04T10:09:33Z",
				"message": ":tada: init",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-04T10:04:30Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOFkexog",
		"description": "A simple paper.io game clone with local network multiplayer",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/paper.io",
		"name": "paper.io",
		"nameWithOwner": "SamuelScheit/paper.io",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-06-04T09:56:15Z",
		"updatedAt": "2023-01-28T08:29:31Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/a8e54a7e3f47a78de2d0c1fb2b7908d1a3a34d76e4105368fb2bdd25bee125f1/SamuelScheit/paper.io",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": "2021-06-04T17:02:21Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 2,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 44918,
			"edges": [
				{
					"size": 40198,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 4720,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				}
			]
		},
		"stargazerCount": 4,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFkexoq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 2
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2021-06-04T10:02:04Z",
				"message": ":tada: init",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-04T09:56:16Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOFkenvA",
		"description": "A program that converts text to handwriting and outputs it as an image",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/text-to-handwriting",
		"name": "text-to-handwriting",
		"nameWithOwner": "SamuelScheit/text-to-handwriting",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-06-04T09:46:19Z",
		"updatedAt": "2023-01-28T08:29:31Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/a8e54a7e3f47a78de2d0c1fb2b7908d1a3a34d76e4105368fb2bdd25bee125f1/SamuelScheit/text-to-handwriting",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f34b7d",
			"name": "C++"
		},
		"archivedAt": "2021-06-04T16:50:10Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 1,
		"isFork": false,
		"languages": {
			"totalCount": 2,
			"totalSize": 255805,
			"edges": [
				{
					"size": 254347,
					"node": {
						"color": "#f34b7d",
						"name": "C++"
					}
				},
				{
					"size": 1458,
					"node": {
						"color": "#555555",
						"name": "C"
					}
				}
			]
		},
		"stargazerCount": 2,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFkenvK9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 2
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2021-06-04T09:49:21Z",
				"message": ":tada: init",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-04T09:46:19Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOFHQg0A",
		"description": "A twitch viewer bot and multi account chat automation",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/twitch-viewer-bot",
		"name": "twitch-viewer-bot",
		"nameWithOwner": "SamuelScheit/twitch-viewer-bot",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-02-28T16:34:59Z",
		"updatedAt": "2022-06-18T12:41:53Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/34555296?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 1,
			"nodes": [
				{
					"createdAt": "2021-02-28T17:19:37Z",
					"releaseAssets": {
						"totalCount": 3,
						"nodes": [
							{
								"downloadCount": 0
							},
							{
								"downloadCount": 0
							},
							{
								"downloadCount": 0
							}
						]
					}
				}
			]
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 148223,
			"edges": [
				{
					"size": 111316,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 35270,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 1637,
					"node": {
						"color": "#dea584",
						"name": "Rust"
					}
				}
			]
		},
		"stargazerCount": 1,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOFHQg0LFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 83
				}
			}
		},
		"object": {
			"text": "\n"
		},
		"commits": [
			{
				"committedDate": "2022-08-19T20:19:49Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-18T14:35:15Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-18T14:30:43Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-18T14:28:39Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-18T12:57:07Z",
				"message": "upload",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-18T11:58:39Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-18T11:42:20Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:28:09Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:27:48Z",
				"message": "user-agent",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:18:25Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:18:03Z",
				"message": "x",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:17:53Z",
				"message": "body",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:12:27Z",
				"message": "util",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:11:40Z",
				"message": "util",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:10:19Z",
				"message": "util",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:05:30Z",
				"message": "util",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T14:00:31Z",
				"message": "util",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T13:53:58Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T13:45:10Z",
				"message": "new method",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T13:39:29Z",
				"message": "v2",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-17T13:39:26Z",
				"message": "upload",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T19:37:43Z",
				"message": "upload",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T19:09:11Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T18:08:49Z",
				"message": "botcounter",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T16:39:48Z",
				"message": "bot counter + startup mode",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T16:31:06Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T16:15:50Z",
				"message": "threads",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T14:25:41Z",
				"message": "request with proxy",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T14:23:34Z",
				"message": "remove log",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T14:20:33Z",
				"message": "bar",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T14:19:00Z",
				"message": "fix request",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T13:22:39Z",
				"message": "fix",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T12:50:51Z",
				"message": "fix opp",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T12:48:09Z",
				"message": "opp + certificate",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T12:41:07Z",
				"message": "fix fetch request",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T12:20:36Z",
				"message": "loader",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T12:16:31Z",
				"message": "test2",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T11:58:01Z",
				"message": "upload proxies",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T11:55:27Z",
				"message": "increase perf",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T11:53:04Z",
				"message": "fix loader",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T11:52:07Z",
				"message": "remove log",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T11:50:57Z",
				"message": "threads proxy checking",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-16T11:18:38Z",
				"message": "tests",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-15T13:02:49Z",
				"message": "v2",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-15T13:02:42Z",
				"message": "upload: proxies",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-05T20:09:12Z",
				"message": "puppeteer test",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-05T19:27:07Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/twitch-viewer-bot",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-05T19:27:05Z",
				"message": "feat: chat + event websocket",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-05T19:17:54Z",
				"message": "feat: websocket connection",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-05T18:14:22Z",
				"message": "fix: viewers",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-04T20:36:49Z",
				"message": "chore",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-04T20:36:37Z",
				"message": "feat: display live viewer count",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-04T20:36:04Z",
				"message": "feat: send all analytics events",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-04T20:35:46Z",
				"message": "upload: events",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-04T20:35:15Z",
				"message": "feat: add more cli options",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T22:53:34Z",
				"message": "chore",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T22:53:24Z",
				"message": "fix: user agent",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T22:53:14Z",
				"message": "feat: viewer",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T22:52:40Z",
				"message": "feat: types",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T22:52:26Z",
				"message": "refactor: old import -> require",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T22:52:09Z",
				"message": "feat: types for analytics",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T22:51:57Z",
				"message": "upload: analytics events",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:12:55Z",
				"message": "fix: bot + loader",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:12:44Z",
				"message": "feat: cli",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:12:36Z",
				"message": "feat: viewer",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:12:28Z",
				"message": "feat: types",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:12:18Z",
				"message": "feat: request handler",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:12:08Z",
				"message": "feat: queries",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:11:53Z",
				"message": "feat: logger",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T16:11:23Z",
				"message": "upload: user agents",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T12:22:40Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/twitch-viewer-bot",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T12:22:39Z",
				"message": "feat: user agent parser",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T12:22:28Z",
				"message": "upload: assets",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T12:02:40Z",
				"message": "feat: random + user_agent",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T11:52:01Z",
				"message": "Merge branch 'master' of https://github.com/Flam3rboy/twitch-viewer-bot",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-03T11:51:58Z",
				"message": "feat: bot + manager",
				"messageBody": ""
			},
			{
				"committedDate": "2022-06-01T19:44:55Z",
				"message": "rewrite project",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-06T17:10:00Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-02T22:25:36Z",
				"message": ":bug: fix linux tor",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-02T21:46:55Z",
				"message": ":zap: improve tor performance: do not restart tor -> just change ip",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-02T17:27:02Z",
				"message": "fix viewer bot",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-01T23:25:51Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-01T22:04:16Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Main Features:**\n- Twitch viewer bot\n- Multi account chat automation\n- Websocket connection\n- Live viewer count display\n- Analytics event sending\n- CLI options\n- User agent parser\n- Tor performance improvement\n\n**Performance and Fixes:**\n- Increased performance\n- Fixed Linux Tor issue\n- Fixed bot loader\n- Fixed request and fetch requests\n- Fixed viewer bot\n- Fixed user agent\n\n**Implementation:**\n- Puppeteer test\n- Threads for proxy checking\n- Proxy uploading\n- Certificate addition\n- Opp with certificate\n- Loader\n- Request handler\n- Query implementation\n- Logger addition\n- Multi-threading\n- Event handling"
	},
	{
		"id": "R_kgDOFF_qPg",
		"description": "A Pokemon-like 2D Game written in Java",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/PokemonGame",
		"name": "PokemonGame",
		"nameWithOwner": "SamuelScheit/PokemonGame",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2021-02-24T08:28:23Z",
		"updatedAt": "2024-04-09T23:04:49Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/341830206/1abca23f-ed75-4c13-bafe-4f7a418c0666",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#b07219",
			"name": "Java"
		},
		"archivedAt": "2021-09-17T01:15:07Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 1,
			"nodes": [
				{
					"createdAt": "2021-06-07T14:03:24Z",
					"releaseAssets": {
						"totalCount": 1,
						"nodes": [
							{
								"downloadCount": 64
							}
						]
					}
				}
			]
		},
		"forkCount": 2,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 64941,
			"edges": [
				{
					"size": 64941,
					"node": {
						"color": "#b07219",
						"name": "Java"
					}
				}
			]
		},
		"stargazerCount": 7,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOFF_qPq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 63
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2021-09-16T18:14:53Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:30:36Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:28:01Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:23:52Z",
				"message": "Delete Class Diagram.png",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:23:44Z",
				"message": "Add files via upload",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:18:26Z",
				"message": "Add files via upload",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:17:28Z",
				"message": "Delete crash.txt",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:17:20Z",
				"message": "Delete game.log.lck",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-09T17:17:15Z",
				"message": "Delete game.log.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T14:03:24Z",
				"message": "fix heal screen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T14:01:29Z",
				"message": "fix dialogs + fight + heal screen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T13:56:06Z",
				"message": "Merge remote-tracking branch 'origin/main' into main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T13:56:00Z",
				"message": "fix dialogs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T13:49:02Z",
				"message": "move files into java/main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T13:30:52Z",
				"message": "fix hp + heal screen+ borders",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-07T13:10:15Z",
				"message": "update stuff",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-05T21:58:12Z",
				"message": "heal + player input + select + trigger",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-05T21:36:13Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/PokemonGame into main",
				"messageBody": "…main"
			},
			{
				"committedDate": "2021-06-05T21:35:50Z",
				"message": "fix spawnpoints",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-05T20:48:47Z",
				"message": "add chatbox",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-05T20:43:55Z",
				"message": "chatbox",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-05T20:43:41Z",
				"message": "fix dialog",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-05T20:33:05Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/PokemonGame into main",
				"messageBody": "…main"
			},
			{
				"committedDate": "2021-06-05T20:15:57Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/PokemonGame into main",
				"messageBody": "…main"
			},
			{
				"committedDate": "2021-06-05T20:15:05Z",
				"message": "fix spawnpoint",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-05T19:35:42Z",
				"message": "fix getPokemon db",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-04T19:35:35Z",
				"message": "damage + attack pokemon sprite",
				"messageBody": ""
			},
			{
				"committedDate": "2021-06-04T11:46:02Z",
				"message": "Merge remote-tracking branch 'origin/main' into main\n\n# Conflicts:\n#\tGameDatabase.db\n#\tsrc/com/pokemon/game/DbCommands.java",
				"messageBody": "# Conflicts:\n#\tGameDatabase.db\n#\tsrc/com/pokemon/game/DbCommands.java"
			},
			{
				"committedDate": "2021-06-04T11:43:48Z",
				"message": "Attack + Particles + db update HP + FightScreen + update pikachu sprite + healscreen + SelectPokemonScreen",
				"messageBody": "…te + healscreen + SelectPokemonScreen"
			},
			{
				"committedDate": "2021-05-20T17:34:59Z",
				"message": "added character sprite animations",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-20T15:28:08Z",
				"message": "spritesheet pokemon",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-19T06:07:46Z",
				"message": "spritesheet pokemon",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-04T10:46:34Z",
				"message": "DB connection",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-28T07:11:22Z",
				"message": "WIP fightscreen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-27T10:47:57Z",
				"message": "WIP fightscreen + data model classes",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-27T10:47:09Z",
				"message": "fix keyboard  menu",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-21T05:10:59Z",
				"message": "fix camera for multiple maps",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-11T13:25:01Z",
				"message": "game database",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-11T13:16:18Z",
				"message": "Keyboard Pause menu",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-24T17:48:58Z",
				"message": "Merge remote-tracking branch 'origin/main' into main\n\n# Conflicts:\n#\tsrc/com/pokemon/game/Pausescreen.java",
				"messageBody": "# Conflicts:\n#\tsrc/com/pokemon/game/Pausescreen.java"
			},
			{
				"committedDate": "2021-03-24T17:47:15Z",
				"message": "Pausescreen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-24T13:25:41Z",
				"message": "pausescreen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-24T08:15:18Z",
				"message": "Merge remote-tracking branch 'origin/main' into main\n\n# Conflicts:\n#\tsrc/com/pokemon/game/Pausescreen.java",
				"messageBody": "# Conflicts:\n#\tsrc/com/pokemon/game/Pausescreen.java"
			},
			{
				"committedDate": "2021-03-24T08:14:32Z",
				"message": "pausescreen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-23T11:42:23Z",
				"message": "display ingame + dialogs",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-17T08:08:50Z",
				"message": "Merge remote-tracking branch 'origin/main' into main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-17T08:08:46Z",
				"message": "toggle pause",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-17T08:00:57Z",
				"message": "fix screens + font size",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-17T07:46:06Z",
				"message": "fix player sprite + dialog",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-17T07:30:59Z",
				"message": "Merge remote-tracking branch 'origin/main' into main",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-17T07:30:51Z",
				"message": "player movement",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-17T07:21:19Z",
				"message": "startscreen",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-15T16:19:56Z",
				"message": "render Sprite",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-15T14:21:24Z",
				"message": "fix player movement",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-10T07:58:07Z",
				"message": "added Player",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-10T07:32:19Z",
				"message": "Merge branch 'main' of https://github.com/Flam3rboy/PokemonGame into main",
				"messageBody": "…main"
			},
			{
				"committedDate": "2021-03-10T07:32:16Z",
				"message": "added Player",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-10T07:00:49Z",
				"message": "hello world map",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-09T12:05:09Z",
				"message": "fix map",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-03T08:21:15Z",
				"message": "add tilemap",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-03T08:05:41Z",
				"message": "test tile map",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-24T14:24:32Z",
				"message": "initalize",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-24T08:28:24Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Implementations:**\n\n1. **Gameplay Mechanics**\n\t- Pokemon database connection and manipulation\n\t- Fighting mechanics\n\t- Healing mechanics\n\t- Player input handling\n\t- Pause menu\n\t- Screen transitions\n2. **Graphics and Animations**\n\t- Sprite rendering\n\t- Sprite animations\n\t- Particles and effects\n\t- Character and Pokemon sprite animations\n\t- Sprite sheet handling\n3. **User Interface**\n\t- Dialog systems\n\t- Chatbox\n\t- Menu systems\n\t- Font size adjustments\n4. **Game World and Maps**\n\t- Tilemap rendering\n\t- Multiple map support\n\t- Camera adjustments\n5. **Database and Data Management**\n\t- Database connection establishment\n\t- Data model classes\n6. **Game Features and States**\n\t- Start screen\n\t- Pause screen\n\t- Fight screen\n\t- Heal screen\n\t- Select Pokemon screen"
	},
	{
		"id": "R_kgDOEzUSOQ",
		"description": "A Database abstraction layer for different DB Engines",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/Lambert-orm",
		"name": "Lambert-orm",
		"nameWithOwner": "SamuelScheit/Lambert-orm",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2020-12-17T09:30:09Z",
		"updatedAt": "2023-01-13T11:30:10Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/50d15ca96f20afa0c5c151eecad3a7593194045c5ed2d50918564583ffd7b4b0/SamuelScheit/Lambert-orm",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3178c6",
			"name": "TypeScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 24087,
			"edges": [
				{
					"size": 24087,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				}
			]
		},
		"stargazerCount": 2,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOEzUSObFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 64
				}
			}
		},
		"object": {
			"text": "# Lambert-db\nA Database abstraction layer for different DB Engines\n\nThis allows easy access to a database much like like accessing an object.\n\nThe library design facilitates exchanging the underlying database engine without changing your application code.\n\nAlso it only get's/set's the necessary data for the operations and not the whole table unlike quick.db.\n\n## Installation\n```\nnpm i lambert-db\n# or \"yarn add lambert-db\"\n```\n\n## Usage\nES5 import\n\n```js\nrequire(\"lambert-db\");\n```\nor ES6 import\n\n```js\nimport \"lambert-db\";\n```\n\n## Database\nChoose a database engine: ``MongoDatabase``\n\nAt the moment there is only an implementation for MongoDB available, however I will add others.\nYou can also implement your own database class and submit a pull request.\n\nEvery Database has an ``.init()`` method whose execution must be awaited before using the database.\n```ts\nclass Database {\n    init   (): Promise<any>;\n    destroy(): Promise<any>;\n    data     : DatastoreInterface; // ES6 Proxy Object\n}\n```\nTo use the database, access the ``.data`` property and specify the path.\n#### Example\n```js\ndb.data.users.name // (the path for this example is users.name). \n``` \nThe below operations can then be called on the path:\n\n## Operations\n\n```ts\nget(projection?: Projection): Promise<any>; // returns a promise with the value for this path\nfirst()                     : Promise<any>; // returns a promise with the first entry\nlast()                      : Promise<any>; // returns a promise with the last entry\nrandom()                    : Promise<any>; // returns a promise with a random entry \ndelete()                    : Promise<boolean>; // deletes the value for this path\nset(value: any)             : Promise<boolean>; // sets the value for this path\nexists()                    : Promise<boolean>; // checks if a value for this path exists\npush(value: any)            : Promise<boolean>; // pushes the value into the array for this path\n```\nAll operations are asynchronous and return a [promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise) which have to be awaited.\nThe return value of type ``Promise<boolean>`` indicates a successful operation.\n#### Example\n```js\nawait db.data.users.push({id: 1, name: \"test\", posts: [1,2,3] }) // this will insert this user object\nawait db.data.users.name.set(\"hello\") // this will set the name hello for all users\nawait db.data.users.name.get() // this will return an array with the users names\nawait db.data.users.delete() // this will delete all users\n```\n\n### Projection\nThe ``.get(projection?: Projection)`` function can optionally accept a projection parameter.\n\nA Projection is a Key-Value Object of booleans that indicates whether these properties should be received. \n```ts\ntype Projection = {\n    [index: string]: boolean;\n};\n\nvar projection = { id: true, name: true}\n```\n\nFor example, a database with a ``boards`` table that contains  board objects like: ``{ id: number, name: string, members: [], posts: [] }`` and only ids and names should be accessed. \n\nThe projection parameters can be used to specify multiple but not all properties to be retrieved e.g:\n```js\nawait db.data.boards.get({ id: true, name: true}); // This will only return the id and name of the boards\n```\n\n### Filter sub arrays\n\nFilters can be used to get a specific card in the example above, by calling a property with ``.property(filter)`` when accessing a path.\n\nA filter can be an object or a function which will be called for every entry in an array and can be specified for each property in a path.\n\n#### Example:\n```js\nawait db.data.boards({id: 1}).get() // This will return the board with id: 1 and insert \nawait db.data.boards({id: 1}).posts({id: 0}).comments.push({author: 1, content: \"test\"}) // This will post a comment to board.id: 1 and post.id: 0\n```\n\n\n## Full Example\n```js\nconst { MongoDatabase } = require(\"lambert-db\");\n\nconst db: Database = new MongoDatabase();\n\ndb.init().then(async () => {\n\tlet success = await db.data.users.push({ id: 0, roles: [] });\n\tif (!success) throw new Error(\"couldn't insert new user\");\n\n\tlet user = await db.data.users({ id: 0 }).get();\n\tconsole.log(user);\n\t\n\tsuccess = await db.data.users({ id: 0 }).roles.push({ type: \"admin\", name: \"test\", permissions: 2 });\n\tif (!success) throw new Error(\"couldn't add role for user\");\n\n\tconsole.log(await db.data.users.get({ id: true}));\n\t\n\tsuccess = await db.data.users({ id: 1 }).delete();\n\tif (!success) throw new Error(\"couldn't delete user\");\n});\n```\n"
		},
		"commits": [
			{
				"committedDate": "2023-07-19T11:09:48Z",
				"message": "Merge pull request #3 from SamuelScheit/dependabot/npm_and_yarn/mongoose-5.13.20\n\n⬆️ Bump mongoose from 5.12.3 to 5.13.20",
				"messageBody": "…ose-5.13.20\n\n⬆️ Bump mongoose from 5.12.3 to 5.13.20"
			},
			{
				"committedDate": "2022-10-19T17:14:28Z",
				"message": "Update package.json",
				"messageBody": ""
			},
			{
				"committedDate": "2022-10-19T17:14:10Z",
				"message": "Delete .DS_Store",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-20T09:01:02Z",
				"message": "1.2.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-20T09:01:00Z",
				"message": ":arrow_up: update mnjsf",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T15:57:01Z",
				"message": "1.2.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-24T15:56:42Z",
				"message": ":bug: auto convert ObjectId to String",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-15T13:29:57Z",
				"message": "1.2.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-15T13:29:50Z",
				"message": ":wrench: build",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T19:18:32Z",
				"message": "1.2.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-04-06T19:17:43Z",
				"message": ":zap: delete memory server",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T11:33:00Z",
				"message": "1.2.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-03-30T11:32:44Z",
				"message": ":bug: export * types",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:46:08Z",
				"message": "1.1.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-22T16:45:54Z",
				"message": ":bug: fix null in Result",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T07:43:02Z",
				"message": "1.1.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-10T07:42:53Z",
				"message": "convertResult Long -> BigInt",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-08T14:38:04Z",
				"message": "1.1.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-08T14:37:52Z",
				"message": ":sparkles: [MongoDB] update date on change stream",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T16:56:29Z",
				"message": "1.1.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-07T16:56:24Z",
				"message": ":art: add mongodb options",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T21:01:30Z",
				"message": "1.1.5",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-06T21:01:13Z",
				"message": "MongoDB cache Options",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T23:26:10Z",
				"message": "1.1.4",
				"messageBody": ""
			},
			{
				"committedDate": "2021-02-01T23:26:01Z",
				"message": ":sparkles: bigint insertion support",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T17:54:05Z",
				"message": "1.1.3",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T17:53:52Z",
				"message": ":art: update name + fix undefined cache",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T14:16:19Z",
				"message": "1.1.2",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-31T14:16:10Z",
				"message": ":bug: disable replication set",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:53:35Z",
				"message": "1.1.1",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-30T18:53:11Z",
				"message": ":bug: fix replSet + Cache",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-29T16:51:16Z",
				"message": "1.1.0",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-29T16:51:09Z",
				"message": ":sparkles: Change Streams",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T14:30:11Z",
				"message": "1.0.9",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T14:30:09Z",
				"message": ":bug: fix top level filter array return",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T14:26:34Z",
				"message": "1.0.8",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T14:26:27Z",
				"message": ":bug: fix not array returned",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T14:24:19Z",
				"message": "1.0.7",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T14:24:17Z",
				"message": ":bug: fix top level push",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T13:52:08Z",
				"message": "1.0.6",
				"messageBody": ""
			},
			{
				"committedDate": "2021-01-21T13:52:01Z",
				"message": ":bug: fix top level collection filter",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-30T21:43:12Z",
				"message": "1.0.5",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-30T21:43:06Z",
				"message": ":bug: fix",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-30T21:33:47Z",
				"message": "1.0.4",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-30T21:33:41Z",
				"message": ":bug: fix lambert get returns array",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-24T11:16:18Z",
				"message": "1.0.3",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-24T11:16:16Z",
				"message": ":bug: typo",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-24T11:15:06Z",
				"message": "1.0.2",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-24T11:15:03Z",
				"message": "update readme",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-24T11:07:59Z",
				"message": "Merge branch 'master' of https://github.com/Trenite/Lambert-db",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-24T11:07:55Z",
				"message": "1.0.1",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-24T11:07:16Z",
				"message": "update name",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T21:46:38Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T19:16:14Z",
				"message": ":pencil: update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T19:06:05Z",
				"message": ":pencil: update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T18:39:45Z",
				"message": ":pencil: update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T17:59:24Z",
				"message": ":pencil: Update docs",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T17:55:13Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T17:37:40Z",
				"message": ":pencil: Readme",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-23T15:37:18Z",
				"message": ":sparkles: added projection to .get(projection)",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T19:01:11Z",
				"message": ":bug: fix typings",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:07:46Z",
				"message": ":white_check_mark: build",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T17:00:19Z",
				"message": ":tada: MongoDB support",
				"messageBody": ""
			},
			{
				"committedDate": "2020-12-17T09:30:10Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Database Features**\n\n* Change Streams\n* MongoDB support\n* Support for projection in get method\n* Bigint insertion support\n* Auto convert ObjectId to String\n* MongoDB update date on change stream\n\n**Fixes**\n\n* Fix null in Result\n* Fix top level filter array return\n* Fix not array returned\n* Fix top level push\n* Fix top level collection filter\n* Fix lambert get returns array\n* Fix REPL set\n* Fix cache\n* Fix typings\n* Fix undefined cache\n\n**Documentation**\n\n* Update README.md\n* Update docs\n\n**Build and Other**\n\n* Build\n* Update package.json\n* Delete .DS_Store\n* Update mnjsf\n* Delete memory server\n* Export * types"
	},
	{
		"id": "R_kgDOEq6GIg",
		"description": "Artificial intelligence for the game Carcassonne",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/carcassonne-ai",
		"name": "carcassonne-ai",
		"nameWithOwner": "SamuelScheit/carcassonne-ai",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2020-11-16T21:08:54Z",
		"updatedAt": "2024-01-02T11:35:31Z",
		"openGraphImageUrl": "https://repository-images.githubusercontent.com/313427490/c098d9c6-0601-4144-a004-3f84b2d246fd",
		"usesCustomOpenGraphImage": true,
		"primaryLanguage": {
			"color": "#3572A5",
			"name": "Python"
		},
		"archivedAt": "2023-09-14T11:26:31Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 5,
			"totalSize": 478489,
			"edges": [
				{
					"size": 429777,
					"node": {
						"color": "#3572A5",
						"name": "Python"
					}
				},
				{
					"size": 35215,
					"node": {
						"color": "#3178c6",
						"name": "TypeScript"
					}
				},
				{
					"size": 9585,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				}
			]
		},
		"stargazerCount": 7,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "main",
			"id": "REF_kwDOEq6GIq9yZWZzL2hlYWRzL21haW4",
			"target": {
				"history": {
					"totalCount": 4
				}
			}
		},
		"object": null,
		"commits": [
			{
				"committedDate": "2022-06-30T16:18:02Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-01T17:42:47Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2022-01-01T17:41:03Z",
				"message": "Add files via upload",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-08T17:08:06Z",
				"message": ":tada: upload",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOD6ZLRg",
		"description": null,
		"homepageUrl": null,
		"url": "https://github.com/Maxwell089/skillshare",
		"name": "skillshare",
		"nameWithOwner": "Maxwell089/skillshare",
		"owner": {
			"login": "Maxwell089"
		},
		"createdAt": "2020-05-09T11:31:08Z",
		"updatedAt": "2020-05-26T13:48:51Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/64216572?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 150588,
			"edges": [
				{
					"size": 149634,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 830,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				},
				{
					"size": 124,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOD6ZLRrFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOC5cKZw",
		"description": "Hier Flam3rboy, das ist der Bot... Falls etwas nicht klappt, schreib du mich an, der Raphi soll mich einfach anschreiben!",
		"homepageUrl": null,
		"url": "https://github.com/onpointbtw/Bot-Slyze-29.06.2019",
		"name": "Bot-Slyze-29.06.2019",
		"nameWithOwner": "onpointbtw/Bot-Slyze-29.06.2019",
		"owner": {
			"login": "onpointbtw"
		},
		"createdAt": "2019-06-29T21:00:02Z",
		"updatedAt": "2019-08-22T18:05:28Z",
		"openGraphImageUrl": "https://avatars.githubusercontent.com/u/51333265?s=400&v=4",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#3572A5",
			"name": "Python"
		},
		"archivedAt": null,
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 1,
			"totalSize": 91176,
			"edges": [
				{
					"size": 91176,
					"node": {
						"color": "#3572A5",
						"name": "Python"
					}
				}
			]
		},
		"stargazerCount": 0,
		"isPrivate": true,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOC5cKZ7FyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 0
				}
			}
		},
		"object": null
	},
	{
		"id": "R_kgDOCw3skQ",
		"description": "Collection of old discord bots",
		"homepageUrl": "",
		"url": "https://github.com/SamuelScheit/discord-bots",
		"name": "discord-bots",
		"nameWithOwner": "SamuelScheit/discord-bots",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2019-05-07T19:01:24Z",
		"updatedAt": "2023-07-19T11:09:21Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/f42974c7e880c4ec074adee80e41bc10b9f5bf0b1a5d1b4dc9c9d77e6861f9a6/SamuelScheit/discord-bots",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": "2023-07-19T11:09:21Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 15,
		"isFork": false,
		"languages": {
			"totalCount": 3,
			"totalSize": 2960302,
			"edges": [
				{
					"size": 2211740,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 742391,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				},
				{
					"size": 6171,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 5,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOCw3skbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 4
				}
			}
		},
		"object": {
			"text": "## Discord Bots\nThis is a very old collection of many discord bots I programmed in the past\n\nOne of them was [Trenite](https://github.com/trenite/trenite) with 100+ commands.\n"
		},
		"commits": [
			{
				"committedDate": "2023-03-10T00:53:47Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-11-22T17:40:47Z",
				"message": ":sparkles: Minecraft server status bot",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:39:33Z",
				"message": "Create README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2021-05-28T16:37:33Z",
				"message": ":tada: init",
				"messageBody": ""
			}
		],
		"commitSummary": " "
	},
	{
		"id": "R_kgDOCcummQ",
		"description": "A simple Database-Browser with which you can view and change MYSQL Databases",
		"homepageUrl": null,
		"url": "https://github.com/SamuelScheit/Database-Browser",
		"name": "Database-Browser",
		"nameWithOwner": "SamuelScheit/Database-Browser",
		"owner": {
			"login": "SamuelScheit"
		},
		"createdAt": "2019-01-06T20:07:22Z",
		"updatedAt": "2023-01-28T10:20:48Z",
		"openGraphImageUrl": "https://opengraph.githubassets.com/ee630ec0254aa7fbd9e8c09c4d83ea56ae6751734160b17d3f2798b5e545a155/SamuelScheit/Database-Browser",
		"usesCustomOpenGraphImage": false,
		"primaryLanguage": {
			"color": "#f1e05a",
			"name": "JavaScript"
		},
		"archivedAt": "2021-03-01T03:36:36Z",
		"discussions": {
			"totalCount": 0
		},
		"releases": {
			"totalCount": 0,
			"nodes": []
		},
		"forkCount": 0,
		"isFork": false,
		"languages": {
			"totalCount": 4,
			"totalSize": 1012497,
			"edges": [
				{
					"size": 984097,
					"node": {
						"color": "#f1e05a",
						"name": "JavaScript"
					}
				},
				{
					"size": 21642,
					"node": {
						"color": "#563d7c",
						"name": "CSS"
					}
				},
				{
					"size": 4832,
					"node": {
						"color": "#e34c26",
						"name": "HTML"
					}
				}
			]
		},
		"stargazerCount": 4,
		"isPrivate": false,
		"defaultBranchRef": {
			"name": "master",
			"id": "REF_kwDOCcummbFyZWZzL2hlYWRzL21hc3Rlcg",
			"target": {
				"history": {
					"totalCount": 18
				}
			}
		},
		"object": {
			"text": "# Database Browser\n## Archived\n\nA simple Database-Browser in HTML, CSS, JS and PHP with which you can view and change MYSQL Databases\n\n## Example\n\n![Example](example.png)\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes.\n\n### Prerequisites\n\nYou need to install the LAMP stack: https://www.linode.com/docs/web-servers/lamp/install-lamp-stack-on-ubuntu-16-04/\n\n### Installing\n\nTo install it, enter these commands in your Terminal:\n\n```\ncd /var/www/html/\ngit clone https://github.com/Flam3rboy/Database-Browser.git\n```\n\n## Built With\n\n-   [jQuery](http://jquery.com/) - JS Framework\n-   [Bootstrap](https://getbootstrap.com/) - HTML, CSS, and JS library\n-   [Material Design for Bootstrap](https://mdbootstrap.com/) -Theme for Bootstrap\n-   [jQuery lined Textarea Plugin](http://alan.blog-city.com/jquerylinedtextarea.htm) - Lined Div\n-   [Popper JS](https://popper.js.org/) - Poppers in Web Applications\n-   [Sorttable](http://www.kryogenix.org/code/browser/sorttable/) - Sort HTML Tables\n\n## Versioning\n\nI use [GIT](https://git-scm.com/) for versioning. For the versions available, see the [commits on this repository](https://github.com/Flam3rboy/Database-Browser/commits/master).\n\n## Authors\n\n-   **Flam3rboy** - Student\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n"
		},
		"commits": [
			{
				"committedDate": "2021-02-28T19:36:03Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-17T23:41:22Z",
				"message": "example.png",
				"messageBody": ""
			},
			{
				"committedDate": "2020-07-17T23:39:18Z",
				"message": "example.png",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T20:29:30Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T20:26:43Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T20:09:53Z",
				"message": "Update README.md",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T20:00:34Z",
				"message": "Revert \"Revert \"Removed personal Auth script\"\"\n\nThis reverts commit f95b0ecdbf5bd8fd899d7796677133f0a23055b3.",
				"messageBody": "This reverts commit f95b0ecdbf5bd8fd899d7796677133f0a23055b3."
			},
			{
				"committedDate": "2019-01-06T20:00:13Z",
				"message": "Revert \"Removed personal Auth script\"\n\nThis reverts commit b43dc5ef3c230ba1fb4dcd736a5bb5d28ed15751.",
				"messageBody": "This reverts commit b43dc5ef3c230ba1fb4dcd736a5bb5d28ed15751."
			},
			{
				"committedDate": "2019-01-06T19:10:56Z",
				"message": "removing unused scripts",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T19:09:39Z",
				"message": "Cleaning unused scripts",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T19:06:48Z",
				"message": "Removed personal Auth script",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T19:05:10Z",
				"message": "XSS Prevent",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T18:56:03Z",
				"message": "Removed support to execute own SQL cmds",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T18:42:12Z",
				"message": "Adding Scrollbar to sidebar",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T17:32:30Z",
				"message": "Removed Personal user auth script",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T17:32:13Z",
				"message": "Formatting",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T17:31:01Z",
				"message": "Version 1",
				"messageBody": ""
			},
			{
				"committedDate": "2019-01-06T16:38:35Z",
				"message": "Initial commit",
				"messageBody": ""
			}
		],
		"commitSummary": "**Database Browser Implementation Summary**\n\n**Security**\n- XSS Prevent\n- Removed support to execute own SQL cmds\n\n**Auth and Access**\n- Removed Personal user auth script\n- Removed personal Auth script\n\n**Visual Updates**\n- Adding Scrollbar to sidebar\n\n**Code Cleanup and Formatting**\n- Removing unused scripts\n- Cleaning unused scripts\n- Formatting\n\n**Project Management**\n- Version 1\n- Initial commit"
	}
]
